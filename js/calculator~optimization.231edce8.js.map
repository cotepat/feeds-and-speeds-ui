{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./node_modules/nerdamer/nerdamer.core.js","webpack:///../../../src/components/VDataTable/VSimpleTable.ts","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./src/utils/units.ts","webpack:///../../../src/components/VGrid/VCol.ts","webpack:///(webpack)/buildin/module.js","webpack:///./src/utils/material.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/selectable/index.ts","webpack:///../../../src/components/VSwitch/VSwitch.ts","webpack:///./src/utils/calculator.ts","webpack:///./src/utils/machine.ts"],"names":["breakpoints","ALIGNMENT","makeProps","props","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","val","breakpoint","prop","cache","name","functional","tag","dense","noGutters","render","children","cacheKey","String","classList","value","h","data","staticClass","class","nerdamer","imports","version","_","Parser","bigInt","bigDec","set","precision","Groups","PRIMES","CUSTOM_OPERATORS","Settings","callPeekers","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","IMAGINARY","FUNCTION_MODULES","Math","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","IMPLIED_MULTIPLICATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","EXPRESSION_DECP","DEFAULT_DECP","VECTOR","PARENTHESIS","SQRT","ABS","FACTORIAL","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","E","LOG","LOG10","LOG10_LATEX","MAX_EXP","SCIENTIFIC_MAX_DECIMAL_PLACES","SCIENTIFIC_IGNORE_ZERO_EXPONENTS","roots","x","y","i","j","nthpow","pow","N","P","S","EX","FN","PL","CB","CP","CONST_HASH","EXPRESSIONS","VARS","RESERVED","WARNINGS","err","msg","ErrorObj","Error","customError","message","this","undefined","error","stack","prototype","create","isReserved","indexOf","allSame","arr","last","l","length","equals","warn","push","SHOW_WARNINGS","console","validateName","typ","regex","test","InvalidVariableNameError","scientificToDecimal","num","nsign","sign","abs","zero","parts","toLowerCase","split","e","pop","coeff_array","slice","Array","join","dec","isPrime","n","q","floor","sqrt","knownVariable","variable","o","isNumber","allNumeric","isFraction","isSymbol","multiplier","toDecimal","obj","Symbol","isExpression","Expression","variables","poly","vars","c","add","isNaN","group","prevgroup","previousGroup","power","symbols","firstObject","args","sort","arraySum","toNumber","sum","parse","Number","separate","symbol","expand","insert","key","sym","clone","each","isConstant","fname","fillHoles","isVector","Vector","isMatrix","Matrix","isSet","Set","isNumericSymbol","isVariableSymbol","isArray","isInt","toString","isNegative","lessThan","stringify","inBrackets","stringReplace","from","to","with_str","substr","customType","custom","sameSign","a","b","format","call","arguments","shift","new_str","replace","match","index","arg","range","start","end","step","keys","both","compare","sym1","sym2","comparison","scope","random","block","setFunction","params_array","body","functions","mapped_function","params","arrayMax","max","apply","arrayMin","min","arrayEqual","arr1","arr2","arrayClone","new_array","arrayAddSlices","slices","delta","retval","nroots","unwrapPARENS","toLinear","_roots","toPolarFormArray","evaluate","r","den","p","formula","t","fromArray","root","negate","map","multiply","imaginary","comboSort","combined","na","nb","decompose_fn","fn","wrt","as_obj","ax","stripVar","subtract","divide","nround","s","MAX_VALUE","round","getU","u","v","clearU","indx","hasOwnProperty","even","evenFraction","arrayUnique","item","arrayGetVariables","concat","removeDuplicates","condition","conditionType","seen","temp","reserveNames","remove","indexOrKey","result","splice","setting","f","opt","current_setting","importFunctions","arguments2Array","getCoeffs","info","coeffs","term","contains","coeff","convertToVector","vector","elements","generatePrimes","upto","last_prime","allNumbers","allConstants","isPi","isE","mix","isComposite","isLinear","expanded","DivisionByZero","ParseError","UndefinedError","OutOfFunctionDomainError","MaximumIterationsReached","NerdamerTypeError","ParityError","OperatorError","OutOfRangeError","DimensionError","ValueLimitExceededError","NerdamerValueError","SolveError","InfiniteLoopError","UnexpectedTokenError","exceptions","Math2","csc","sin","sec","cos","cot","tan","acsc","asin","asec","acos","acot","atan","erf","exp","diff","derivative","median","values","half","fromContinued","contd","fractions","whole","continuedFraction","w","absn","ni","done","epsilon","d","EPSILON","idx","bigpow","Frac","isInteger","nthroot","gamma","z","g","C","bigfactorial","times","bigLog","quick","k","invert","factorial","is_int","NaN","dfactorial","GCD","QGCD","gcd","LCM","factor","ifactors","ifactor","factors","updateHash","sfactor","lcprime","prime","input","lt","safety","rho","xf","cz","mod","minus","sm","boxfactor","fib","integer_part","simpson","get_value","side","dx","xi","num_integrate","tol","maxdepth","adsimp","fa","fm","fb","V0","depth","state","nanEncountered","f1","f2","sl","sr","s2","m","V1","V2","maxDepthCount","integrate","Ci","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","A","dk","dk0","d0","xk","powb","dk_dec","gte","xn","ld","same_delta","decimal","text","option","useGroup","decp","asHash","wrapCondition","asDecimal","valueOf","frac","exec","negative","quotient","digits","passed","cycle","numer","denom","divmod","remainder","operator","Scientific","om","collectSymbols","txt","pg","pwg","E_TO_EXP","charAt","cv","parens","primeFactors","startsWith","isScientific","fromScientific","convert","simple","Fraction","quickConversion","isInfinity","bin","preprocessors","names","actions","Slice","upper","lower","Collection","Token","node","node_type","column","OPERATOR","operators","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","collection","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","complex","prec","re","im","sinh","removeDen","sq","squared","infinity","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","realpart","imagpart","hyp","phi","USE_BIG","atan2","symfunction","greaterThan","trig","isImaginary","getQuadrant","dividedBy","gt","trigh","units","action","postfix","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","brackets","id","is_open","is_close","maps_to","radians","degrees","continued_fraction","scientific","pfactor","matrix","imatrix","cbrt","expandall","determinant","size","transpose","dot","cross","vecget","vecset","vectrim","matget","matset","matgetrow","matsetrow","matgetcol","matsetcol","rationalize","IF","is_in","conjugate","polarform","rectform","union","intersection","difference","intersects","is_subset","print","findFunction","fmodules","fmodule","override","which","with_what","restore","what","extend","force_call","extended","fn_name","callfunction","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","bigConvert","operator_filter_regex","ostr","filter","RegExp","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","prepare_expression","group1","group2","first","before","e_org","g1","g2","Node","token","left","right","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","tokenize","trim","col","L","lpos","tokens","scopes","target","open_brackets","has_space","SPACE","EMPTY_STRING","COMMA","MINUS","MULT","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","substring","chunkify","operator_str","_operators","ch","add_token","at","add_function","set_last_position","position","adjust_column_position","last_token_is_numeric","is_multiplication","bracket","pair","prev","nxt","is_operator","toRPN","output","prefixes","collapse","destination","next","previous","next_is_operator","last_on_stack","parseRPN","rpn","substitutions","pi","Q","is_comma","fromSet","ans","parent","fn_args","ret","next_is_comma","getter","il","element","subbed","isUnit","rethrowErrors","forEach","toHTML","indent","tab","repeat","html","tree","location","toObject","expression_string","objectify","isConversion","chunkAtCommas","chunks","rem_brackets","remove_redundant_powers","narr","next_is_array","next_is_minus","unshift","before_last","ms","distributeMultiplier","toUnitMultiplier","V","M","getDenom","getNum","_symbol","cf","symbol1","symbol2","rows","l2","cols","retnum","retden","is_negative","img","setPower","qa","tw","nn","rem","isOne","sigfigs","asbig","theta","original","symMinMax","numVal","SYMBOLIC_MIN_MAX","getval","aval","bval","base","log_sym","log_base","img_part","sIsConstant","toExponential","quadrant","isFinite","clean","new_num","new_den","expand_denominator","expand_functions","rank","identity","tolerance","col_index","vec1","vec2","mat","set1","set2","testSQRT","absEquals","testPow","fct","toTeX","expression_or_obj","decimals","TeX","cdot","nobj","LaTeX","braces","expr","lb","ub","argSplit","latex","getFunction","addPreprocessor","order","shift_cells","PreprocessorError","getPreprocessors","removePreprocessor","subs","aIsSymbol","bIsSymbol","unit","Unit","aneg","bneg","inf","ap","bp","h1","h2","powEQ","v1","v2","aIsComposite","bIsComposite","PN","PNEQ","valEQ","attach","shell","canIterate","bothPL","bIsMatrix","eachElement","row","dimensions","toFixed","bnum","bden","a_pow","a_multiplier","ONN","distributeExponent","combine","bm","p1","p2","isSymbolP1","isSymbolP2","toEX","isEven","logV","n1","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","raised","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","multiplyPower","abs_b","sgn","aa","_a","_b","a1","log_a","b1","c1","neg_num","nr","tn","evenr","evenp","evennp","_result","isEX","pt","IGNORE_E","comma","percent","assign","function_assign","bool2Symbol","eq","lte","log10","LOG10E","trunc","ceil","getExpression","expression_number","asType","expression","text_","first_arg","buildFunction","Build","build","isPolynomial","isPoly","sub","for_symbol","otype","callback","numerator","denominator","hasFunction","containsFunction","exponent","removeLeadingZeroes","removeTrailingZeroes","dot_location","zeroes","leadingZeroes","wholes","copy","rounded","next_two","ed","is_neg","isFrac","nstr","m_dc","simplify","neg","qcompare","isnegative","lcm","div","unwrapSQRT","all","getNth","isToNth","nthPower","nthMultiplier","isNth","isSquare","isCube","isSimple","powSimp","powers","mfactors","out_","in_","xt","multivariate","exclude_x","toArray","hasFunc","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","isMonomial","isSQRT","check_all","check_symbols","retainSign","isSymbolic","isInverse","properties","keepSign","deep","power_only","is_one","cp","isImgSymbol","keyForGroup","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","isCombination","opts","qc","fullConversion","stripSign","nparts","cparts","d1","d2","parser","keep","space","LaTeXArray","rowTeX","m_array","v_array","formatFrac","p_array","greek","alpha","beta","zeta","eta","iota","kappa","lambda","mu","nu","omnikron","sigma","tau","upsilon","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","arccos","ker","limsup","arcsin","deg","lg","ln","Pr","sup","arctan","det","hom","lim","LN","dim","liminf","inverted","formatSubscripts","t_varray","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","isDenom","combine_power","isBracketed","formatP","tp","merge","mn","md","vn","vd","top","bottom","glue","is_pow","bracketTypes","square","brace","angle","filterTokens","filtered","next_token","raw_tokens","parse_next","get","items","lw","rl","el","arrayPrefill","modulus","eql","toUnitVector","angleFrom","mod1","mod2","product","theta_val","isParallelTo","isAntiparallelTo","isPerpendicularTo","B","magnitude","tex","F","zeroMatrix","raw_values","raw","nc","toRightTriangular","isSingular","augment","rr","np","els","divisor","new_element","ki","kp","inverse_elements","nel","fel","nj","canMultiplyFromLeft","sameSize","MM","kj","toVector","newline","to_decimal","row_tex","_union","_intersection","dependencies","_rename","reformat","deps","getProperName","compileDependencies","dep_string","replacements","components","getArgsDeps","arg_array","supplements","ftext","xports","ftext_complex","cc","ft","ftext_function","bn","f_array","alias","Function","LOG_FNS","Utils","groups","PARSER","libExports","fndec","convertToLaTeX","convertFromLaTeX","add_on","getWarnings","setConstant","constant","getConstant","getCore","getEquation","reserved","asArray","clear","equation_number","keep_EXPRESSIONS_fixed","flush","expressions","asObject","asLaTeX","register","core","parent_obj","ref_obj","visible","numargs","validVarName","varname","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","loader","getVars","disallowed","updateAPI","linker","replaceFunction","new_num_args","withOperator","htmlTree","addPeeker","removePeeker","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","isSmall","SmallInteger","isPrecise","arrayToSmall","compareAbs","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractAny","subtractSmall","multiplyLong","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","multiplySmallAndArray","a_j","divMod1","quotientDigit","divisorMostSignificantDigit","divModSmall","divMod2","guess","xlen","highx","highy","check","part","reverse","divModAny","self","qSign","mSign","isBasicPrime","isDivisibleBy","lesser","millerRabinTest","nPrev","modPow","plus","small","_multiplyBySmall","over","isZero","isPositive","isOdd","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","low","high","restricted","digit","absBase","charCodeAt","parseInt","charCode","parseBaseFromArray","toBase","out","toBaseString","parseStringValue","decimalPlace","isValid","parseNumberValue","zeros","toJSON","minusOne","isInstance","module","exports","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","O","D","absoluteValue","constructor","comparedTo","cmp","cosine","sd","J","G","cubeRoot","Z","decimalPlaces","dp","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","U","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","T","naturalExponential","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","K","toDecimalPlaces","toDP","R","toFraction","toHexadecimal","toHex","toNearest","toOctal","toPower","LN10","toPrecision","toSignificantDigits","toSD","truncated","I","H","$","search","W","X","Y","en","rn","sn","on","un","cn","an","defaults","getRandomValues","randomBytes","hn","dn","pn","gn","wn","Nn","En","yn","Mn","qn","On","Dn","Uint32Array","Fn","An","Sn","Zn","Pn","Rn","Ln","Tn","Un","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","Decimal","fixedHeader","height","computed","$slots","themeClasses","methods","genWrapper","wrapper","$createElement","style","$entries","entries","stat","fixedDigits","fixedDigitsPercent","chipload","formatting","woc","doc","rpm","maxAcceptableDeflection","cutterDiameter","materialKFactor","cutterFlutes","maximumMachineForce","routerOutputPower","cutterOverallStickout","cutterYoungsModulus","cutterShankDiameter","cutterLength","adjustedChipload","feedrate","materialRemovalRate","powerUsage","torque","machineForce","machineForcePercent","availablePowerPercent","routerCutterPowerIncrease","maxDeflection","maxDeflectionPercent","count","breakpointProps","Boolean","offsetProps","orderProps","offset","alignSelf","includes","hasColClasses","webpackPolyfill","deprecate","paths","defineProperty","enumerable","materialsStore","kFactor","directives","ripple","genRipple","center","mixins","model","event","inputValue","falseValue","trueValue","multiple","label","hasColor","lazyValue","computedColor","isDark","isMultiple","isActive","valueComparator","isDirty","rippleState","watch","genLabel","VInput","click","prevent","genInput","attrs","disabled","role","domProps","checked","blur","change","focus","keydown","ref","onBlur","onClick","onChange","onFocus","onKeydown","Touch","inset","loading","flat","validationState","hasError","switchData","setTextColor","genDefaultSlot","genSwitch","switchAttrs","onSwipeRight","genProgress","progress","VProgressCircular","color","width","indeterminate","onSwipeLeft","calculatorsStore","allMathStrings","iterativelySubbed","inputs","allMath","subbedWithInputs","reduce","acc","math","subbedWithOutputs","fullySubbed","allStrings","otherKeysMap","otherKeys","ea","Router","inputVoltage","inputCurrent","efficiency","ratedSpeed","getInputPower","router","getOutputPower","Machine","machineStore"],"mappings":"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","file":"js/calculator~optimization.231edce8.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\r\n//externals ====================================================================\r\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\r\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\r\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\r\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\r\n\r\nvar nerdamer = (function (imports) {\r\n    \"use strict\"; \r\n\r\n//version ======================================================================\r\n    var version = '1.1.13';\r\n\r\n//inits ========================================================================\r\n    var _ = new Parser(); //nerdamer's parser\r\n\r\n    //import bigInt\r\n    var bigInt = imports.bigInt;\r\n    var bigDec = imports.bigDec;\r\n\r\n    //set the precision to js precision\r\n    bigDec.set({\r\n        precision: 250\r\n    });\r\n\r\n    var Groups = {};\r\n\r\n    //container of pregenerated primes\r\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\r\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\r\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\r\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\r\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\r\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\r\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\r\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\r\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\r\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\r\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\r\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\r\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\r\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\r\n\r\n//Settings =====================================================================\r\n    var CUSTOM_OPERATORS = {};\r\n\r\n    var Settings = {\r\n        //Enables/Disables call peekers. False means callPeekers are disabled and true means callPeekers are enabled.\r\n        callPeekers: false,\r\n\r\n        //the max number up to which to cache primes. Making this too high causes performance issues\r\n        init_primes: 1000,\r\n\r\n        exclude: [],\r\n        //If you don't care about division by zero for example then this can be set to true.\r\n        //Has some nasty side effects so choose carefully.\r\n        suppress_errors: false,\r\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\r\n        //cos(9) for convenience but parse to number will always try to return a number if set to true.\r\n        PARSE2NUMBER: false,\r\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\r\n        SAFE: false,\r\n        //the symbol to use for imaginary symbols\r\n        IMAGINARY: 'i',\r\n        //the modules used to link numeric function holders\r\n        FUNCTION_MODULES: [Math],\r\n        //Allow certain characters\r\n        ALLOW_CHARS: ['π'],\r\n        //Allow nerdamer to convert multi-character variables\r\n        USE_MULTICHARACTER_VARS: true,\r\n        //Allow changing of power operator\r\n        POWER_OPERATOR: '^',\r\n        //The variable validation regex\r\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\r\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\r\n        // The regex used to determine which characters should be included in implied multiplication\r\n        IMPLIED_MULTIPLICATION_REGEX: /([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,\r\n        //Aliases\r\n        ALIASES: {\r\n            'π': 'pi',\r\n            '∞': 'Infinity'\r\n        },\r\n        POSITIVE_MULTIPLIERS: false,\r\n        //Cached items\r\n        CACHE: {},\r\n        //Print out warnings or not\r\n        SILENCE_WARNINGS: false,\r\n        // Precision\r\n        PRECISION: 21,\r\n        // The Expression defaults to this value for decimal places\r\n        EXPRESSION_DECP: 19,\r\n        // The text function defaults to this value for decimal places\r\n        DEFAULT_DECP: 16,\r\n        //function mappings\r\n        VECTOR: 'vector',\r\n        PARENTHESIS: 'parens',\r\n        SQRT: 'sqrt',\r\n        ABS: 'abs',\r\n        FACTORIAL: 'factorial',\r\n        DOUBLEFACTORIAL: 'dfactorial',\r\n        //reference pi and e\r\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\r\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\r\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\r\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\r\n        PI: Math.PI,\r\n        E: Math.E,\r\n        LOG: 'log',\r\n        LOG10: 'log10',\r\n        LOG10_LATEX: 'log_{10}',\r\n        MAX_EXP: 200000,\r\n        //The number of scientific place to round to\r\n        SCIENTIFIC_MAX_DECIMAL_PLACES: 14,\r\n        //True if ints should not be converted to\r\n        SCIENTIFIC_IGNORE_ZERO_EXPONENTS: true\r\n    };\r\n\r\n    (function () {\r\n        Settings.CACHE.roots = {};\r\n        var x = 40,\r\n                y = 40;\r\n        for(var i = 2; i <= x; i++) {\r\n            for(var j = 2; j <= y; j++) {\r\n                var nthpow = bigInt(i).pow(j);\r\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\r\n            }\r\n        }\r\n    })();\r\n\r\n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\r\n    //The groups that help with organizing during parsing. Note that for FN is still a function even\r\n    //when it's raised to a symbol, which typically results in an EX\r\n    var N = Groups.N = 1, // A number\r\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5).\r\n            S = Groups.S = 3, // A single variable e.g. x.\r\n            EX = Groups.EX = 4, // An exponential\r\n            FN = Groups.FN = 5, // A function\r\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\r\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\r\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\r\n\r\n    var CONST_HASH = Settings.CONST_HASH = '#';\r\n\r\n    var PARENTHESIS = Settings.PARENTHESIS;\r\n\r\n    var SQRT = Settings.SQRT;\r\n\r\n    var ABS = Settings.ABS;\r\n\r\n    var FACTORIAL = Settings.FACTORIAL;\r\n\r\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\r\n\r\n    //the storage container \"memory\" for parsed expressions\r\n    var EXPRESSIONS = [];\r\n\r\n    //variables\r\n    var VARS = {};\r\n\r\n    //the container used to store all the reserved functions\r\n    var RESERVED = [];\r\n\r\n    var WARNINGS = [];\r\n\r\n    /**\r\n     * Use this when errors are suppressible\r\n     * @param {String} msg\r\n     * @param {object} ErrorObj\r\n     */\r\n    var err = function (msg, ErrorObj) {\r\n        if(!Settings.suppress_errors) {\r\n            if(ErrorObj)\r\n                throw new ErrorObj(msg);\r\n            else\r\n                throw new Error(msg);\r\n        }\r\n    };\r\n\r\n//Utils ========================================================================\r\n    var customError = function (name) {\r\n        var E = function (message) {\r\n            this.name = name;\r\n            this.message = message !== undefined ? message : '';\r\n            var error = new Error(this.message);\r\n            error.name = this.name;\r\n            this.stack = error.stack;\r\n        }; //create an empty error\r\n        E.prototype = Object.create(Error.prototype);\r\n        return E;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if value is one of nerdamer's reserved names\r\n     * @param {String} value\r\n     * @return boolean\r\n     */\r\n    var isReserved = function (value) {\r\n        return RESERVED.indexOf(value) !== -1;\r\n    };\r\n\r\n    /**\r\n     * Checks to see that all symbols in array are the same\r\n     * @param {Symbol[]} arr\r\n     * @returns {bool}\r\n     */\r\n    var allSame = function (arr) {\r\n        var last = arr[0];\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            if(!arr[i].equals(last))\r\n                return false;\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to pass warnings or low severity errors about the library\r\n     * @param msg\r\n     */\r\n    var warn = function (msg) {\r\n        WARNINGS.push(msg);\r\n        if(Settings.SHOW_WARNINGS && console && console.warn) {\r\n            console.warn(msg);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Enforces rule: \"must start with a letter or underscore and\r\n     * can have any number of underscores, letters, and numbers thereafter.\"\r\n     * @param name The name of the symbol being checked\r\n     * @param {String} typ - The type of symbols that's being validated\r\n     * @throws {Exception}  - Throws an exception on fail\r\n     */\r\n    var validateName = function (name, typ) {\r\n        typ = typ || 'variable';\r\n        if(Settings.ALLOW_CHARS.indexOf(name) !== -1)\r\n            return;\r\n        var regex = Settings.VALIDATION_REGEX;\r\n        if(!(regex.test(name))) {\r\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Convert number from scientific format to decimal format\r\n     * @param {Number} num\r\n     */\r\n    var scientificToDecimal = function (num) {\r\n        var nsign = Math.sign(num);\r\n        //remove the sign\r\n        num = Math.abs(num);\r\n        //if the number is in scientific notation remove it\r\n        if(/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\r\n            var zero = '0',\r\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\r\n                    e = parts.pop(), //store the exponential part\r\n                    l = Math.abs(e), //get the number of zeros\r\n                    sign = e / l,\r\n                    coeff_array = parts[0].split('.');\r\n            if(sign === -1) {\r\n                l = l - coeff_array[0].length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\r\n                }\r\n                else {\r\n                    num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\r\n                }\r\n            }\r\n            else {\r\n                var dec = coeff_array[1];\r\n                if(dec)\r\n                    l = l - dec.length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\r\n                }\r\n                else {\r\n                    num = coeff_array.join('') + new Array(l + 1).join(zero);\r\n                }\r\n            }\r\n        }\r\n\r\n        return nsign < 0 ? '-' + num : num;\r\n    };\r\n    /**\r\n     * Checks if number is a prime number\r\n     * @param {Number} n - the number to be checked\r\n     */\r\n    var isPrime = function (n) {\r\n        var q = Math.floor(Math.sqrt(n));\r\n        for(var i = 2; i <= q; i++) {\r\n            if(n % i === 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Generates an object with known variable value for evaluation\r\n     * @param {String} variable\r\n     * @param {any} value Any stringifyable object\r\n     * @returns {Object} \r\n     */\r\n    var knownVariable = function (variable, value) {\r\n        var o = {};\r\n        o[variable] = value;\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Checks if n is a number\r\n     * @param {any} n\r\n     */\r\n    var isNumber = function (n) {\r\n        return /^\\d+\\.?\\d*$/.test(n);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if an array contains only numeric values\r\n     * @param {Array} arr\r\n     */\r\n    var allNumeric = function (arr) {\r\n        for(var i = 0; i < arr.length; i++)\r\n            if(!isNumber(arr[i]))\r\n                return false;\r\n        return true;\r\n    };\r\n    /**\r\n     * Checks to see if a number or Symbol is a fraction\r\n     * @param {Number|Symbol} num\r\n     * @returns {boolean}\r\n     */\r\n    var isFraction = function (num) {\r\n        if(isSymbol(num))\r\n            return isFraction(num.multiplier.toDecimal());\r\n        return (num % 1 !== 0);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Symbol\r\n     * @param {Object} obj\r\n     */\r\n    var isSymbol = function (obj) {\r\n        return (obj instanceof Symbol);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Expression\r\n     * @param {Object} obj\r\n     */\r\n    var isExpression = function (obj) {\r\n        return (obj instanceof Expression);\r\n    };\r\n\r\n    /**\r\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n     * names are then returned in alphabetical order.\r\n     * @param {Symbol} obj\r\n     * @param {Boolean} poly\r\n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated\r\n     * automatically. In the future this will be a Collector object.\r\n     * @returns {String[]} - An array containing variable names\r\n     */\r\n    var variables = function (obj, poly, vars) {\r\n        vars = vars || {\r\n            c: [],\r\n            add: function (value) {\r\n                if(this.c.indexOf(value) === -1 && isNaN(value))\r\n                    this.c.push(value);\r\n            }\r\n        };\r\n\r\n        if(isSymbol(obj)) {\r\n            var group = obj.group,\r\n                    prevgroup = obj.previousGroup;\r\n            if(group === EX)\r\n                variables(obj.power, poly, vars);\r\n\r\n            if(group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\r\n                for(var x in obj.symbols) {\r\n                    variables(obj.symbols[x], poly, vars);\r\n                }\r\n            }\r\n            else if(group === S || prevgroup === S) {\r\n                //very crude needs fixing. TODO\r\n                if(!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\r\n                    vars.add(obj.value);\r\n            }\r\n            else if(group === PL || prevgroup === PL) {\r\n                variables(firstObject(obj.symbols), poly, vars);\r\n            }\r\n            else if(group === EX) {\r\n                if(!isNaN(obj.value))\r\n                    vars.add(obj.value);\r\n                variables(obj.power, poly, vars);\r\n            }\r\n            else if(group === FN && !poly) {\r\n                for(var i = 0; i < obj.args.length; i++) {\r\n                    variables(obj.args[i], poly, vars);\r\n                }\r\n            }\r\n        }\r\n\r\n        return vars.c.sort();\r\n    };\r\n\r\n    /**\r\n     * Returns the sum of an array\r\n     * @param {Array} arr\r\n     * @param {boolean} toNumber\r\n     * @returns {Symbol}\r\n     */\r\n    var arraySum = function (arr, toNumber) {\r\n        var sum = new Symbol(0);\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var x = arr[i];\r\n            // Convert to symbol if not\r\n            sum = _.add(sum, !isSymbol(x) ? _.parse(x) : x);\r\n        }\r\n\r\n        return toNumber ? Number(sum) : sum;\r\n    };\r\n\r\n    /**\r\n     * Separates out the variables into terms of variabls.\r\n     * e.g. x+y+x*y+sqrt(2)+pi returns\r\n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n     * @param {type} symbol\r\n     * @param {type} o\r\n     * @returns {undefined}\r\n     * @throws {Error} for expontentials\r\n     */\r\n    var separate = function (symbol, o) {\r\n        symbol = _.expand(symbol);\r\n        o = o || {};\r\n        var insert = function (key, sym) {\r\n            if(!o[key])\r\n                o[key] = new Symbol(0);\r\n            o[key] = _.add(o[key], sym.clone());\r\n        };\r\n        symbol.each(function (x) {\r\n            if(x.isConstant('all')) {\r\n                insert('constants', x);\r\n            }\r\n            else if(x.group === S) {\r\n                insert(x.value, x);\r\n            }\r\n            else if(x.group === FN && (x.fname === ABS || x.fname === '')) {\r\n                separate(x.args[0]);\r\n            }\r\n            else if(x.group === EX || x.group === FN) {\r\n                throw new Error('Unable to separate. Term cannot be a function!');\r\n            }\r\n            else {\r\n                insert(variables(x).join(' '), x);\r\n            }\r\n        });\r\n\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Fills holes in an array with zero symbol or generates one with n zeroes\r\n     * @param {Array} arr\r\n     * @param {Number} n\r\n     */\r\n    var fillHoles = function (arr, n) {\r\n        n = n || arr.length;\r\n        for(var i = 0; i < n; i++) {\r\n            var sym = arr[i];\r\n            if(!sym)\r\n                arr[i] = new Symbol(0);\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Checks to see if the object provided is a Vector\r\n     * @param {Object} obj\r\n     */\r\n    var isVector = function (obj) {\r\n        return (obj instanceof Vector);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Matrix\r\n     * @param {Object} obj\r\n     */\r\n    var isMatrix = function (obj) {\r\n        return (obj instanceof Matrix);\r\n    };\r\n\r\n    var isSet = function (obj) {\r\n        return (obj instanceof Set);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is in group N\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isNumericSymbol = function (symbol) {\r\n        return symbol.group === N || symbol.group === P;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is a variable with no multiplier nor power\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isVariableSymbol = function (symbol) {\r\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Array\r\n     * @param {Object} arr\r\n     */\r\n    var isArray = function (arr) {\r\n        return Array.isArray(arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an integer\r\n     * @param {Number} num\r\n     */\r\n    var isInt = function (num) {\r\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\r\n    };\r\n\r\n    /**\r\n     * @param {Number|Symbol} obj\r\n     * @returns {boolean}\r\n     */\r\n    var isNegative = function (obj) {\r\n        if(isSymbol(obj)) {\r\n            obj = obj.multiplier;\r\n        }\r\n        return obj.lessThan(0);\r\n    };\r\n    /**\r\n     * Safely stringify object\r\n     * @param o\r\n     */\r\n    var stringify = function (o) {\r\n        if(!o)\r\n            return o;\r\n        return String(o);\r\n    };\r\n\r\n    /**\r\n     * @param {String} str\r\n     * @returns {String} - returns a formatted string surrounded by brackets\r\n     */\r\n    var inBrackets = function (str) {\r\n        return '(' + str + ')';\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace parts of string\r\n     * @param {String} str - The original string\r\n     * @param {Integer} from - The starting index\r\n     * @param {Integer} to - The ending index\r\n     * @param {String} with_str - The replacement string\r\n     * @returns {String} - A formatted string\r\n     */\r\n    var stringReplace = function (str, from, to, with_str) {\r\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\r\n    };\r\n\r\n    /**\r\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n     * @param {Object} obj\r\n     * @returns {boolean}\r\n     */\r\n    var customType = function (obj) {\r\n        return obj !== undefined && obj.custom;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if numbers are both negative or are both positive\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @returns {boolean}\r\n     */\r\n    var sameSign = function (a, b) {\r\n        return (a < 0) === (b < 0);\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n     * @example format('{0} nice, {0} sweet', 'something')\r\n     * //returns 'something nice, something sweet'\r\n     */\r\n    var format = function () {\r\n        var args = [].slice.call(arguments),\r\n                str = args.shift();\r\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\r\n            var arg = args[index];\r\n            return typeof arg === 'function' ? arg() : arg;\r\n        });\r\n\r\n        return new_str;\r\n    };\r\n\r\n    /**\r\n     * Generates an array with values within a range. Multiplies by a step if provided\r\n     * @param {Number} start\r\n     * @param {Number} end\r\n     * @param {Number} step\r\n     */\r\n    var range = function (start, end, step) {\r\n        var arr = [];\r\n        step = step || 1;\r\n        for(var i = start; i <= end; i++)\r\n            arr.push(i * step);\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     * Returns an array of all the keys in an array\r\n     * @param {Object} obj\r\n     * @returns {Array}\r\n     */\r\n    var keys = Object.keys;\r\n\r\n    /**\r\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects\r\n     * so only use if you need any first random or if there's only one item in the object\r\n     * @param {Object} obj\r\n     * @param {String} key Return this key as first object\r\n     * @param {Boolean} both\r\n     * @returns {*}\r\n     */\r\n    var firstObject = function (obj, key, both) {\r\n        for(var x in obj)\r\n            break;\r\n        if(key)\r\n            return x;\r\n        if(both)\r\n            return {\r\n                key: x,\r\n                obj: obj[x]\r\n            };\r\n        return obj[x];\r\n    };\r\n\r\n    /**\r\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n     * @param {Symbol} sym1\r\n     * @param {Symbol} sym2\r\n     * @param {String[]} vars - an optional array of variables to use\r\n     * @returns {bool}\r\n     */\r\n    var compare = function (sym1, sym2, vars) {\r\n        var n = 5; //a random number between 1 and 5 is good enough\r\n        var scope = {}; // scope object with random numbers generated using vars\r\n        var comparison;\r\n        for(var i = 0; i < vars.length; i++)\r\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\r\n        block('PARSE2NUMBER', function () {\r\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\r\n        });\r\n        return comparison;\r\n    };\r\n\r\n    /**\r\n     * Is used to set a user defined function using the function assign operator\r\n     * @param {String} name\r\n     * @param {String[]} params_array\r\n     * @param {String} body\r\n     * @returns {Boolean}\r\n     */\r\n    var setFunction = function (name, params_array, body) {\r\n        validateName(name);\r\n        if(!isReserved(name)) {\r\n            params_array = params_array || variables(_.parse(body));\r\n            // The function gets set to PARSER.mapped function which is just\r\n            // a generic function call.\r\n            _.functions[name] = [_.mapped_function, params_array.length, {\r\n                    name: name,\r\n                    params: params_array,\r\n                    body: body\r\n                }];\r\n\r\n            return body;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Returns the minimum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMax = function (arr) {\r\n        return Math.max.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Returns the maximum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMin = function (arr) {\r\n        return Math.min.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if two arrays are equal\r\n     * @param {Array} arr1 \r\n     * @param {Array} arr2 \r\n     */\r\n    var arrayEqual = function (arr1, arr2) {\r\n        arr1.sort();\r\n        arr2.sort();\r\n\r\n        // The must be of the same length\r\n        if(arr1.length === arr2.length) {\r\n            for(var i = 0; i < arr1.length; i++) {\r\n                // If any two items don't match we're done\r\n                if(arr1[i] !== arr2[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Otherwise they're equal\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Clones array with clonable items\r\n     * @param {Array} arr\r\n     * @returns {Array}\r\n     */\r\n    var arrayClone = function (arr) {\r\n        var new_array = [], l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            new_array[i] = arr[i].clone();\r\n        return new_array;\r\n    };\r\n\r\n    /**\r\n     * Fills numbers between array values\r\n     * @param {Numbers[]} arr\r\n     * @param {Integer} slices\r\n     */\r\n    var arrayAddSlices = function (arr, slices) {\r\n        slices = slices || 20;\r\n        var retval = [];\r\n        var c, delta, e;\r\n        retval.push(arr[0]); //push the beginning\r\n        for(var i = 0; i < arr.length - 1; i++) {\r\n            c = arr[i];\r\n            delta = arr[i + 1] - c; //get the difference\r\n            e = delta / slices; //chop it up in the desired number of slices\r\n            for(var j = 0; j < slices; j++) {\r\n                c += e; //add the mesh to the last slice\r\n                retval.push(c);\r\n            }\r\n        }\r\n\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * Gets nth roots of a number\r\n     * @param {Symbol} symbol\r\n     * @returns {Vector}\r\n     */\r\n    var nroots = function (symbol) {\r\n        var a, b;\r\n\r\n        if(symbol.group === FN && symbol.fname === '') {\r\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n            b = _.parse(symbol.power);\r\n        }\r\n        else if(symbol.group === P) {\r\n            a = _.parse(symbol.value);\r\n            b = _.parse(symbol.power);\r\n        }\r\n\r\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\r\n            var _roots = [];\r\n\r\n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\r\n            var r = parts[0];\r\n\r\n            //var r = _.parse(a).abs().toString();\r\n\r\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n            var x = _.arg(a);\r\n            var n = b.multiplier.den.toString();\r\n            var p = b.multiplier.num.toString();\r\n\r\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\r\n\r\n            for(var i = 0; i < n; i++) {\r\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n            }\r\n            return Vector.fromArray(_roots);\r\n        }\r\n        else if(symbol.isConstant(true, true)) {\r\n            var sign = symbol.sign();\r\n            var x = evaluate(symbol.abs());\r\n            var root = _.sqrt(x);\r\n\r\n            var _roots = [root.clone(), root.negate()];\r\n\r\n            if(sign < 0)\r\n                _roots = _roots.map(function (x) {\r\n                    return _.multiply(x, Symbol.imaginary());\r\n                });\r\n\r\n        }\r\n        else {\r\n            _roots = [_.parse(symbol)];\r\n        }\r\n\r\n        return Vector.fromArray(_roots);\r\n    };\r\n\r\n    /**\r\n     * Sorts and array given 2 parameters\r\n     * @param {String} a\r\n     * @param {String} b\r\n     */\r\n    var comboSort = function (a, b) {\r\n        var l = a.length,\r\n                combined = []; //the linker\r\n        for(var i = 0; i < a.length; i++) {\r\n            combined.push([a[i], b[i]]); //create the map\r\n        }\r\n\r\n        combined.sort(function (x, y) {\r\n            return x[0] - y[0];\r\n        });\r\n\r\n        var na = [], nb = [];\r\n\r\n        for(i = 0; i < l; i++) {\r\n            na.push(combined[i][0]);\r\n            nb.push(combined[i][1]);\r\n        }\r\n\r\n        return [na, nb];\r\n    };\r\n    /**\r\n     * TODO: Pick a more descriptive name and better description\r\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\r\n     * Example a*x^2+b wrt x\r\n     * @param {Symbol} fn\r\n     * @param {String} wrt\r\n     * @param {bool} as_obj\r\n     */\r\n    var decompose_fn = function (fn, wrt, as_obj) {\r\n        wrt = String(wrt); //convert to string\r\n        var ax, a, x, b;\r\n        if(fn.group === CP) {\r\n            var t = _.expand(fn.clone()).stripVar(wrt);\r\n            ax = _.subtract(fn.clone(), t.clone());\r\n            b = t;\r\n        }\r\n        else\r\n            ax = fn.clone();\r\n        a = ax.stripVar(wrt);\r\n        x = _.divide(ax.clone(), a.clone());\r\n        b = b || new Symbol(0);\r\n        if(as_obj)\r\n            return {\r\n                a: a,\r\n                x: x,\r\n                ax: ax,\r\n                b: b\r\n            };\r\n        return [a, x, ax, b];\r\n    };\r\n    /**\r\n     * Rounds a number up to x decimal places\r\n     * @param {Number} x\r\n     * @param {Number} s\r\n     */\r\n    var nround = function (x, s) {\r\n        if(isInt(x)) {\r\n            if(x >= Number.MAX_VALUE)\r\n                return x.toString();\r\n            return Number(x);\r\n        }\r\n\r\n        s = typeof s === 'undefined' ? 14 : s;\r\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\r\n    };\r\n\r\n    /**\r\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\r\n     * instance a is used in the symbol then it keeps going down the line until\r\n     * one is found that's not in use. If all letters are taken then it\r\n     * starts appending numbers.\r\n     * IMPORTANT! It assumes that the substitution will be undone\r\n     * beore the user gets to interact with the object again.\r\n     * @param {Symbol} symbol\r\n     */\r\n    var getU = function (symbol) {\r\n        //start with u\r\n        var u = 'u', //start with u\r\n                v = u, //init with u\r\n                c = 0, //postfix number\r\n                vars = variables(symbol);\r\n        //make sure this variable isn't reserved and isn't in the variable list\r\n        while(!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\r\n            v = u + c++;\r\n        //get an empty slot. It seems easier to just push but the\r\n        //problem is that we may have some which are created by clearU\r\n        for(var i = 0, l = RESERVED.length; i <= l; i++)\r\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\r\n            if(!RESERVED[i]) {\r\n                RESERVED[i] = v; //reserve the variable\r\n                break;\r\n            }\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Clears the u variable so it's no longer reserved\r\n     * @param {String} u\r\n     */\r\n    var clearU = function (u) {\r\n        var indx = RESERVED.indexOf(u);\r\n        if(indx !== -1)\r\n            RESERVED[indx] = undefined;\r\n    };\r\n\r\n    /**\r\n     * Loops through each item in object and calls function with item as param\r\n     * @param {Object|Array} obj\r\n     * @param {Function} fn\r\n     */\r\n    var each = function (obj, fn) {\r\n        if(isArray(obj)) {\r\n            var l = obj.length;\r\n            for(var i = 0; i < l; i++)\r\n                fn.call(obj, i);\r\n        }\r\n        else {\r\n            for(var x in obj)\r\n                if(obj.hasOwnProperty(x))\r\n                    fn.call(obj, x);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an even number\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var even = function (num) {\r\n        return num % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a fraction is divisible by 2\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var evenFraction = function (num) {\r\n        return 1 / (num % 1) % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Strips duplicates out of an array\r\n     * @param {Array} arr\r\n     */\r\n    var arrayUnique = function (arr) {\r\n        var l = arr.length, a = [];\r\n        for(var i = 0; i < l; i++) {\r\n            var item = arr[i];\r\n            if(a.indexOf(item) === -1)\r\n                a.push(item);\r\n        }\r\n        return a;\r\n    };\r\n\r\n    /**\r\n     * Gets all the variables in an array of Symbols\r\n     * @param {Symbol[]} arr \r\n     */\r\n    var arrayGetVariables = function (arr) {\r\n        var vars = variables(arr[0], null, null, true);\r\n\r\n        //get all variables\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            vars = vars.concat(variables(arr[i]));\r\n        //remove duplicates\r\n        vars = arrayUnique(vars).sort();\r\n\r\n        //done\r\n        return vars;\r\n    };\r\n\r\n    /**\r\n     * Removes duplicates from an array. Returns a new array\r\n     * @param {Array} arr\r\n     * @param {Function} condition\r\n     */\r\n    var removeDuplicates = function (arr, condition) {\r\n        var conditionType = typeof condition;\r\n\r\n        if(conditionType !== 'function' || conditionType === 'undefined') {\r\n            condition = function (a, b) {\r\n                return a === b;\r\n            };\r\n        }\r\n\r\n        var seen = [];\r\n\r\n        while(arr.length) {\r\n            var a = arr[0];\r\n            //only one element left so we're done\r\n            if(arr.length === 1) {\r\n                seen.push(a);\r\n                break;\r\n            }\r\n            var temp = [];\r\n            seen.push(a); //we already scanned these\r\n            for(var i = 1; i < arr.length; i++) {\r\n                var b = arr[i];\r\n                //if the number is outside the specified tolerance\r\n                if(!condition(a, b))\r\n                    temp.push(b);\r\n            }\r\n            //start over with the remainder\r\n            arr = temp;\r\n        }\r\n\r\n        return seen;\r\n    };\r\n\r\n    /**\r\n     * Reserves the names in an object so they cannot be used as function names\r\n     * @param {Object} obj\r\n     */\r\n    var reserveNames = function (obj) {\r\n        var add = function (item) {\r\n            if(RESERVED.indexOf(item) === -1)\r\n                RESERVED.push(item);\r\n        };\r\n\r\n        if(typeof obj === 'string')\r\n            add(obj);\r\n        else {\r\n            each(obj, function (x) {\r\n                add(x);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes an item from either an array or an object. If the object is an array, the index must be\r\n     * specified after the array. If it's an object then the key must be specified\r\n     * @param {Object|Array} obj\r\n     * @param {Integer} indexOrKey\r\n     */\r\n    var remove = function (obj, indexOrKey) {\r\n        var result;\r\n        if(isArray(obj)) {\r\n            result = obj.splice(indexOrKey, 1)[0];\r\n        }\r\n        else {\r\n            result = obj[indexOrKey];\r\n            delete obj[indexOrKey];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a temporary block in which one of the global settings is temporarily modified while\r\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n     * answer for a period you would set PARSE2NUMBER to true in the block.\r\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n     * @param {String} setting - The setting being accessed\r\n     * @param {Function} f\r\n     * @param {boolean} opt - The value of the setting in the block\r\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n     */\r\n    var block = function (setting, f, opt, obj) {\r\n        var current_setting = Settings[setting];\r\n        Settings[setting] = opt === undefined ? true : !!opt;\r\n        var retval = f.call(obj);\r\n        Settings[setting] = current_setting;\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * provide a mechanism for accessing functions directly. Not yet complete!!!\r\n     * Some functions will return undefined. This can maybe just remove the\r\n     * function object at some point when all functions are eventually\r\n     * housed in the global function object. Returns ALL parser available\r\n     * functions. Parser.functions may not contain all functions\r\n     */\r\n    var importFunctions = function () {\r\n        var o = {};\r\n        for(var x in _.functions)\r\n            o[x] = _.functions[x][0];\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n     * @param {Array|object} obj\r\n     */\r\n    var arguments2Array = function (obj) {\r\n        return [].slice.call(obj);\r\n    };\r\n\r\n    /**\r\n     * Returns the coefficients of a symbol given a variable. Given ax^2+b^x+c, it divides\r\n     * each nth term by x^n.\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} wrt\r\n     */\r\n    var getCoeffs = function (symbol, wrt, info) {\r\n        var coeffs = [];\r\n        //we loop through the symbols and stick them in their respective\r\n        //containers e.g. y*x^2 goes to index 2\r\n        symbol.each(function (term) {\r\n            if(term.contains(wrt)) {\r\n                //we want only the coefficient which in this case will be everything but the variable\r\n                //e.g. a*b*x -> a*b if the variable to solve for is x\r\n                var coeff = term.stripVar(wrt),\r\n                        x = _.divide(term.clone(), coeff.clone()),\r\n                        p = x.power.toDecimal();\r\n            }\r\n            else {\r\n                coeff = term;\r\n                p = 0;\r\n            }\r\n            var e = coeffs[p];\r\n            //if it exists just add it to it\r\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\r\n\r\n        }, true);\r\n\r\n        for(var i = 0; i < coeffs.length; i++)\r\n            if(!coeffs[i])\r\n                coeffs[i] = new Symbol(0);\r\n        //fill the holes\r\n        return coeffs;\r\n    };\r\n\r\n    /**\r\n     * As the name states. It forces evaluation of the expression\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} o\r\n     */\r\n    var evaluate = function (symbol, o) {\r\n        return block('PARSE2NUMBER', function () {\r\n            return _.parse(symbol, o);\r\n        }, true);\r\n    };\r\n\r\n    /**\r\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\r\n     * @param {String[]|String|Symbol|Number|Number[]} x\r\n     */\r\n    var convertToVector = function (x) {\r\n        if(isArray(x)) {\r\n            var vector = new Vector([]);\r\n            for(var i = 0; i < x.length; i++)\r\n                vector.elements.push(convertToVector(x[i]));\r\n            return vector;\r\n        }\r\n        //Ensure that a nerdamer ready object is returned\r\n        if(!isSymbol(x))\r\n            return _.parse(x);\r\n        return x;\r\n    };\r\n\r\n    /**\r\n     * Generates prime numbers up to a specified number\r\n     * @param {Number} upto\r\n     */\r\n    var generatePrimes = function (upto) {\r\n        //get the last prime in the array\r\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\r\n        //no need to check if we've already encountered the number. Just check the cache.\r\n        for(var i = last_prime; i < upto; i++) {\r\n            if(isPrime(i))\r\n                PRIMES.push(i);\r\n        }\r\n    };\r\n    /**\r\n     * Checks to see if all arguments are numbers\r\n     * @param {object} args\r\n     */\r\n    var allNumbers = function (args) {\r\n        for(var i = 0; i < args.length; i++)\r\n            if(args[i].group !== N)\r\n                return false;\r\n        return true;\r\n    };\r\n    /*\r\n     * Checks if all arguments aren't just all number but if they\r\n     * are constants as well e.g. pi, e.\r\n     * @param {object} args\r\n     */\r\n    var allConstants = function (args) {\r\n        for(var i = 0; i < args.length; i++) {\r\n            if(args[i].isPi() || args[i].isE())\r\n                continue;\r\n            if(!args[i].isConstant(true))\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to multiply two expression in expanded form\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     */\r\n    var mix = function (a, b, opt) {\r\n        // Flip them if b is a CP or PL and a is not\r\n        if(b.isComposite() && !a.isComposite() || b.isLinear() && !a.isLinear()) {\r\n            [a, b] = [b, a];\r\n        }\r\n        // A temporary variable to hold the expanded terms\r\n        var t = new Symbol(0);\r\n        if(a.isLinear()) {\r\n            a.each(function (x) {\r\n                // If b is not a PL or a CP then simply multiply it\r\n                if(!b.isComposite()) {\r\n                    var term = _.multiply(_.parse(x), _.parse(b));\r\n                    t = _.add(t, _.expand(term, opt));\r\n                }\r\n                // Otherwise multiply out each term.\r\n                else if(b.isLinear()) {\r\n                    b.each(function (y) {\r\n                        var term = _.multiply(_.parse(x), _.parse(y));\r\n                        var expanded = _.expand(_.parse(term), opt);\r\n                        t = _.add(t, expanded);\r\n                    }, true);\r\n                }\r\n                else {\r\n                    t = _.add(t, _.multiply(x, _.parse(b)));\r\n                }\r\n            }, true);\r\n        }\r\n        else {\r\n            // Just multiply them together\r\n            t = _.multiply(a, b);\r\n        }\r\n\r\n        // The expanded function is now t\r\n        return t;\r\n    };\r\n\r\n//Exceptions ===================================================================\r\n    //Is thrown for division by zero\r\n    var DivisionByZero = customError('DivisionByZero');\r\n    // Is throw if an error occured during parsing\r\n    var ParseError = customError('ParseError');\r\n    // Is thrown if the expression results in undefined\r\n    var UndefinedError = customError('UndefinedError');\r\n    // Is throw input is out of the function domain\r\n    var OutOfFunctionDomainError = customError('OutOfFunctionDomainError');\r\n    // Is throw if a function exceeds x amount of iterations\r\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\r\n    // Is thrown if the parser receives an incorrect type\r\n    var NerdamerTypeError = customError('NerdamerTypeError');\r\n    // Is thrown if bracket parity is not correct\r\n    var ParityError = customError('ParityError');\r\n    // Is thrown if an unexpectd or incorrect operator is encountered\r\n    var OperatorError = customError('OperatorError');\r\n    // Is thrown if an index is out of range.\r\n    var OutOfRangeError = customError('OutOfRangeError');\r\n    // Is thrown if dimensions are incorrect. Mostly for matrices\r\n    var DimensionError = customError('DimensionError');\r\n    // Is thrown if variable name violates naming rule\r\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\r\n    // Is thrown if the limits of the library are exceeded for a function\r\n    // This can be that the function become unstable passed a value\r\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\r\n    // Is throw if the value is an incorrect LH or RH value\r\n    var NerdamerValueError = customError('NerdamerValueError');\r\n    // Is thrown if the value is an incorrect LH or RH value\r\n    var SolveError = customError('SolveError');\r\n    // Is thrown for an infinite loop\r\n    var InfiniteLoopError = customError('InfiniteLoopError');\r\n    // Is thrown if an operator is found when there shouldn't be one\r\n    var UnexpectedTokenError = customError('UnexpectedTokenError');\r\n\r\n    var exceptions = {\r\n        DivisionByZero: DivisionByZero,\r\n        ParseError: ParseError,\r\n        OutOfFunctionDomainError: OutOfFunctionDomainError,\r\n        UndefinedError: UndefinedError,\r\n        MaximumIterationsReached: MaximumIterationsReached,\r\n        NerdamerTypeError: NerdamerTypeError,\r\n        ParityError: ParityError,\r\n        OperatorError: OperatorError,\r\n        OutOfRangeError: OutOfRangeError,\r\n        DimensionError: DimensionError,\r\n        InvalidVariableNameError: InvalidVariableNameError,\r\n        ValueLimitExceededError: ValueLimitExceededError,\r\n        NerdamerValueError: NerdamerValueError,\r\n        SolveError: SolveError,\r\n        InfiniteLoopError: InfiniteLoopError,\r\n        UnexpectedTokenError: UnexpectedTokenError\r\n    };\r\n//Math2 ========================================================================\r\n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\r\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the\r\n    //functions within are pretty self-explanatory.\r\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\r\n    var Math2 = {\r\n        csc: function (x) {\r\n            return 1 / Math.sin(x);\r\n        },\r\n        sec: function (x) {\r\n            return 1 / Math.cos(x);\r\n        },\r\n        cot: function (x) {\r\n            return 1 / Math.tan(x);\r\n        },\r\n        acsc: function (x) {\r\n            return Math.asin(1 / x);\r\n        },\r\n        asec: function (x) {\r\n            return Math.acos(1 / x);\r\n        },\r\n        acot: function (x) {\r\n            return (Math.PI / 2) - Math.atan(x);\r\n        },\r\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\r\n        erf: function (x) {\r\n            var t = 1 / (1 + 0.5 * Math.abs(x));\r\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\r\n                    t * (1.00002368 +\r\n                            t * (0.37409196 +\r\n                                    t * (0.09678418 +\r\n                                            t * (-0.18628806 +\r\n                                                    t * (0.27886807 +\r\n                                                            t * (-1.13520398 +\r\n                                                                    t * (1.48851587 +\r\n                                                                            t * (-0.82215223 +\r\n                                                                                    t * (0.17087277)))))))))\r\n                    );\r\n            return x >= 0 ? result : -result;\r\n        },\r\n        diff: function (f) {\r\n            var h = 0.001;\r\n\r\n            var derivative = function (x) {\r\n                return (f(x + h) - f(x - h)) / (2 * h);\r\n            };\r\n\r\n            return derivative;\r\n        },\r\n        median: function (...values) {\r\n            values.sort(function (a, b) {\r\n                return a - b;\r\n            });\r\n\r\n            var half = Math.floor(values.length / 2);\r\n\r\n            if(values.length % 2)\r\n                return values[half];\r\n\r\n            return (values[half - 1] + values[half]) / 2.0;\r\n        },\r\n        /*\r\n         * Reverses continued fraction calculation\r\n         * @param {obj} contd\r\n         * @returns {Number}\r\n         */\r\n        fromContinued: function (contd) {\r\n            var arr = contd.fractions.slice();\r\n            var e = 1 / arr.pop();\r\n            for(var i = 0, l = arr.length; i < l; i++) {\r\n                e = 1 / (arr.pop() + e);\r\n            }\r\n            return contd.sign * (contd.whole + e);\r\n        },\r\n        /*\r\n         * Calculates continued fractions\r\n         * @param {Number} n\r\n         * @param {Number} x The number of places\r\n         * @returns {Number}\r\n         */\r\n        continuedFraction: function (n, x) {\r\n            x = x || 20;\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            var absn = Math.abs(n); /*get the absolute value of the number*/\r\n            var whole = Math.floor(absn); /*get the whole*/\r\n            var ni = absn - whole; /*subtract the whole*/\r\n            var c = 0; /*the counter to keep track of iterations*/\r\n            var done = false;\r\n            var epsilon = 1e-14;\r\n            var max = 1e7;\r\n            var e, w;\r\n            var retval = {\r\n                whole: whole,\r\n                sign: sign,\r\n                fractions: []\r\n            };\r\n            /*start calculating*/\r\n            while(!done && ni !== 0) {\r\n                /*invert and get the whole*/\r\n                e = 1 / ni;\r\n                w = Math.floor(e);\r\n                if(w > max) {\r\n                    /*this signals that we may have already gone too far*/\r\n                    var d = Math2.fromContinued(retval) - n;\r\n                    if(d <= Number.EPSILON)\r\n                        break;\r\n                }\r\n                /*add to result*/\r\n                retval.fractions.push(w);\r\n                /*move the ni to the decimal*/\r\n                ni = e - w;\r\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\r\n                if(ni <= epsilon || c >= x - 1)\r\n                    done = true;\r\n                c++;\r\n            }\r\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\r\n            var idx = retval.fractions.length - 1;\r\n            if(retval.fractions[idx] === 1) {\r\n                retval.fractions.pop();\r\n                /*increase the last one by one*/\r\n                retval.fractions[--idx]++;\r\n            }\r\n            return retval;\r\n        },\r\n        bigpow: function (n, p) {\r\n            if(!(n instanceof Frac))\r\n                n = Frac.create(n);\r\n            if(!(p instanceof Frac))\r\n                p = Frac.create(p);\r\n            var retval = new Frac(0);\r\n            if(p.isInteger()) {\r\n                retval.num = n.num.pow(p.toString());\r\n                retval.den = n.den.pow(p.toString());\r\n            }\r\n            else {\r\n                var num = Frac.create(Math.pow(n.num, p.num));\r\n                var den = Frac.create(Math.pow(n.den, p.num));\r\n\r\n                retval.num = Math2.nthroot(num, p.den.toString());\r\n                retval.den = Math2.nthroot(den, p.den);\r\n            }\r\n            return retval;\r\n        },\r\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\r\n        gamma: function (z) {\r\n            var g = 7;\r\n            var C = [\r\n                0.99999999999980993,\r\n                676.5203681218851,\r\n                -1259.1392167224028,\r\n                771.32342877765313,\r\n                -176.61502916214059,\r\n                12.507343278686905,\r\n                -0.13857109526572012,\r\n                9.9843695780195716e-6,\r\n                1.5056327351493116e-7]\r\n                    ;\r\n\r\n            if(z < 0.5)\r\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\r\n            else {\r\n                z -= 1;\r\n\r\n                var x = C[0];\r\n                for(var i = 1; i < g + 2; i++)\r\n                    x += C[i] / (z + i);\r\n\r\n                var t = z + g + 0.5;\r\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\r\n            }\r\n        },\r\n        //factorial\r\n        bigfactorial: function (x) {\r\n            var retval = new bigInt(1);\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval.times(i);\r\n            return new Frac(retval);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\r\n        bigLog: function (x) {\r\n            varr\n            if(CACHE[x]) {\r\n                return Frac.quick.apply(null, CACHE[x].split('/'));\r\n            }\r\n            x = new Frac(x);\r\n            var n = 80;\r\n            var retval = new Frac(0);\r\n            var a = x.subtract(new Frac(1));\r\n            var b = x.add(new Frac(1));\r\n            for(var i = 0; i < n; i++) {\r\n                var t = new Frac(2 * i + 1);\r\n                var k = Math2.bigpow(a.divide(b), t);\r\n                var r = t.clone().invert().multiply(k);\r\n                retval = retval.add(r);\r\n\r\n            }\r\n            return retval.multiply(new Frac(2));\r\n        },\r\n        //the factorial function but using the big library instead\r\n        factorial: function (x) {\r\n            var is_int = x % 1 === 0;\r\n\r\n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\r\n            if(is_int && x < 0)\r\n                return NaN;\r\n\r\n            if(!is_int)\r\n                return Math2.gamma(x + 1);\r\n\r\n            var retval = 1;\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval * i;\r\n            return retval;\r\n        },\r\n        //double factorial\r\n        //http://mathworld.wolfram.com/DoubleFactorial.html\r\n        dfactorial: function (x) {\r\n            if(isInt(x)) {\r\n                var even = x % 2 === 0;\r\n                /* If x = even then n = x/2 else n = (x-1)/2*/\r\n                var n = even ? x / 2 : (x + 1) / 2;\r\n                /*the return value*/\r\n                var r = new Frac(1);\r\n                /*start the loop*/\r\n                if(even)\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\r\n                else\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\r\n            }\r\n            else {\r\n                /*Not yet extended to bigNum*/\r\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\r\n            }\r\n\r\n            /*done*/\r\n            return r;\r\n        },\r\n        GCD: function () {\r\n            var args = arrayUnique([].slice.call(arguments)\r\n                    .map(function (x) {\r\n                        return Math.abs(x);\r\n                    })).sort(),\r\n                    a = Math.abs(args.shift()),\r\n                    n = args.length;\r\n\r\n            while(n-- > 0) {\r\n                var b = Math.abs(args.shift());\r\n                while(true) {\r\n                    a %= b;\r\n                    if(a === 0) {\r\n                        a = b;\r\n                        break;\r\n                    }\r\n                    b %= a;\r\n                    if(b === 0)\r\n                        break;\r\n                    ;\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        QGCD: function () {\r\n            var args = [].slice.call(arguments);\r\n            var a = args[0];\r\n            for(var i = 1; i < args.length; i++) {\r\n                var b = args[i];\r\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\r\n                a = b.gcd(a);\r\n                if(sign < 0)\r\n                    a.negate();\r\n            }\r\n            return a;\r\n        },\r\n        LCM: function (a, b) {\r\n            return (a * b) / Math2.GCD(a, b);\r\n        },\r\n        //pow but with the handling of negative numbers\r\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\r\n        pow: function (b, e) {\r\n            if(b < 0) {\r\n                if(Math.abs(e) < 1) {\r\n                    /*nth root of a negative number is imaginary when n is even*/\r\n                    if(1 / e % 2 === 0)\r\n                        return NaN;\r\n                    return -Math.pow(Math.abs(b), e);\r\n                }\r\n            }\r\n            return Math.pow(b, e);\r\n        },\r\n        factor: function (n) {\r\n            n = Number(n);\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            /*move the number to absolute value*/\r\n            n = Math.abs(n);\r\n            var ifactors = Math2.ifactor(n);\r\n            var factors = new Symbol();\r\n            factors.symbols = {};\r\n            factors.group = CB;\r\n            for(var x in ifactors) {\r\n                var factor = new Symbol(1);\r\n                factor.group = P; /*cheat a little*/\r\n                factor.value = x;\r\n                factor.power = new Symbol(ifactors[x]);\r\n                factors.symbols[x] = factor;\r\n            }\r\n            factors.updateHash();\r\n\r\n            if(n === 1) {\r\n                factors = new Symbol(n);\r\n            }\r\n\r\n            /*put back the sign*/\r\n            if(sign < 0)\r\n                factors.negate();\r\n\r\n            return factors;\r\n        },\r\n        /**\r\n         * Uses trial division\r\n         * @param {Integer} n - the number being factored\r\n         * @param {object} factors -  the factors object\r\n         * @returns {object}\r\n         */\r\n        sfactor: function (n, factors) {\r\n            factors = factors || {};\r\n            var r = Math.floor(Math.sqrt(n));\r\n            var lcprime = PRIMES[PRIMES.length - 1];\r\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\r\n            /*takes too long*/\r\n            if(r > lcprime && n < 1e6)\r\n                generatePrimes(r);\r\n            var l = PRIMES.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var prime = PRIMES[i];\r\n                /*trial division*/\r\n                while(n % prime === 0) {\r\n                    n = n / prime;\r\n                    factors[prime] = (factors[prime] || 0) + 1;\r\n                }\r\n            }\r\n            if(n > 1)\r\n                factors[n] = 1;\r\n            return factors;\r\n        },\r\n        /**\r\n         * Pollard's rho\r\n         * @param {Integer} n\r\n         * @returns {object}\r\n         */\r\n        ifactor: function (n) {\r\n            var input = new bigInt(n);\r\n\r\n            n = String(n);\r\n\r\n            if(n === '0')\r\n                return {'0': 1};\r\n            n = new bigInt(n); /*convert to bigInt for safety*/\r\n            var sign = n.sign ? -1 : 1;\r\n            n = n.abs();\r\n            var factors = {}; /*factor object being returned.*/\r\n            if(n.lt('65536')) { /*less than 2^16 just use trial division*/\r\n                factors = Math2.sfactor(n, factors);\r\n            }\r\n            else {\r\n                var add = function (e) {\r\n                    if(!e.isPrime()) {\r\n                        factors = Math2.sfactor(e, factors);\r\n                    }\r\n                    else\r\n                        factors[e] = (factors[e] || 0) + 1;\r\n                };\r\n\r\n                try {\r\n                    //set a safety\r\n                    var max = 1e3;\r\n                    var safety = 0;\r\n\r\n                    while(!n.abs().equals(1)) {\r\n                        if(n.isPrime()) {\r\n                            add(n);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            function rho(c) {\r\n                                var xf = new bigInt(c),\r\n                                        cz = 2,\r\n                                        x = new bigInt(c),\r\n                                        factor = new bigInt(1);\r\n\r\n                                while(factor.equals(1)) {\r\n                                    for(var i = 0; i <= cz && factor.equals(1); i++) {\r\n                                        //trigger the safety\r\n                                        if(safety++ > max)\r\n                                            throw new Error('stopping');\r\n\r\n                                        x = x.pow(2).add(1).mod(n);\r\n                                        factor = bigInt.gcd(x.minus(xf).abs(), n);\r\n                                    }\r\n\r\n                                    cz = cz * 2;\r\n                                    xf = x;\r\n                                }\r\n                                if(factor.equals(n)) {\r\n                                    return rho(c + 1);\r\n                                }\r\n                                return factor;\r\n                            }\r\n                            var factor = rho(2);\r\n                            add(factor);\r\n                            /*divide out the factor*/\r\n                            n = n.divide(factor);\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    //reset factors\r\n                    factors = {};\r\n                    add(input);\r\n                }\r\n\r\n            }\r\n\r\n            /*put the sign back*/\r\n            if(sign === -1) {\r\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\r\n                factors['-' + sm] = factors[sm];\r\n                delete factors[sm];\r\n            }\r\n\r\n            return factors;\r\n        },\r\n        //factors a number into rectangular box. If sides are primes that this will be\r\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\r\n        boxfactor: function (n, max) {\r\n            max = max || 200; //stop after this number of iterations\r\n            var c, r,\r\n                    d = Math.floor((5 / 12) * n), //the divisor\r\n                    i = 0, //number of iterations\r\n                    safety = false;\r\n            while(true) {\r\n                c = Math.floor(n / d);\r\n                r = n % d;\r\n                if(r === 0)\r\n                    break; //we're done\r\n                if(safety)\r\n                    return [n, 1];\r\n                d = Math.max(r, d - r);\r\n                i++;\r\n                safety = i > max;\r\n            }\r\n            return [c, d, i];\r\n        },\r\n        fib: function (n) {\r\n            var sign = Math.sign(n);\r\n            n = Math.abs(n);\r\n            sign = even(n) ? sign : Math.abs(sign);\r\n            var a = 0, b = 1, f = 1;\r\n            for(var i = 2; i <= n; i++) {\r\n                f = a + b;\r\n                a = b;\r\n                b = f;\r\n            }\r\n            return f * sign;\r\n        },\r\n        mod: function (x, y) {\r\n            return x % y;\r\n        },\r\n        //http://mathworld.wolfram.com/IntegerPart.html\r\n        integer_part: function (x) {\r\n            var sign = Math.sign(x);\r\n            return sign * Math.floor(Math.abs(x));\r\n        },\r\n        simpson: function (f, a, b, step) {\r\n            var get_value = function (f, x, side) {\r\n                var v = f(x);\r\n                var d = 0.000000000001;\r\n                if(isNaN(v)) {\r\n                    v = f(side === 1 ? x + d : x - d);\r\n                }\r\n                return v;\r\n            };\r\n\r\n            step = step || 0.0001;\r\n            //calculate the number of intervals\r\n            var n = Math.abs(Math.floor((b - a) / step));\r\n            //simpson's rule requires an even number of intervals. If it's not then add 1\r\n            if(n % 2 !== 0)\r\n                n++;\r\n            //get the interval size\r\n            var dx = (b - a) / n;\r\n            //get x0\r\n            var retval = get_value(f, a, 1);\r\n\r\n            //get the middle part 4x1+2x2+4x3 ...\r\n            //but first set a flag to see if it's even or odd.\r\n            //The first one is odd so we start there\r\n            var even = false;\r\n            //get x1\r\n            var xi = a + dx;\r\n            //the coefficient\r\n            var c, k;\r\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\r\n            for(var i = 1; i < n; i++) {\r\n                c = even ? 2 : 4;\r\n                k = c * get_value(f, xi, 1);\r\n                retval += k;\r\n                //flip the even flag\r\n                even = !even;\r\n                //increment xi\r\n                xi += dx;\r\n            }\r\n\r\n            //add xn\r\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\r\n\r\n        },\r\n        /**\r\n         * https://github.com/scijs/integrate-adaptive-simpson\r\n         * @param {Function} f - the function being integrated\r\n         * @param {Number} a - lower bound\r\n         * @param {Number} b - upper bound\r\n         * @param {Number} tol - step width\r\n         * @param {Number} maxdepth\r\n         * @returns {Number}\r\n         */\r\n        num_integrate: function (f, a, b, tol, maxdepth) {\r\n            if(maxdepth < 0)\r\n                throw new Error('max depth cannot be negative');\r\n\r\n            /* This algorithm adapted from pseudocode in:*/\r\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\r\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\r\n                if(state.nanEncountered) {\r\n                    return NaN;\r\n                }\r\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\r\n                h = b - a;\r\n                f1 = f(a + h * 0.25);\r\n                f2 = f(b - h * 0.25);\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f1)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f2)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n\r\n                sl = h * (fa + 4 * f1 + fm) / 12;\r\n                sr = h * (fm + 4 * f2 + fb) / 12;\r\n                s2 = sl + sr;\r\n                err = (s2 - V0) / 15;\r\n\r\n                if(state.maxDepthCount > 1000 * maxdepth) {\r\n                    return;\r\n                }\r\n\r\n\r\n                if(depth > maxdepth) {\r\n                    state.maxDepthCount++;\r\n                    return s2 + err;\r\n                }\r\n                else if(Math.abs(err) < tol) {\r\n                    return s2 + err;\r\n                }\r\n                else {\r\n                    m = a + h * 0.5;\r\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\r\n                    if(isNaN(V1)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\r\n\r\n                    if(isNaN(V2)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n\r\n                    return V1 + V2;\r\n                }\r\n            }\r\n\r\n            function integrate(f, a, b, tol, maxdepth) {\r\n                var state = {\r\n                    maxDepthCount: 0,\r\n                    nanEncountered: false\r\n                };\r\n\r\n                if(tol === undefined) {\r\n                    tol = 1e-9;\r\n                }\r\n                if(maxdepth === undefined) {\r\n                    /*Issue #458 - This was lowered because of performance issues. */\r\n                    /*This was suspected from before but is now confirmed with this issue*/\r\n                    maxdepth = 45;\r\n                }\r\n\r\n                var fa = f(a);\r\n                var fm = f(0.5 * (a + b));\r\n                var fb = f(b);\r\n\r\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\r\n\r\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\r\n\r\n                if(state.maxDepthCount > 0) {\r\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\r\n                }\r\n\r\n                if(state.nanEncountered) {\r\n                    throw new Error('Function does not converge over interval!');\r\n                }\r\n\r\n                return result;\r\n            }\r\n            var retval;\r\n\r\n            try {\r\n                retval = integrate(f, a, b, tol, maxdepth);\r\n            }\r\n            catch(e) {\r\n                /*fallback to non-adaptive*/\r\n                return Math2.simpson(f, a, b);\r\n            }\r\n            return nround(retval, 12);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\r\n        //CosineIntegral\r\n        Ci: function (x) {\r\n            var n = 20,\r\n                    /*roughly Euler–Mascheroni*/\r\n                    g = 0.5772156649015329,\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                /*cache 2n*/\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\r\n            }\r\n            return Math.log(x) + g + sum;\r\n        },\r\n        /*SineIntegral*/\r\n        Si: function (x) {\r\n            var n = 20,\r\n                    sum = 0;\r\n            for(var i = 0; i < n; i++) {\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\r\n            }\r\n            return sum;\r\n        },\r\n        /*ExponentialIntegral*/\r\n        Ei: function (x) {\r\n            if(Number(x) === 0)\r\n                return -Infinity;\r\n            var n = 30,\r\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\r\n            }\r\n            return g + Math.abs(Math.log(x)) + sum;\r\n        },\r\n        /*Hyperbolic Sine Integral*/\r\n        /*http://mathworld.wolfram.com/Shi.html*/\r\n        Shi: function (x) {\r\n            var n = 30,\r\n                    sum = 0,\r\n                    k, t;\r\n            for(var i = 0; i < n; i++) {\r\n                k = 2 * i;\r\n                t = k + 1;\r\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\r\n            }\r\n            return sum;\r\n        },\r\n        /*the cosine integral function*/\r\n        Chi: function (x) {\r\n            var dx, g, f;\r\n            dx = 0.001;\r\n            g = 0.5772156649015328606;\r\n            f = function (t) {\r\n                return (Math.cosh(t) - 1) / t;\r\n            };\r\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\r\n        },\r\n        /*the log integral*/\r\n        Li: function (x) {\r\n            return Math2.Ei(Math2.bigLog(x));\r\n        },\r\n        /*the gamma incomplete function*/\r\n        gamma_incomplete: function (n, x) {\r\n            var t = n - 1,\r\n                    sum = 0,\r\n                    x = x || 0;\r\n            for(var i = 0; i < t; i++) {\r\n                sum += Math.pow(x, i) / Math2.factorial(i);\r\n            }\r\n            return Math2.factorial(t) * Math.exp(-x) * sum;\r\n        },\r\n        /*\r\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n         * if x > 0 then 1\r\n         * if x == 0 then 1/2\r\n         * if x < 0 then 0\r\n         */\r\n        step: function (x) {\r\n            if(x > 0)\r\n                return 1;\r\n            if(x < 0)\r\n                return 0;\r\n            return 0.5;\r\n        },\r\n        /*\r\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n         * if |x| > 1/2 then 0\r\n         * if |x| == 1/2 then 1/2\r\n         * if |x| < 1/2 then 1\r\n         */\r\n        rect: function (x) {\r\n            var x = Math.abs(x);\r\n            if(x === 0.5)\r\n                return x;\r\n            if(x > 0.5)\r\n                return 0;\r\n            return 1;\r\n        },\r\n        /*\r\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n         * if x == 0 then 1\r\n         * otherwise sin(x)/x\r\n         */\r\n        sinc: function (x) {\r\n            if(x.equals(0))\r\n                return 1;\r\n            return Math.sin(x) / x;\r\n        },\r\n        /*\r\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n         * if |x| >= 1 then 0\r\n         * if |x| < then 1-|x|\r\n         */\r\n        tri: function (x) {\r\n            x = Math.abs(x);\r\n            if(x >= 1)\r\n                return 0;\r\n            return 1 - x;\r\n        },\r\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\r\n        nthroot: function (A, n) {\r\n            /*make sure the input is of type Frac*/\r\n            if(!(A instanceof Frac))\r\n                A = new Frac(A.toString());\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n.toString());\r\n            if(n.equals(1))\r\n                return A;\r\n            /*begin algorithm*/\r\n            var xk = A.divide(new Frac(2)); /*x0*/\r\n            var e = new Frac(1e-15);\r\n            var dk, dk0, d0;\r\n            var a = n.clone().invert(),\r\n                    b = n.subtract(new Frac(1));\r\n            do {\r\n                var powb = Math2.bigpow(xk, b);\r\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\r\n                dk = Frac.create(dk_dec);\r\n                if(d0)\r\n                    break;\r\n\r\n                xk = xk.add(dk);\r\n                /*check to see if there's no change from the last xk*/\r\n                var dk_dec = dk.toDecimal();\r\n                d0 = dk0 ? dk0 === dk_dec : false;\r\n                dk0 = dk_dec;\r\n            }\r\n            while(dk.abs().gte(e))\r\n\r\n            return xk;\r\n        },\r\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\r\n        /*Just the square root function but big :)*/\r\n        sqrt: function (n) {\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n);\r\n            var xn, d, ld, same_delta;\r\n            var c = 0; /*counter*/\r\n            var done = false;\r\n            var delta = new Frac(1e-20);\r\n            xn = n.divide(new Frac(2));\r\n            var safety = 1000;\r\n            do {\r\n                /*break if we're not converging*/\r\n                if(c > safety)\r\n                    throw new Error('Unable to calculate square root for ' + n);\r\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\r\n                xn = new Frac(xn.decimal(30));\r\n                /*get the difference from the true square*/\r\n                d = n.subtract(xn.multiply(xn));\r\n                /*if the square of the calculated number is close enough to the number*/\r\n                /*we're getting the square root or the last delta was the same as the new delta*/\r\n                /*then we're done*/\r\n                same_delta = ld ? ld.equals(d) : false;\r\n                if(d.clone().abs().lessThan(delta) || same_delta)\r\n                    done = true;\r\n                /*store the calculated delta*/\r\n                ld = d;\r\n                c++; /*increase the counter*/\r\n            }\r\n            while(!done)\r\n\r\n            return xn;\r\n        }\r\n    };\r\n    //link the Math2 object to Settings.FUNCTION_MODULES\r\n    Settings.FUNCTION_MODULES.push(Math2);\r\n    reserveNames(Math2); //reserve the names in Math2\r\n\r\n\r\n//Polyfills ====================================================================\r\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\r\n    Math.sign = Math.sign || function (x) {\r\n        x = +x; // convert to a number\r\n        if(x === 0 || isNaN(x)) {\r\n            return x;\r\n        }\r\n        return x > 0 ? 1 : -1;\r\n    };\r\n\r\n    Math.cosh = Math.cosh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y + 1 / y) / 2;\r\n    };\r\n\r\n    Math.sech = Math.sech || function (x) {\r\n        return 1 / Math.cosh(x);\r\n    };\r\n\r\n    Math.csch = Math.csch || function (x) {\r\n        return 1 / Math.sinh(x);\r\n    };\r\n\r\n    Math.coth = Math.coth || function (x) {\r\n        return 1 / Math.tanh(x);\r\n    };\r\n\r\n    Math.sinh = Math.sinh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y - 1 / y) / 2;\r\n    };\r\n\r\n    Math.tanh = Math.tanh || function (x) {\r\n        if(x === Infinity) {\r\n            return 1;\r\n        }\r\n        else if(x === -Infinity) {\r\n            return -1;\r\n        }\r\n        else {\r\n            var y = Math.exp(2 * x);\r\n            return (y - 1) / (y + 1);\r\n        }\r\n    };\r\n\r\n    Math.asinh = Math.asinh || function (x) {\r\n        if(x === -Infinity) {\r\n            return x;\r\n        }\r\n        else {\r\n            return Math.log(x + Math.sqrt(x * x + 1));\r\n        }\r\n    };\r\n\r\n    Math.acosh = Math.acosh || function (x) {\r\n        return Math.log(x + Math.sqrt(x * x - 1));\r\n    };\r\n\r\n    Math.atanh = Math.atanh || function (x) {\r\n        return Math.log((1 + x) / (1 - x)) / 2;\r\n    };\r\n\r\n    Math.log10 = Math.log10 || function (x) {\r\n        return Math.log(x) * Math.LOG10E;\r\n    };\r\n\r\n    Math.trunc = Math.trunc || function (x) {\r\n        if(isNaN(x)) {\r\n            return NaN;\r\n        }\r\n        if(x > 0) {\r\n            return Math.floor(x);\r\n        }\r\n        return Math.ceil(x);\r\n    };\r\n\r\n//Global functions =============================================================\r\n    /**\r\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector.\r\n     * If all else fails it *assumes* the object has a toString method and will call that.\r\n     *\r\n     * @param {Object} obj\r\n     * @param {String} option get is as a hash\r\n     * @param {int} useGroup\r\n     * @returns {String}\r\n     */\r\n    function text(obj, option, useGroup, decp) { \r\n        var asHash = option === 'hash',\r\n                //whether to wrap numbers in brackets\r\n                wrapCondition = undefined,\r\n                opt = asHash ? undefined : option,\r\n                asDecimal = opt === 'decimal' || opt === 'decimals';\r\n\r\n        if(asDecimal && typeof decp === 'undefined')\r\n            decp = Settings.DEFAULT_DECP;\r\n\r\n        function toString(obj) {\r\n            switch(option)\r\n            {\r\n                case 'decimals':\r\n                case 'decimal':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return obj.valueOf();\r\n                case 'recurring':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf(\"'\") !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var negative = false;\r\n                    var m = Number(parts[0]);\r\n                    if(m < 0) {\r\n                        m = -m;\r\n                        negative = true;\r\n                    }\r\n                    var n = Number(parts[1]);\r\n                    if(!n)\r\n                        n = 1;\r\n\r\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\r\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\r\n                    quotient = quotient.toString() + \".\";\r\n                    while(c && c < n) {\r\n                        c *= 10;\r\n                        quotient += \"0\";\r\n                    }\r\n                    var digits = \"\", passed = [], i = 0;\r\n                    while(true) {\r\n                        if(typeof passed[c] !== 'undefined') {\r\n                            var prefix = digits.slice(0, passed[c]),\r\n                                    cycle = digits.slice(passed[c]),\r\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\r\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\r\n                        }\r\n                        var q = Math.floor(c / n), r = c - q * n;\r\n                        passed[c] = i;\r\n                        digits += q.toString();\r\n                        i += 1;\r\n                        c = 10 * r;\r\n                    }\r\n                case 'mixed':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var numer = new bigInt(parts[0]);\r\n                    var denom = new bigInt(parts[1]);\r\n                    if(denom.equals(0))\r\n                        denom = new bigInt(1);\r\n\r\n                    //return the quotient plus the remainder\r\n                    var divmod = numer.divmod(denom);\r\n                    var quotient = divmod.quotient;\r\n                    var remainder = divmod.remainder;\r\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\r\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\r\n                case 'scientific':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return new Scientific(obj.valueOf()).toString(Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);\r\n                default:\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    return obj.toString();\r\n            }\r\n        }\r\n\r\n        //if the object is a symbol\r\n        if(isSymbol(obj)) {\r\n            var multiplier = '',\r\n                    power = '',\r\n                    sign = '',\r\n                    group = obj.group || useGroup,\r\n                    value = obj.value;\r\n\r\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\r\n            if(!asHash) {\r\n                //use asDecimal to get the object back as a decimal\r\n                var om = toString(obj.multiplier);\r\n                if(om == '-1' && String(obj.multiplier) === '-1') {\r\n                    sign = '-';\r\n                    om = '1';\r\n                }\r\n                //only add the multiplier if it's not 1\r\n                if(om != '1')\r\n                    multiplier = om;\r\n                //use asDecimal to get the object back as a decimal\r\n                var p = obj.power ? toString(obj.power) : '';\r\n                //only add the multiplier\r\n                if(p != '1') {\r\n                    //is it a symbol\r\n                    if(isSymbol(p)) {\r\n                        power = text(p, opt);\r\n                    }\r\n                    else {\r\n                        power = p;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch(group) {\r\n                case N:\r\n                    multiplier = '';\r\n                    //round if requested\r\n                    var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier);\r\n                    //if it's numerical then all we need is the multiplier\r\n                    value = String(obj.multiplier) == '-1' ? '1' : m;\r\n                    power = '';\r\n                    break;\r\n                case PL:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CP:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CB:\r\n                    value = obj.collectSymbols(function (symbol) {\r\n                        var g = symbol.group;\r\n                        //both groups will already be in brackets if their power is greater than 1\r\n                        //so skip it.\r\n                        if((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\r\n                            return inBrackets(text(symbol, opt));\r\n                        }\r\n                        return text(symbol, opt);\r\n                    }).join('*');\r\n                    break;\r\n                case EX:\r\n                    var pg = obj.previousGroup,\r\n                            pwg = obj.power.group;\r\n\r\n                    //PL are the exception. It's simpler to just collect and set the value\r\n                    if(pg === PL)\r\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\r\n                    if(!(pg === N || pg === S || pg === FN) && !asHash) {\r\n                        value = inBrackets(value);\r\n                    }\r\n\r\n                    if((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\r\n                        power = inBrackets(power);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if(group === FN) {\r\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\r\n                    return text(symbol, opt);\r\n                }).join(','));\r\n            }\r\n            //TODO: Needs to be more efficient. Maybe.\r\n            if(group === FN && obj.fname in CUSTOM_OPERATORS) {\r\n                var a = text(obj.args[0]);\r\n                var b = text(obj.args[1]);\r\n                if(obj.args[0].isComposite()) //preserve the brackets\r\n                    a = inBrackets(a);\r\n                if(obj.args[1].isComposite()) //preserve the brackets\r\n                    b = inBrackets(b);\r\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\r\n            }\r\n            //wrap the power since / is less than ^\r\n            //TODO: introduce method call isSimple\r\n            if(power && group !== EX && wrapCondition(power)) {\r\n                power = inBrackets(power);\r\n            }\r\n\r\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\r\n            //by a multiplier and have to be in brackets to preserve the order of precedence\r\n            if(((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\r\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\r\n                    || !asHash && group === P && value == -1\r\n                    || obj.fname === PARENTHESIS) {\r\n\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            if(decp && (option === 'decimal' || option === 'decimals' && multiplier)) {\r\n                multiplier = nround(multiplier, decp);\r\n            }\r\n\r\n\r\n            //add the sign back\r\n            var c = sign + multiplier;\r\n\r\n            if(multiplier && wrapCondition(multiplier))\r\n                c = inBrackets(c);\r\n\r\n            if(power < 0)\r\n                power = inBrackets(power);\r\n\r\n            //add the multiplication back\r\n            if(multiplier)\r\n                c = c + '*';\r\n\r\n            if(power) {\r\n                if(value === 'e' && Settings.E_TO_EXP) {\r\n                    return c + 'exp' + inBrackets(power);\r\n                }\r\n                power = Settings.POWER_OPERATOR + power;\r\n            }\r\n\r\n            //this needs serious rethinking. Must fix\r\n            if(group === EX && value.charAt(0) === '-') {\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            var cv = c + value;\r\n\r\n            if(obj.parens) {\r\n                cv = inBrackets(cv);\r\n            }\r\n\r\n            return cv + power;\r\n        }\r\n        else if(isVector(obj)) {\r\n            var l = obj.elements.length,\r\n                    c = [];\r\n            for(var i = 0; i < l; i++)\r\n                c.push(obj.elements[i].text(option));\r\n            return '[' + c.join(',') + ']';\r\n        }\r\n        else {\r\n            try {\r\n                return obj.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calculates prime factors for a number. It first checks if the number\r\n     * is a prime number. If it's not then it will calculate all the primes \r\n     * for that number.\r\n     * @param {int} num\r\n     * @returns {Array}\r\n     */\r\n\r\n    function primeFactors(num) {\r\n        if(isPrime(num)) {\r\n            return [num];\r\n        }\r\n\r\n        var l = num, i = 1, factors = [],\r\n                epsilon = 2.2204460492503130808472633361816E-16;\r\n        while(i < l) {\r\n            var quotient = num / i;\r\n            var whole = Math.floor(quotient);\r\n            var remainder = quotient - whole;\r\n\r\n            if(remainder <= epsilon && i > 1) {\r\n                // If the prime wasn't found but calculated then save it and\r\n                // add it as a factor.\r\n                if(isPrime(i)) {\r\n                    if(PRIMES.indexOf(i) === -1) {\r\n                        PRIMES.push(i);\r\n                    }\r\n                    factors.push(i);\r\n                }\r\n\r\n                // Check if the remainder is a prime\r\n                if(isPrime(whole)) {\r\n                    factors.push(whole);\r\n                    break;\r\n                }\r\n\r\n                l = whole;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        return factors.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n    }\r\n    ;\r\n    primeFactors(314146179365)\r\n//Expression ===================================================================\r\n    /**\r\n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and\r\n     * provides the user with some useful functions. If you want to provide the user with extra\r\n     * library functions then add them to this class's prototype.\r\n     * @param {Symbol} symbol\r\n     * @returns {Expression} wraps around the Symbol class\r\n     */\r\n    function Expression(symbol) {\r\n        //we don't want arrays wrapped\r\n        this.symbol = symbol;\r\n    }\r\n    /**\r\n     * Returns stored expression at index. For first index use 1 not 0.\r\n     * @param {bool} asType\r\n     * @param {Integer} expression_number\r\n     */\r\n    Expression.getExpression = function (expression_number, asType) {\r\n        if(expression_number === 'last' || !expression_number)\r\n            expression_number = EXPRESSIONS.length;\r\n        if(expression_number === 'first')\r\n            expression_number = 1;\r\n        var index = expression_number - 1,\r\n                expression = EXPRESSIONS[index],\r\n                retval = expression ? new Expression(expression) : expression;\r\n        return retval;\r\n    };\r\n    Expression.prototype = {\r\n        /**\r\n         * Returns the text representation of the expression\r\n         * @param {String} opt - option of formatting numbers\r\n         * @param {Number} n The number of significant figures\r\n         * @returns {String}\r\n         */\r\n        text: function (opt, n) {\r\n            n = n || Settings.EXPRESSION_DECP;\r\n            opt = opt || 'decimals';\r\n            if(this.symbol.text_)\r\n                return this.symbol.text_(opt);\r\n\r\n            return text(this.symbol, opt, undefined, n);\r\n        },\r\n        /**\r\n         * Returns the latex representation of the expression\r\n         * @param {String} option - option for formatting numbers\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            if(this.symbol.latex)\r\n                return this.symbol.latex(option);\r\n            return LaTeX.latex(this.symbol, option);\r\n        },\r\n        valueOf: function () {\r\n            return this.symbol.valueOf();\r\n        },\r\n\r\n        /**\r\n         * Evaluates the expression and tries to reduce it to a number if possible.\r\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n         * Other than that it will just use it's own text and reparse\r\n         * @returns {Expression}\r\n         */\r\n        evaluate: function () {\r\n\r\n            // Don't evaluate an empty vector\r\n            if(isVector(this.symbol) && this.symbol.dimensions() === 0) {\r\n                return this;\r\n            }\r\n\r\n            var first_arg = arguments[0], expression, idx = 1;\r\n\r\n            //Enable getting of expressions using the % so for example %1 should get the first expression\r\n            if(typeof first_arg === 'string') {\r\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\r\n            }\r\n            else if(first_arg instanceof Expression || isSymbol(first_arg)) {\r\n                expression = first_arg.text();\r\n            }\r\n            else {\r\n                expression = this.symbol.text();\r\n                idx--;\r\n            }\r\n\r\n            var subs = arguments[idx] || {};\r\n\r\n            var retval = new Expression(block('PARSE2NUMBER', function () {\r\n                return _.parse(expression, subs);\r\n            }, true));\r\n\r\n            return retval;\r\n        },\r\n        /**\r\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of\r\n         * the default alphabetical order\r\n         * @param vars {Array}\r\n         */\r\n        buildFunction: function (vars) {\r\n            return Build.build(this.symbol, vars);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is just a plain old number\r\n         * @returns {boolean}\r\n         */\r\n        isNumber: function () {\r\n            return isNumericSymbol(this.symbol);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is infinity\r\n         * @returns {boolean}\r\n         */\r\n        isInfinity: function () {\r\n            return Math.abs(this.symbol.multiplier) === Infinity;\r\n        },\r\n        /**\r\n         * Checks to see if the expression contains imaginary numbers\r\n         * @returns {boolean}\r\n         */\r\n        isImaginary: function () {\r\n            return evaluate(_.parse(this.symbol)).isImaginary();\r\n        },\r\n        /**\r\n         * Returns all the variables in the expression\r\n         * @returns {Array}\r\n         */\r\n        variables: function () {\r\n            return variables(this.symbol);\r\n        },\r\n\r\n        toString: function () {\r\n            try {\r\n                if(isArray(this.symbol))\r\n                    return '[' + this.symbol.toString() + ']';\r\n                return this.symbol.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        },\r\n        //forces the symbol to be returned as a decimal\r\n        toDecimal: function (prec) {\r\n            Settings.precision = prec;\r\n            var dec = text(this.symbol, 'decimals');\r\n            Settings.precision = undefined;\r\n            return dec;\r\n        },\r\n        //checks to see if the expression is a fraction\r\n        isFraction: function () {\r\n            return isFraction(this.symbol);\r\n        },\r\n        //checks to see if the symbol is a multivariate polynomial\r\n        isPolynomial: function () {\r\n            return this.symbol.isPoly();\r\n        },\r\n        //performs a substitution\r\n        sub: function (symbol, for_symbol) {\r\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\r\n        },\r\n        operation: function (otype, symbol) {\r\n            if(isExpression(symbol))\r\n                symbol = symbol.symbol;\r\n            else if(!isSymbol(symbol))\r\n                symbol = _.parse(symbol);\r\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\r\n        },\r\n        add: function (symbol) {\r\n            return this.operation('add', symbol);\r\n        },\r\n        subtract: function (symbol) {\r\n            return this.operation('subtract', symbol);\r\n        },\r\n        multiply: function (symbol) {\r\n            return this.operation('multiply', symbol);\r\n        },\r\n        divide: function (symbol) {\r\n            return this.operation('divide', symbol);\r\n        },\r\n        pow: function (symbol) {\r\n            return this.operation('pow', symbol);\r\n        },\r\n        expand: function () {\r\n            return new Expression(_.expand(this.symbol));\r\n        },\r\n        each: function (callback, i) {\r\n            if(this.symbol.each)\r\n                this.symbol.each(callback, i);\r\n            else if(isArray(this.symbol)) {\r\n                for(var i = 0; i < this.symbol.length; i++)\r\n                    callback.call(this.symbol, this.symbol[i], i);\r\n            }\r\n            else\r\n                callback.call(this.symbol);\r\n        },\r\n        eq: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = _.subtract(this.symbol.clone(), value);\r\n                return d.equals(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        lt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.lessThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        gt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.greaterThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n        },\r\n        gte: function (value) {\r\n            return this.gt(value) || this.eq(value);\r\n        },\r\n        lte: function (value) {\r\n            return this.lt(value) || this.eq(value);\r\n        },\r\n\r\n        numerator: function () {\r\n            return new Expression(this.symbol.getNum());\r\n        },\r\n        denominator: function () {\r\n            return new Expression(this.symbol.getDenom());\r\n        },\r\n        hasFunction: function (f) {\r\n            return this.symbol.containsFunction(f);\r\n        },\r\n        contains: function (variable) {\r\n            return this.symbol.contains(variable);\r\n        }\r\n    };\r\n    //Aliases\r\n    Expression.prototype.toTeX = Expression.prototype.latex;\r\n\r\n    \r\n//Scientific ===================================================================\r\n    /*\r\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\r\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\r\n     */\r\n\r\n    function Scientific(num) {\r\n        if(!(this instanceof Scientific))\r\n            return new Scientific(num);\r\n\r\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\r\n\r\n        //remove the sign\r\n        if(num.startsWith('-')) {\r\n            this.sign = -1;\r\n            //remove the sign\r\n            num = num.substr(1, num.length);\r\n        }\r\n        else {\r\n            this.sign = 1;\r\n        }\r\n\r\n        if(Scientific.isScientific(num)) {\r\n            this.fromScientific(num);\r\n        }\r\n        else {\r\n            this.convert(num);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Scientific.prototype = {\r\n        fromScientific: function (num) {\r\n            var parts = String(num).toLowerCase().split('e');\r\n            this.coeff = parts[0];\r\n            this.exponent = parts[1];\r\n\r\n            return this;\r\n        },\r\n        convert: function (num) {\r\n            //get wholes and decimals\r\n            var parts = num.split('.');\r\n            //make zero go away\r\n            var w = parts[0] || '';\r\n            var d = parts[1] || '';\r\n            //convert zero to blank strings\r\n            w = Scientific.removeLeadingZeroes(w);\r\n            d = Scientific.removeTrailingZeroes(d);\r\n            //find the location of the decimal place which is right after the wholes\r\n            var dot_location = w.length;\r\n            //add them together so we can move the dot\r\n            var n = w + d;\r\n            //find the next number\r\n            var zeroes = Scientific.leadingZeroes(n).length;\r\n            //set the exponent\r\n            this.exponent = dot_location - (zeroes + 1);\r\n            //set the coeff but first remove leading zeroes\r\n            var coeff = Scientific.removeLeadingZeroes(n);\r\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\r\n\r\n            //the coeff decimal places\r\n            var dec = this.coeff.split('.')[1] || ''; //if it's undefined or zero it's going to blank\r\n\r\n            this.decp = dec === '0' ? 0 : dec.length;\r\n            //decimals\r\n            this.dec = d;\r\n            //wholes\r\n            this.wholes = w;\r\n\r\n            return this;\r\n        },\r\n        round: function (num) {\r\n            var n = this.copy();\r\n\r\n            num = Number(num); //cast to number for safety\r\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\r\n            //we can round based on this\r\n            if(num === 0)\r\n                n.coeff = n.coeff.charAt(0);\r\n            else {\r\n                //get up to n-1 digits\r\n                var rounded = this.coeff.substring(0, num + 1);\r\n                //get the next two\r\n                var next_two = this.coeff.substring(num + 1, num + 3);\r\n                //the extra digit\r\n                var ed = next_two.charAt(0);\r\n\r\n                if(next_two.charAt(1) > 4)\r\n                    ed++;\r\n\r\n                n.coeff = rounded + ed;\r\n            }\r\n\r\n            return n;\r\n        },\r\n        copy: function () {\r\n            var n = new Scientific(0);\r\n            n.coeff = this.coeff;\r\n            n.exponent = this.exponent;\r\n            n.sign = this.sign;\r\n            return n;\r\n        },\r\n        toString: function (n) {\r\n            var retval;\r\n\r\n            if(Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS && this.exponent === 0 && this.decp < n) {\r\n                if(this.decp === 0)\r\n                    retval = this.wholes;\r\n                else\r\n                    retval = this.coeff;\r\n            }\r\n            else {\r\n                var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, Math.min(n, this.decp || 1));\r\n                retval = this.exponent === 0 ? coeff : coeff + 'e' + this.exponent;\r\n            }\r\n\r\n            return (this.sign === -1 ? '-' : '') + retval;\r\n        }\r\n    };\r\n\r\n    Scientific.isScientific = function (num) {\r\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\r\n    };\r\n    Scientific.leadingZeroes = function (num) {\r\n        var match = num.match(/^(0*).*$/);\r\n        return match ? match[1] : '';\r\n    };\r\n    Scientific.removeLeadingZeroes = function (num) {\r\n        var match = num.match(/^0*(.*)$/);\r\n        return match ? match[1] : '';\r\n    };\r\n\r\n    Scientific.removeTrailingZeroes = function (num) {\r\n        var match = num.match(/0*$/);\r\n        return match ? num.substring(0, num.length - match[0].length) : '';\r\n    };\r\n\r\n    Scientific.round = function (c, n) {\r\n        var coeff = nround(c, n);\r\n        var m = String(coeff).split('.').pop();\r\n        var d = n - m.length;\r\n        //if we're asking for more significant figures\r\n        if(d > 0) {\r\n            coeff = coeff + (new Array(d + 1).join(0));\r\n        }\r\n        return coeff;\r\n    };\r\n\r\n//Frac =========================================================================\r\n    function Frac(n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        if(n === undefined)\r\n            return this;\r\n        try {\r\n            if(isInt(n)) {\r\n                try {\r\n                    this.num = bigInt(n);\r\n                    this.den = bigInt(1);\r\n                }\r\n                catch(e) {\r\n                    return Frac.simple(n);\r\n                }\r\n            }\r\n            else {\r\n                var frac = n instanceof bigDec ? Fraction.quickConversion(n) : Fraction.convert(n);\r\n                this.num = new bigInt(frac[0]);\r\n                this.den = new bigInt(frac[1]);\r\n            }\r\n        }\r\n        catch(e) {\r\n            return Frac.simple(n);\r\n        }\r\n\r\n    }\r\n    //safe to use with negative numbers or other types\r\n    Frac.create = function (n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        n = n.toString();\r\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\r\n        if(is_neg)\r\n            n = n.substr(1, n.length - 1); //remove the sign\r\n        var frac = new Frac(n);\r\n        //put the sign back\r\n        if(is_neg)\r\n            frac.negate();\r\n        return frac;\r\n    };\r\n    Frac.isFrac = function (o) {\r\n        return (o instanceof Frac);\r\n    };\r\n    Frac.quick = function (n, d) {\r\n        var frac = new Frac();\r\n        frac.num = new bigInt(n);\r\n        frac.den = new bigInt(d);\r\n        return frac;\r\n    };\r\n    Frac.simple = function (n) {\r\n        var nstr = String(scientificToDecimal(n)),\r\n                m_dc = nstr.split('.'),\r\n                num = m_dc.join(''),\r\n                den = 1,\r\n                l = (m_dc[1] || '').length;\r\n        for(var i = 0; i < l; i++)\r\n            den += '0';\r\n        var frac = Frac.quick(num, den);\r\n        return frac.simplify();\r\n    };\r\n    Frac.prototype = {\r\n        multiply: function (m) {\r\n            if(this.isOne()) {\r\n                return m.clone();\r\n            }\r\n            if(m.isOne()) {\r\n                return this.clone();\r\n            }\r\n\r\n            var c = this.clone();\r\n            c.num = c.num.multiply(m.num);\r\n            c.den = c.den.multiply(m.den);\r\n\r\n            return c.simplify();\r\n        },\r\n        divide: function (m) {\r\n            if(m.equals(0))\r\n                throw new DivisionByZero('Division by zero not allowed!');\r\n            return this.clone().multiply(m.clone().invert()).simplify();\r\n        },\r\n        subtract: function (m) {\r\n            return this.clone().add(m.clone().neg());\r\n        },\r\n        neg: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        add: function (m) {\r\n            var n1 = this.den, n2 = m.den, c = this.clone();\r\n            var a = c.num, b = m.num;\r\n            if(n1.equals(n2)) {\r\n                c.num = a.add(b);\r\n            }\r\n            else {\r\n                c.num = a.multiply(n2).add(b.multiply(n1));\r\n                c.den = n1.multiply(n2);\r\n            }\r\n\r\n            return c.simplify();\r\n        },\r\n        mod: function (m) {\r\n            var a = this.clone(),\r\n                    b = m.clone();\r\n            //make their denominators even and return the mod of their numerators\r\n            a.num = a.num.multiply(b.den);\r\n            a.den = a.den.multiply(b.den);\r\n            b.num = b.num.multiply(this.den);\r\n            b.den = b.den.multiply(this.den);\r\n            a.num = a.num.mod(b.num);\r\n            return a.simplify();\r\n        },\r\n        simplify: function () {\r\n            var gcd = bigInt.gcd(this.num, this.den);\r\n\r\n            this.num = this.num.divide(gcd);\r\n            this.den = this.den.divide(gcd);\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var m = new Frac();\r\n            m.num = new bigInt(this.num);\r\n            m.den = new bigInt(this.den);\r\n            return m;\r\n        },\r\n        decimal: function (prec) {\r\n            var sign = this.num.isNegative() ? '-' : '';\r\n            if(this.num.equals(this.den)) {\r\n                return '1';\r\n            }\r\n            //go plus one for rounding\r\n            prec = prec || Settings.PRECISION;\r\n            prec++;\r\n            var narr = [],\r\n                    n = this.num.abs(),\r\n                    d = this.den;\r\n            for(var i = 0; i < prec; i++) {\r\n                var w = n.divide(d), //divide out whole\r\n                        r = n.subtract(w.multiply(d)); //get remainder\r\n\r\n                narr.push(w);\r\n                if(r.equals(0))\r\n                    break;\r\n                n = r.times(10); //shift one dec place\r\n            }\r\n            var whole = narr.shift();\r\n            if(narr.length === 0) {\r\n                return sign + whole.toString();\r\n            }\r\n\r\n            if(i === prec) {\r\n                var lt = [];\r\n                //get the last two so we can round it\r\n                for(var i = 0; i < 2; i++)\r\n                    lt.unshift(narr.pop());\r\n                //put the last digit back by rounding the last two\r\n                narr.push(Math.round(lt.join('.')));\r\n            }\r\n\r\n            var dec = whole.toString() + '.' + narr.join('');\r\n            return sign + dec;\r\n        },\r\n        toDecimal: function (prec) { \r\n            prec = prec || Settings.PRECISION;\r\n            if(prec) {\r\n                return this.decimal(prec);\r\n            }\r\n            else {\r\n                return this.num / this.den;\r\n            }\r\n        },\r\n        qcompare: function (n) {\r\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\r\n        },\r\n        equals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].equals(q[1]);\r\n        },\r\n        absEquals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].abs().equals(q[1]);\r\n        },\r\n        //lazy check to be fixed. Sufficient for now but will cause future problems\r\n        greaterThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].gt(q[1]);\r\n        },\r\n        gte: function (n) {\r\n            return this.greaterThan(n) || this.equals(n);\r\n        },\r\n        lte: function (n) {\r\n            return this.lessThan(n) || this.equals(n);\r\n        },\r\n        lessThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].lt(q[1]);\r\n        },\r\n        isInteger: function () {\r\n            return this.den.equals(1);\r\n        },\r\n        negate: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        invert: function () {\r\n            var t = this.den;\r\n            //why invert 0/1? It'll become 1/0 and that's a lie.\r\n            if(!this.num.equals(0)) {\r\n                var isnegative = this.num.isNegative();\r\n                this.den = this.num.abs();\r\n                this.num = t;\r\n                if(isnegative)\r\n                    this.num = this.num.multiply(-1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        isOne: function () {\r\n            return this.num.equals(1) && this.den.equals(1);\r\n        },\r\n        sign: function () {\r\n            return this.num.isNegative() ? -1 : 1;\r\n        },\r\n        abs: function () {\r\n            this.num = this.num.abs();\r\n            return this;\r\n        },\r\n        gcd: function (f) {\r\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\r\n        },\r\n        toString: function () {\r\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\r\n        },\r\n        valueOf: function () {\r\n//            if(this.num == 24) throw new Error(999)\r\n            if(Settings.USE_BIG)\r\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\r\n            var retval = this.num / this.den;\r\n            return retval;\r\n        },\r\n        isNegative: function () {\r\n            return this.toDecimal() < 0;\r\n        }\r\n    };\r\n\r\n//Symbol =======================================================================\r\n    /**\r\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group.\r\n     * All symbols except for \"numbers (group N)\" have a power.\r\n     * @class Primary data type for the Parser.\r\n     * @param {String} obj\r\n     * @returns {Symbol}\r\n     */\r\n    function Symbol(obj) {\r\n        var isInfinity = obj === 'Infinity';\r\n        // This enables the class to be instantiated without the new operator\r\n        if(!(this instanceof Symbol)) {\r\n            return new Symbol(obj);\r\n        }\r\n        // Convert big numbers to a string\r\n        if(obj instanceof bigDec) {\r\n            obj = obj.toString();\r\n        }\r\n        //define numeric symbols\r\n        if(/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj) || obj instanceof bigDec) {\r\n            this.group = N;\r\n            this.value = CONST_HASH;\r\n            this.multiplier = new Frac(obj);\r\n        }\r\n        //define symbolic symbols\r\n        else {\r\n            this.group = S;\r\n            validateName(obj);\r\n            this.value = obj;\r\n            this.multiplier = new Frac(1);\r\n            this.imaginary = obj === Settings.IMAGINARY;\r\n            this.isInfinity = isInfinity;\r\n        }\r\n\r\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\r\n        //Although this is still redundant in constants, it simplifies the logic in\r\n        //other parts so we'll keep it\r\n        this.power = new Frac(1);\r\n\r\n        // Added to silence the strict warning.\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns vanilla imaginary symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.imaginary = function () {\r\n        var s = new Symbol(Settings.IMAGINARY);\r\n        s.imaginary = true;\r\n        return s;\r\n    };\r\n    /**\r\n     * Return nerdamer's representation of Infinity\r\n     * @param {int} negative -1 to return negative infinity\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.infinity = function (negative) {\r\n        var v = new Symbol('Infinity');\r\n        if(negative === -1)\r\n            v.negate();\r\n        return v;\r\n    };\r\n    Symbol.shell = function (group, value) {\r\n        var symbol = new Symbol(value);\r\n        symbol.group = group;\r\n        symbol.symbols = {};\r\n        symbol.length = 0;\r\n        return symbol;\r\n    };\r\n    //sqrt(x) -> x^(1/2)\r\n    Symbol.unwrapSQRT = function (symbol, all) {\r\n        var p = symbol.power;\r\n        if(symbol.fname === SQRT && (symbol.isLinear() || all)) {\r\n            var t = symbol.args[0].clone();\r\n            t.power = t.power.multiply(new Frac(1 / 2));\r\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\r\n            symbol = t;\r\n            if(all)\r\n                symbol.power = p.multiply(new Frac(1 / 2));\r\n        }\r\n\r\n        return symbol;\r\n    };\r\n    Symbol.hyp = function (a, b) {\r\n        a = a || new Symbol(0);\r\n        b = b || new Symbol(0);\r\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\r\n    };\r\n    //converts to polar form array\r\n    Symbol.toPolarFormArray = function (symbol) {\r\n        var re, im, r, theta;\r\n        re = symbol.realpart();\r\n        im = symbol.imagpart();\r\n        r = Symbol.hyp(re, im);\r\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\r\n        return [r, theta];\r\n    };\r\n    //removes parentheses\r\n    Symbol.unwrapPARENS = function (symbol) {\r\n        if(symbol.fname === '') {\r\n            var r = symbol.args[0];\r\n            r.power = r.power.multiply(symbol.power);\r\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\r\n            if(symbol.fname === '')\r\n                return Symbol.unwrapPARENS(r);\r\n            return r;\r\n        }\r\n        return symbol;\r\n    };\r\n    //quickly creates a Symbol\r\n    Symbol.create = function (value, power) {\r\n        power = power === undefined ? 1 : power;\r\n        return _.parse('(' + value + ')^(' + power + ')');\r\n    };\r\n    Symbol.prototype = {\r\n        /**\r\n         * Gets nth root accounting for rounding errors\r\n         * @param {Number} n\r\n         * @return {Number}\r\n         */\r\n        getNth: function (n) {\r\n            // First calculate the root\r\n            var root = evaluate(_.pow(_.parse(this.multiplier), _.parse(n).invert()));\r\n            // Round of any errors\r\n            var rounded = _.parse(nround(root));\r\n            // Reverse the root\r\n            var e = evaluate(_.pow(rounded, _.parse(n)));\r\n            // If the rounded root equals the original number then we're good \r\n            if(e.equals(_.parse(this.multiplier))) {\r\n                return rounded;\r\n            }\r\n            // Otherwise return the unrounded version\r\n            return root;\r\n        },\r\n        /**\r\n         * Checks if symbol is to the nth power\r\n         * @returns {Boolean}\r\n         */\r\n        isToNth: function (n) {\r\n            // Start by check in the multiplier for squareness\r\n            // First get the root but round it because currently we still depend \r\n            var root = this.getNth(n);\r\n            var nthMultiplier = isInt(root);\r\n            var nthPower;\r\n\r\n            if(this.group === CB) {\r\n                // Start by assuming that all will be square.\r\n                nthPower = true;\r\n                // All it takes is for one of the symbols to not have an even power\r\n                // e.g. x^n1*y^n2 requires that both n1 and n2 are even\r\n                this.each(function (x) {\r\n                    var isNth = x.isToNth(n);\r\n\r\n                    if(!isNth) {\r\n                        nthPower = false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // Check if the power is divisible by n if it's not a number.\r\n                nthPower = this.group === N ? true : isInt(_.divide(_.parse(this.power), _.parse(n)));\r\n            }\r\n\r\n            return nthMultiplier && nthPower;\r\n        },\r\n        /**\r\n         * Checks if a symbol is square\r\n         * @return {Boolean}\r\n         */\r\n        isSquare: function () {\r\n            return this.isToNth(2);\r\n        },\r\n        /**\r\n         * Checks if a symbol is cube\r\n         * @return {Boolean}\r\n         */\r\n        isCube: function () {\r\n            return this.isToNth(3);\r\n        },\r\n        /**\r\n         * Checks if a symbol is a bare variable\r\n         * @return {Boolean}\r\n         */\r\n        isSimple: function () {\r\n            return this.power.equals(1) && this.multiplier.equals(1);\r\n        },\r\n        /**\r\n         * Simplifies the power of the symbol\r\n         * @returns {Symbol} a clone of the symbol\r\n         */\r\n        powSimp: function () {\r\n            if(this.group === CB) {\r\n                var powers = [],\r\n                        sign = this.multiplier.sign();\r\n                this.each(function (x) {\r\n                    var p = x.power;\r\n                    //why waste time if I can't do anything anyway\r\n                    if(isSymbol(p) || p.equals(1))\r\n                        return this.clone();\r\n                    powers.push(p);\r\n                });\r\n                var min = new Frac(arrayMin(powers));\r\n\r\n                //handle the coefficient\r\n                //handle the multiplier\r\n                var sign = this.multiplier.sign(),\r\n                        m = this.multiplier.clone().abs(),\r\n                        mfactors = Math2.ifactor(m);\r\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\r\n                //we can then reduce it to 2*3*5*(15)^2\r\n                var out_ = new Frac(1);\r\n                var in_ = new Frac(1);\r\n\r\n                for(var x in mfactors) {\r\n                    var n = new Frac(mfactors[x]);\r\n                    if(!n.lessThan(min)) {\r\n                        n = n.divide(min).subtract(new Frac(1));\r\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\r\n                    }\r\n\r\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\r\n                }\r\n                var t = new Symbol(in_);\r\n                this.each(function (x) {\r\n                    x = x.clone();\r\n                    x.power = x.power.divide(min);\r\n                    t = _.multiply(t, x);\r\n                });\r\n\r\n                var xt = _.symfunction(PARENTHESIS, [t]);\r\n                xt.power = min;\r\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\r\n\r\n                return xt;\r\n            }\r\n            return this.clone();\r\n        },\r\n        /**\r\n         * Checks to see if two functions are of equal value\r\n         * @param {Symbol} symbol\r\n         */\r\n        equals: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.value === symbol.value && this.power.equals(symbol.power)\r\n                    && this.multiplier.equals(symbol.multiplier)\r\n                    && this.group === symbol.group;\r\n        },\r\n        abs: function () {\r\n            var e = this.clone();\r\n            e.multiplier.abs();\r\n            return e;\r\n        },\r\n        // Greater than\r\n        gt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Greater than\r\n        gte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        /**\r\n         * Because nerdamer doesn't group symbols by polynomials but\r\n         * rather a custom grouping method, this has to be\r\n         * reinserted in order to make use of most algorithms. This function\r\n         * checks if the symbol meets the criteria of a polynomial.\r\n         * @param {bool} multivariate\r\n         * @returns {boolean}\r\n         */\r\n        isPoly: function (multivariate) {\r\n            var g = this.group,\r\n                    p = this.power;\r\n            //the power must be a integer so fail if it's not\r\n            if(!isInt(p) || p < 0)\r\n                return false;\r\n            //constants and first orders\r\n            if(g === N || g === S || this.isConstant(true))\r\n                return true;\r\n            var vars = variables(this);\r\n            if(g === CB && vars.length === 1) {\r\n                //the variable is assumed the only one that was found\r\n                var v = vars[0];\r\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\r\n                if(!v)\r\n                    return true;\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    //sqrt(x)\r\n                    if(sym.group === FN && !sym.args[0].isConstant())\r\n                        return false;\r\n                    if(!sym.contains(v) && !sym.isConstant(true))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            //PL groups. These only fail if a power is not an int\r\n            //this should handle cases such as x^2*t\r\n            if(this.isComposite() || g === CB && multivariate) {\r\n                //fail if we're not checking for multivariate polynomials\r\n                if(!multivariate && vars.length > 1)\r\n                    return false;\r\n                //loop though the symbols and check if they qualify\r\n                for(var x in this.symbols) {\r\n                    //we've already the symbols if we're not checking for multivariates at this point\r\n                    //so we check the sub-symbols\r\n                    if(!this.symbols[x].isPoly(multivariate))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n\r\n            /*\r\n             //all tests must have passed so we must be dealing with a polynomial\r\n             return true;\r\n             */\r\n        },\r\n        //removes the requested variable from the symbol and returns the remainder\r\n        stripVar: function (x, exclude_x) {\r\n            var retval;\r\n            if((this.group === PL || this.group === S) && this.value === x)\r\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\r\n            else if(this.group === CB && this.isLinear()) {\r\n                retval = new Symbol(1);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x, true))\r\n                        retval = _.multiply(retval, s.clone());\r\n                });\r\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\r\n            }\r\n            else if(this.group === CP && !this.isLinear()) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === CP && this.isLinear()) {\r\n                retval = new Symbol(0);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x)) {\r\n                        var t = s.clone();\r\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\r\n                        retval = _.add(retval, t);\r\n                    }\r\n                });\r\n                //BIG TODO!!! It doesn't make much sense\r\n                if(retval.equals(0))\r\n                    retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === EX && this.power.contains(x, true)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === FN && this.contains(x)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else\r\n                //wth? This should technically be the multiplier.\r\n                //Unfortunately this method wasn't very well thought out :`(.\r\n                //should be: retval = new Symbol(this.multiplier);\r\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\r\n                //this will break a bunch of unit tests so be ready to for the long haul\r\n                retval = this.clone();\r\n\r\n\r\n            return retval;\r\n        },\r\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a].\r\n        toArray: function (v, arr) {\r\n            arr = arr || {\r\n                arr: [],\r\n                add: function (x, idx) {\r\n                    var e = this.arr[idx];\r\n                    this.arr[idx] = e ? _.add(e, x) : x;\r\n                }\r\n            };\r\n            var g = this.group;\r\n\r\n            if(g === S && this.contains(v)) {\r\n                arr.add(new Symbol(this.multiplier), this.power);\r\n            }\r\n            else if(g === CB) {\r\n                var a = this.stripVar(v),\r\n                        x = _.divide(this.clone(), a.clone());\r\n                var p = x.isConstant() ? 0 : x.power;\r\n                arr.add(a, p);\r\n            }\r\n            else if(g === PL && this.value === v) {\r\n                this.each(function (x, p) {\r\n                    arr.add(x.stripVar(v), p);\r\n                });\r\n            }\r\n            else if(g === CP) {\r\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\r\n                //each case is handled above\r\n                this.each(function (x) {\r\n                    x.toArray(v, arr);\r\n                });\r\n            }\r\n            else if(this.contains(v)) {\r\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\r\n            }\r\n            else {\r\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\r\n            }\r\n            //fill the holes\r\n            arr = arr.arr; //keep only the array since we don't need the object anymore\r\n            for(var i = 0; i < arr.length; i++)\r\n                if(!arr[i])\r\n                    arr[i] = new Symbol(0);\r\n            return arr;\r\n        },\r\n        //checks to see if a symbol contans a function\r\n        hasFunc: function (v) {\r\n            var fn_group = this.group === FN || this.group === EX;\r\n            if(fn_group && !v || fn_group && this.contains(v))\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].hasFunc(v))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        sub: function (a, b) {\r\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\r\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\r\n            if(a.group === N || a.group === P)\r\n                err('Cannot substitute a number. Must be a variable');\r\n            var same_pow = false,\r\n                    a_is_unit_multiplier = a.multiplier.equals(1),\r\n                    m = this.multiplier.clone(),\r\n                    retval;\r\n            /*\r\n             * In order to make the substitution the bases have to first match take\r\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n             * In both cases the first condition is that the bases match so we begin there\r\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n             */\r\n            if(this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\r\n                //we cleared the first hurdle but a subsitution may not be possible just yet\r\n                if(a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\r\n                    if(a.isLinear()) {\r\n                        retval = b;\r\n                    }\r\n                    else if(a.power.equals(this.power)) {\r\n                        retval = b;\r\n                        same_pow = true;\r\n                    }\r\n                    if(a.multiplier.equals(this.multiplier))\r\n                        m = new Frac(1);\r\n                }\r\n            }\r\n            //the next thing is to handle CB\r\n            else if(this.group === CB || this.previousGroup === CB) {\r\n                retval = new Symbol(1);\r\n                this.each(function (x) {\r\n                    var subbed = _.parse(x.sub(a, b)); //parse it again for safety\r\n                    retval = _.multiply(retval, subbed);\r\n\r\n                });\r\n            }\r\n            else if(this.isComposite()) {\r\n                var symbol = this.clone();\r\n\r\n                if(a.isComposite() && symbol.isComposite() && symbol.isLinear() && a.isLinear()) {\r\n                    var find = function (stack, needle) {\r\n                        for(var x in stack.symbols) {\r\n                            var sym = stack.symbols[x];\r\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\r\n                            if(sym.isComposite() && find(sym, needle) || sym.equals(needle))\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n                    //go fish\r\n                    for(var x in a.symbols) {\r\n                        if(!find(symbol, a.symbols[x]))\r\n                            return symbol.clone();\r\n                    }\r\n                    retval = _.add(_.subtract(symbol.clone(), a), b);\r\n                }\r\n                else {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, x.sub(a, b));\r\n                    });\r\n                }\r\n            }\r\n            else if(this.group === EX) {\r\n                // the parsed value could be a function so parse and sub\r\n                retval = _.parse(this.value).sub(a, b);\r\n            }\r\n            else if(this.group === FN) {\r\n                var nargs = [];\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    var arg = this.args[i];\r\n                    if(!isSymbol(arg))\r\n                        arg = _.parse(arg);\r\n                    nargs.push(arg.sub(a, b));\r\n                }\r\n                retval = _.symfunction(this.fname, nargs);\r\n            }\r\n            //if we did manage a substitution\r\n            if(retval) {\r\n                if(!same_pow) {\r\n                    //substitute the power\r\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\r\n                    //now raise the symbol to that power\r\n                    retval = _.pow(retval, p);\r\n                }\r\n\r\n                //transfer the multiplier\r\n                retval.multiplier = retval.multiplier.multiply(m);\r\n\r\n                //done\r\n                return retval;\r\n            }\r\n            //if all else fails\r\n            return this.clone();\r\n        },\r\n        isMonomial: function () {\r\n            if(this.group === S)\r\n                return true;\r\n            if(this.group === CB) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].group !== S)\r\n                        return false;\r\n            }\r\n            else\r\n                return false;\r\n            return true;\r\n        },\r\n        isPi: function () {\r\n            return this.group === S && this.value === 'pi';\r\n        },\r\n        sign: function () {\r\n            return this.multiplier.sign();\r\n        },\r\n        isE: function () {\r\n            return this.value === 'e';\r\n        },\r\n        isSQRT: function () {\r\n            return this.fname === SQRT;\r\n        },\r\n        isConstant: function (check_all, check_symbols) {\r\n            if(check_symbols && this.group === CB) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].isConstant(true))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(check_all === 'functions' && this.isComposite()) {\r\n                var isConstant = true;\r\n\r\n                this.each(function (x) {\r\n                    if(!x.isConstant(check_all, check_symbols)) {\r\n                        isConstant = false;\r\n                    }\r\n                }, true);\r\n\r\n                return isConstant;\r\n            }\r\n\r\n            if(check_all === 'all' && (this.isPi() || this.isE())) {\r\n                return true;\r\n            }\r\n\r\n            if(check_all && this.group === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(!this.args[i].isConstant(check_all))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            if(check_all)\r\n                return isNumericSymbol(this);\r\n            return this.value === CONST_HASH;\r\n        },\r\n        //the symbols is imaginary if\r\n        //1. n*i\r\n        //2. a+b*i\r\n        //3. a*i\r\n        isImaginary: function () {\r\n            if(this.imaginary)\r\n                return true;\r\n            else if(this.symbols) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].isImaginary())\r\n                        return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Returns the real part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        realpart: function () {\r\n            if(this.isConstant()) {\r\n                return this.clone();\r\n            }\r\n            else if(this.imaginary)\r\n                return new Symbol(0);\r\n            else if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.realpart());\r\n                });\r\n                return retval;\r\n            }\r\n            else if(this.isImaginary())\r\n                return new Symbol(0);\r\n            return this.clone();\r\n        },\r\n        /*\r\n         * Return imaginary part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        imagpart: function () {\r\n            if(this.group === S && this.isImaginary())\r\n                return new Symbol(this.multiplier);\r\n            if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.imagpart());\r\n                });\r\n                return retval;\r\n            }\r\n            if(this.group === CB)\r\n                return this.stripVar(Settings.IMAGINARY);\r\n            return new Symbol(0);\r\n        },\r\n        isInteger: function () {\r\n            return this.isConstant() && this.multiplier.isInteger();\r\n        },\r\n        isLinear: function (wrt) {\r\n            if(wrt) {\r\n                if(this.isConstant())\r\n                    return true;\r\n                if(this.group === S) {\r\n                    if(this.value === wrt)\r\n                        return this.power.equals(1);\r\n                    else\r\n                        return true;\r\n                }\r\n\r\n                if(this.isComposite() && this.power.equals(1)) {\r\n                    for(var x in this.symbols) {\r\n                        if(!this.symbols[x].isLinear(wrt))\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if(this.group === CB && this.symbols[wrt])\r\n                    return this.symbols[wrt].isLinear(wrt);\r\n                return false;\r\n            }\r\n            else\r\n                return this.power.equals(1);\r\n        },\r\n        /**\r\n         * Checks to see if a symbol has a function by a specified name or within a specified list\r\n         * @param {String|String[]} names\r\n         * @returns {Boolean}\r\n         */\r\n        containsFunction: function (names) {\r\n            if(typeof names === 'string')\r\n                names = [names];\r\n            if(this.group === FN && names.indexOf(this.fname) !== -1)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].containsFunction(names))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        multiplyPower: function (p2) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1))\r\n                return this;\r\n\r\n            var p1 = this.power;\r\n\r\n            if(this.group !== EX && p2.group === N) {\r\n                var p = p2.multiplier;\r\n                if(this.group === N && !p.isInteger()) {\r\n                    this.convert(P);\r\n                }\r\n\r\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\r\n\r\n                if(this.group === P && isInt(this.power)) {\r\n                    //bring it back to an N\r\n                    this.value = Math.pow(this.value, this.power);\r\n                    this.toLinear();\r\n                    this.convert(N);\r\n                }\r\n            }\r\n            else {\r\n                if(this.group !== EX) {\r\n                    p1 = new Symbol(p1);\r\n                    this.convert(EX);\r\n                }\r\n                this.power = _.multiply(p1, p2);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        setPower: function (p, retainSign) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1)) {\r\n                return this;\r\n            }\r\n            if(this.group === EX && !isSymbol(p)) {\r\n                this.group = this.previousGroup;\r\n                delete this.previousGroup;\r\n                if(this.group === N) {\r\n                    this.multiplier = new Frac(this.value);\r\n                    this.value = CONST_HASH;\r\n                }\r\n                else\r\n                    this.power = p;\r\n            }\r\n            else {\r\n                var isSymbolic = false;\r\n                if(isSymbol(p)) {\r\n                    if(p.group === N) {\r\n                        //p should be the multiplier instead\r\n                        p = p.multiplier;\r\n\r\n                    }\r\n                    else {\r\n                        isSymbolic = true;\r\n                    }\r\n                }\r\n                var group = isSymbolic ? EX : P;\r\n                this.power = p;\r\n                if(this.group === N && group)\r\n                    this.convert(group, retainSign);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks to see if symbol is located in the denominator\r\n         * @returns {boolean}\r\n         */\r\n        isInverse: function () {\r\n            if(this.group === EX)\r\n                return (this.power.multiplier.lessThan(0));\r\n            return this.power < 0;\r\n        },\r\n        /**\r\n         * Make a duplicate of a symbol by copying a predefined list of items.\r\n         * The name 'copy' would probably be a more appropriate name.\r\n         * to a new symbol\r\n         * @param {Symbol} c\r\n         * @returns {Symbol}\r\n         */\r\n        clone: function (c) {\r\n            var clone = c || new Symbol(0),\r\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\r\n                    properties = [\r\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\r\n                    l = properties.length, i;\r\n            if(this.symbols) {\r\n                clone.symbols = {};\r\n                for(var x in this.symbols) {\r\n                    clone.symbols[x] = this.symbols[x].clone();\r\n                }\r\n            }\r\n\r\n            for(i = 0; i < l; i++) {\r\n                if(this[properties[i]] !== undefined) {\r\n                    clone[properties[i]] = this[properties[i]];\r\n                }\r\n            }\r\n\r\n            clone.power = this.power.clone();\r\n            clone.multiplier = this.multiplier.clone();\r\n            //add back the flag to track if this symbol is a conversion symbol\r\n            if(this.isConversion)\r\n                clone.isConversion = this.isConversion;\r\n\r\n            if(this.isUnit)\r\n                clone.isUnit = this.isUnit;\r\n\r\n            return clone;\r\n        },\r\n        /**\r\n         * Converts a symbol multiplier to one.\r\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\r\n         * @returns {Symbol}\r\n         */\r\n        toUnitMultiplier: function (keepSign) {\r\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\r\n            this.multiplier.den = new bigInt(1);\r\n            return this;\r\n        },\r\n        /**\r\n         * Converts a Symbol's power to one.\r\n         * @returns {Symbol}\r\n         */\r\n        toLinear: function () {\r\n            // Do nothing if it's already linear\r\n            if(this.power.equals(1)) {\r\n                return this;\r\n            }\r\n            this.setPower(new Frac(1));\r\n            return this;\r\n        },\r\n        /**\r\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\r\n         * @param {Function} fn\r\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well\r\n         */\r\n        each: function (fn, deep) {\r\n            if(!this.symbols) {\r\n                fn.call(this, this, this.value);\r\n            }\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    if(sym.group === PL && deep) {\r\n                        for(var y in sym.symbols) {\r\n                            fn.call(x, sym.symbols[y], y);\r\n                        }\r\n                    }\r\n                    else\r\n                        fn.call(this, sym, x);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A numeric value to be returned for Javascript. It will try to\r\n         * return a number as far a possible but in case of a pure symbolic\r\n         * symbol it will just return its text representation\r\n         * @returns {String|Number}\r\n         */\r\n        valueOf: function () {\r\n            if(this.group === N)\r\n                return this.multiplier.valueOf();\r\n            else if(this.power === 0) {\r\n                return 1;\r\n            }\r\n            else if(this.multiplier === 0) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return text(this, 'decimals');\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a symbols has a particular variable within it.\r\n         * Pass in true as second argument to include the power of exponentials\r\n         * which aren't check by default.\r\n         * @example var s = _.parse('x+y+z'); s.contains('y');\r\n         * //returns true\r\n         * @param {any} variable\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        contains: function (variable, all) {\r\n            //contains expects a string\r\n            variable = String(variable);\r\n            var g = this.group;\r\n            if(this.value === variable)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n            if(g === FN || this.previousGroup === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(this.args[i].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(g === EX) {\r\n                //exit only if it does\r\n                if(all && this.power.contains(variable, all)) {\r\n                    return true;\r\n                }\r\n                if(this.value === variable)\r\n                    return true;\r\n\r\n            }\r\n\r\n            return this.value === variable;\r\n        },\r\n        /**\r\n         * Negates a symbols\r\n         * @returns {boolean}\r\n         */\r\n        negate: function () {\r\n            this.multiplier.negate();\r\n            if(this.group === CP || this.group === PL)\r\n                this.distributeMultiplier();\r\n            return this;\r\n        },\r\n        /**\r\n         * Inverts a symbol\r\n         * @param {boolean} power_only\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        invert: function (power_only, all) {\r\n            //invert the multiplier\r\n            if(!power_only)\r\n                this.multiplier = this.multiplier.invert();\r\n            //invert the rest\r\n            if(isSymbol(this.power)) {\r\n                this.power.negate();\r\n            }\r\n            else if(this.group === CB && all) {\r\n                this.each(function (x) {\r\n                    return x.invert();\r\n                });\r\n            }\r\n            else {\r\n                if(this.power && this.group !== N)\r\n                    this.power.negate();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Symbols of group CP or PL may have the multiplier being carried by\r\n         * the top level symbol at any given time e.g. 2*(x+y+z). This is\r\n         * convenient in many cases, however in some cases the multiplier needs\r\n         * to be carried individually e.g. 2*x+2*y+2*z.\r\n         * This method distributes the multiplier over the entire symbol\r\n         * @param {boolean} all\r\n         * @returns {Symbol}\r\n         */\r\n        distributeMultiplier: function (all) {\r\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\r\n            if(this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\r\n                    s.distributeMultiplier();\r\n                }\r\n                this.toUnitMultiplier();\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * This method expands the exponent over the entire symbol just like\r\n         * distributeMultiplier\r\n         * @returns {Symbol}\r\n         */\r\n        distributeExponent: function () {\r\n            if(!this.power.equals(1)) {\r\n                var p = this.power;\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    if(s.group === EX) {\r\n                        s.power = _.multiply(s.power, new Symbol(p));\r\n                    }\r\n                    else {\r\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\r\n                    }\r\n                }\r\n                this.toLinear();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method will attempt to up-convert or down-convert one symbol\r\n         * from one group to another. Not all symbols are convertible from one\r\n         * group to another however. In that case the symbol will remain\r\n         * unchanged.\r\n         * @param {int} group\r\n         * @param {string} imaginary\r\n         */\r\n        convert: function (group, imaginary) {\r\n            if(group > FN) {\r\n                //make a clone of this symbol;\r\n                var cp = this.clone();\r\n\r\n                //attach a symbols object and upgrade the group\r\n                this.symbols = {};\r\n\r\n                if(group === CB) {\r\n                    //symbol of group CB hold symbols bound together through multiplication\r\n                    //because of commutativity this multiplier can technically be anywhere within the group\r\n                    //to keep track of it however it's easier to always have the top level carry it\r\n                    cp.toUnitMultiplier();\r\n                }\r\n                else {\r\n                    //reset the symbol\r\n                    this.toUnitMultiplier();\r\n                }\r\n\r\n                if(this.group === FN) {\r\n                    cp.args = this.args;\r\n                    delete this.args;\r\n                    delete this.fname;\r\n                }\r\n\r\n                //the symbol may originate from the symbol i but this property no longer holds true\r\n                //after copying\r\n                if(this.isImgSymbol)\r\n                    delete this.isImgSymbol;\r\n\r\n                this.toLinear();\r\n                //attach a clone of this symbol to the symbols object using its proper key\r\n                this.symbols[cp.keyForGroup(group)] = cp;\r\n                this.group = group;\r\n                //objects by default don't have a length property. However, in order to keep track of the number\r\n                //of sub-symbols we have to impliment our own.\r\n                this.length = 1;\r\n            }\r\n            else if(group === EX) {\r\n                //1^x is just one so check and make sure\r\n                if(!(this.group === N && this.multiplier.equals(1))) {\r\n                    if(this.group !== EX)\r\n                        this.previousGroup = this.group;\r\n                    if(this.group === N) {\r\n                        this.value = this.multiplier.num.toString();\r\n                        this.toUnitMultiplier();\r\n                    }\r\n                    //update the hash to reflect the accurate hash\r\n                    else\r\n                        this.value = text(this, 'hash');\r\n\r\n                    this.group = EX;\r\n                }\r\n            }\r\n            else if(group === N) {\r\n                var m = this.multiplier.toDecimal();\r\n                if(this.symbols)\r\n                    this.symbols = undefined;\r\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\r\n            }\r\n            else if(group === P && this.group === N) {\r\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\r\n                this.toUnitMultiplier(!imaginary);\r\n                this.group = P;\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method is one of the principal methods to make it all possible.\r\n         * It performs cleanup and prep operations whenever a symbols is\r\n         * inserted. If the symbols results in a 1 in a CB (multiplication)\r\n         * group for instance it will remove the redundant symbol. Similarly\r\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n         * will remove any dangling zeroes from the symbol. It will also\r\n         * up-convert or down-convert a symbol if it detects that it's\r\n         * incorrectly grouped. It should be noted that this method is not\r\n         * called directly but rather by the 'attach' method for addition groups\r\n         * and the 'combine' method for multiplication groups.\r\n         * @param {Symbol} symbol\r\n         * @param {String} action\r\n         */\r\n        insert: function (symbol, action) {\r\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\r\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\r\n            if(!isSymbol(symbol))\r\n                err('Object ' + symbol + ' is not of type Symbol!');\r\n            if(this.symbols) {\r\n                var group = this.group;\r\n                if(group > FN) {\r\n                    var key = symbol.keyForGroup(group);\r\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\r\n                    if(action === 'add') {\r\n                        var hash = key;\r\n                        if(existing) {\r\n                            //add them together using the parser\r\n                            this.symbols[hash] = _.add(existing, symbol);\r\n                            //if the addition resulted in a zero multiplier remove it\r\n                            if(this.symbols[hash].multiplier.equals(0)) {\r\n                                delete this.symbols[hash];\r\n                                this.length--;\r\n\r\n                                if(this.length === 0) {\r\n                                    this.convert(N);\r\n                                    this.multiplier = new Frac(0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //check if this is of group P and unwrap before inserting\r\n                        if(symbol.group === P && isInt(symbol.power)) {\r\n                            symbol.convert(N);\r\n                        }\r\n\r\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\r\n                        if(symbol.group !== EX) {\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                            symbol.toUnitMultiplier();\r\n                        }\r\n                        else {\r\n                            symbol.parens = symbol.multiplier.lessThan(0);\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\r\n                            symbol.toUnitMultiplier(true);\r\n                        }\r\n\r\n                        if(existing) {\r\n                            //remove because the symbol may have changed\r\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\r\n                            if(symbol.isConstant()) {\r\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\r\n                            }\r\n\r\n                            this.length--;\r\n                            //clean up\r\n                        }\r\n\r\n                        //don't insert the symbol if it's 1\r\n                        if(!symbol.isOne(true)) {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                        else if(symbol.multiplier.lessThan(0)) {\r\n                            this.negate(); //put back the sign\r\n                        }\r\n                    }\r\n\r\n                    //clean up\r\n                    if(this.length === 0)\r\n                        this.convert(N);\r\n                    //update the hash\r\n                    if(this.group === CP || this.group === CB) {\r\n                        this.updateHash();\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        //the insert method for addition\r\n        attach: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'add');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'add');\r\n        },\r\n        //the insert method for multiplication\r\n        combine: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'multiply');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'multiply');\r\n        },\r\n        /**\r\n         * This method should be called after any major \"surgery\" on a symbol.\r\n         * It updates the hash of the symbol for example if the fname of a\r\n         * function has changed it will update the hash of the symbol.\r\n         */\r\n        updateHash: function () {\r\n            if(this.group === N)\r\n                return;\r\n\r\n            if(this.group === FN) {\r\n                var contents = '',\r\n                        args = this.args,\r\n                        is_parens = this.fname === PARENTHESIS;\r\n                for(var i = 0; i < args.length; i++)\r\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\r\n                var fn_name = is_parens ? '' : this.fname;\r\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\r\n            }\r\n            else if(!(this.group === S || this.group === PL)) {\r\n                this.value = text(this, 'hash');\r\n            }\r\n        },\r\n        /**\r\n         * this function defines how every group in stored within a group of\r\n         * higher order think of it as the switchboard for the library. It\r\n         * defines the hashes for symbols.\r\n         * @param {int} group\r\n         */\r\n        keyForGroup: function (group) {\r\n            var g = this.group;\r\n            var key;\r\n\r\n            if(g === N) {\r\n                key = this.value;\r\n            }\r\n            else if(g === S || g === P) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === FN) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === PL) {\r\n                //if the order is reversed then we'll assume multiplication\r\n                //TODO: possible future dilemma\r\n                if(group === CB)\r\n                    key = text(this, 'hash');\r\n                else if(group === CP) {\r\n                    if(this.power.equals(1))\r\n                        key = this.value;\r\n                    else\r\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\r\n                }\r\n                else if(group === PL)\r\n                    key = this.power.toString();\r\n                else\r\n                    key = this.value;\r\n                return key;\r\n            }\r\n            else if(g === CP) {\r\n                if(group === CP) {\r\n                    key = text(this, 'hash');\r\n                }\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === CB) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === EX) {\r\n                if(group === PL)\r\n                    key = text(this.power);\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n\r\n            return key;\r\n        },\r\n        /**\r\n         * Symbols are typically stored in an object which works fine for most\r\n         * cases but presents a problem when the order of the symbols makes\r\n         * a difference. This function simply collects all the symbols and\r\n         * returns them as an array. If a function is supplied then that\r\n         * function is called on every symbol contained within the object.\r\n         * @param {Function} fn\r\n         * @param {Object} opt\r\n         * @param {Function} sort_fn\r\n         * @@param {Boolean} expand_symbol\r\n         * @returns {Array}\r\n         */\r\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\r\n            var collected = [];\r\n            if(!this.symbols)\r\n                collected.push(this);\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var symbol = this.symbols[x];\r\n                    if(expand_symbol && (symbol.group === PL || symbol.group === CP)) {\r\n                        collected = collected.concat(symbol.collectSymbols());\r\n                    }\r\n                    else\r\n                        collected.push(fn ? fn(symbol, opt) : symbol);\r\n                }\r\n            }\r\n            if(sort_fn === null)\r\n                sort_fn = undefined; //WTF Firefox? Seriously?\r\n\r\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\r\n        },\r\n        /**\r\n         * Returns the latex representation of the symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            return LaTeX.latex(this, option);\r\n        },\r\n        /**\r\n         * Returns the text representation of a symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        text: function (option) {\r\n            return text(this, option);\r\n        },\r\n        /**\r\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n         * @@param {bool} abs Compares the absolute value\r\n         */\r\n        isOne: function (abs) {\r\n            var f = abs ? 'absEquals' : 'equals';\r\n            if(this.group === N)\r\n                return this.multiplier[f](1);\r\n            else\r\n                return this.power.equals(0);\r\n        },\r\n        isComposite: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CP || g === PL || pg === PL || pg === CP;\r\n        },\r\n        isCombination: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CB || pg === CB;\r\n        },\r\n        lessThan: function (n) {\r\n            return this.multiplier.lessThan(n);\r\n        },\r\n        greaterThan: function (n) {\r\n            if(!isSymbol(n)) {\r\n                n = new Symbol(n);\r\n            }\r\n\r\n            // We can't tell for sure if a is greater than be if they're not both numbers\r\n            if(!this.isConstant(true) || !n.isConstant(true)) {\r\n                return false;\r\n            }\r\n\r\n            return this.multiplier.greaterThan(n.multiplier);\r\n        },\r\n        /**\r\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n         * with other classes the symbol is either the denominator or not.\r\n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n         * denominator and has to be found by looking at the actual symbols themselves.\r\n         */\r\n        getDenom: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(this.group === CB && this.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.lessThan(0) || symbol.group === EX && symbol.power.multiplier.lessThan(0)) {\r\n                var d = _.parse(symbol.multiplier.den);\r\n                retval = symbol.toUnitMultiplier();\r\n                retval.power.negate();\r\n                retval = _.multiply(d, retval); //put back the coeff\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.den);\r\n                for(var x in symbol.symbols) {\r\n                    var s = symbol.symbols[x];\r\n                    if(s.power < 0 || s.group === EX && s.power.multiplier.lessThan(0))\r\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\r\n                }\r\n            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.den);\r\n            }\r\n            return retval;\r\n        },\r\n        getNum: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(symbol.group === CB && symbol.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.greaterThan(0) && symbol.group !== CB || symbol.group === EX && symbol.power.multiplier.greaterThan(0)) {\r\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.num);\r\n                symbol.each(function (x) {\r\n                    if(x.power > 0 || x.group === EX && x.power.multiplier > 0) {\r\n                        retval = _.multiply(retval, x.clone());\r\n                    }\r\n                });\r\n            }\r\n//            else if(symbol.group === EX && this.previousGroup === S) {\r\n//                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n//            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.num);\r\n            }\r\n            return retval;\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        }\r\n    };\r\n\r\n//Parser =======================================================================\r\n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\r\n    function Parser() {\r\n        //Point to the local parser instead of the global one\r\n        var _ = this;\r\n        var bin = {};\r\n        var preprocessors = {names: [], actions: []};\r\n\r\n//Parser.classes ===============================================================\r\n        function Slice(upper, lower) {\r\n            this.start = upper;\r\n            this.end = lower;\r\n        }\r\n        ;\r\n        Slice.prototype.isConstant = function () {\r\n            return this.start.isConstant() && this.end.isConstant();\r\n        };\r\n        Slice.prototype.text = function () {\r\n            return text(this.start) + ':' + text(this.end);\r\n        };\r\n\r\n        /**\r\n         * Class used to collect arguments for functions\r\n         * @returns {Parser.Collection}\r\n         */\r\n        function Collection() {\r\n            this.elements = [];\r\n        }\r\n        Collection.prototype.append = function (e) {\r\n            this.elements.push(e);\r\n        };\r\n        Collection.prototype.getItems = function () {\r\n            return this.elements;\r\n        };\r\n        Collection.prototype.toString = function () {\r\n            return _.pretty_print(this.elements);\r\n        };\r\n        Collection.create = function (e) {\r\n            var collection = new Collection();\r\n            if(e)\r\n                collection.append(e);\r\n            return collection;\r\n        };\r\n\r\n        function Token(node, node_type, column) {\r\n            this.type = node_type;\r\n            this.value = node;\r\n            if(column !== undefined)\r\n                this.column = column + 1;\r\n            if(node_type === Token.OPERATOR) {\r\n                //copy everything over from the operator\r\n                var operator = operators[node];\r\n                for(var x in operator)\r\n                    this[x] = operator[x];\r\n\r\n            }\r\n            else if(node_type === Token.FUNCTION) {\r\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\r\n                this.leftAssoc = false;\r\n            }\r\n        }\r\n        Token.prototype.toString = function () {\r\n            return this.value;\r\n        };\r\n        Token.prototype.toString = function () {\r\n            if(this.is_prefix)\r\n                return '`' + this.value;\r\n            return this.value;\r\n        };\r\n        //some constants\r\n        Token.OPERATOR = 'OPERATOR';\r\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\r\n        Token.FUNCTION = 'FUNCTION';\r\n        Token.UNIT = 'UNIT';\r\n        Token.KEYWORD = 'KEYWORD';\r\n        Token.MAX_PRECEDENCE = 999;\r\n        //create link to classes\r\n        this.classes = {\r\n            Collection: Collection,\r\n            Slice: Slice,\r\n            Token: Token\r\n        };\r\n//Parser.modules ===============================================================\r\n        //object for functions which handle complex number\r\n        var complex = {\r\n            prec: undefined,\r\n            cos: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cos(r) * Math.cosh(i));\r\n                im = _.parse(Math.sin(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sin: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(r) * Math.cosh(i));\r\n                im = _.parse(Math.cos(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tan: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sec: function (r, i) {\r\n                var t = this.removeDen(this.cos(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csc: function (r, i) {\r\n                var t = this.removeDen(this.sin(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            cot: function (r, i) {\r\n                var t = this.removeDen(this.tan(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acos: function (r, i) {\r\n                var symbol, sq, a, b, c, squared;\r\n                symbol = this.fromArray([r, i]);\r\n                squared = _.pow(symbol.clone(), new Symbol(2));\r\n                sq = _.expand(squared); //z*z\r\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\r\n                b = _.expand(_.add(symbol.clone(), a));\r\n                c = log(b);\r\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\r\n            },\r\n            asin: function (r, i) {\r\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\r\n            },\r\n            atan: function (r, i) {\r\n                // Handle i and -i\r\n                if(r.equals(0) && (i.equals(1) || i.equals(-1))) {\r\n                    // Just copy Wolfram Alpha for now. The parenthesis \r\n                    return _.parse(`${Symbol.infinity()}*${Settings.IMAGINARY}*${i}`);\r\n                }\r\n                var a, b, c, symbol;\r\n                symbol = complex.fromArray([r, i]);\r\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\r\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\r\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\r\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\r\n            },\r\n            asec: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.acos.apply(this, d);\r\n            },\r\n            acsc: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.asin.apply(this, d);\r\n            },\r\n            acot: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.atan.apply(this, d);\r\n            },\r\n            //Hyperbolic trig\r\n            cosh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cosh(r) * Math.cos(i));\r\n                im = _.parse(Math.sinh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sinh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(r) * Math.cos(i));\r\n                im = _.parse(Math.cosh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tanh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sech: function (r, i) {\r\n                var t = this.removeDen(this.cosh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csch: function (r, i) {\r\n                var t = this.removeDen(this.sinh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            coth: function (r, i) {\r\n                var t = this.removeDen(this.tanh(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acosh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\r\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\r\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\r\n            },\r\n            asinh: function (r, i) {\r\n                var a, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\r\n                return _.expand(log(_.add(z, a)));\r\n            },\r\n            atanh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = log(_.add(z.clone(), new Symbol(1)));\r\n                b = log(_.subtract(new Symbol(1), z));\r\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\r\n            },\r\n            asech: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.acosh.apply(this, t);\r\n            },\r\n            acsch: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.asinh.apply(this, t);\r\n            },\r\n            acoth: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.atanh.apply(this, t);\r\n            },\r\n            sqrt: function (symbol) {\r\n                var re, im, h, a, d;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n                h = Symbol.hyp(re, im);\r\n                a = _.add(re.clone(), h);\r\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\r\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\r\n            },\r\n            log: function (r, i) {\r\n                var re, im, phi;\r\n                re = log(Symbol.hyp(r, i));\r\n                phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal())) : Math.atan2(i, r);\r\n                im = _.parse(phi);\r\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\r\n            },\r\n            erf(symbol, n) {\r\n                //Do nothing for now. Revisit this in the future.\r\n                return _.symfunction('erf', [symbol]);\r\n\r\n                n = n || 30;\r\n\r\n                var f = function (R, I) {\r\n                    return block('PARSE2NUMBER', function () {\r\n                        var retval = new Symbol(0);\r\n                        for(var i = 0; i < n; i++) {\r\n                            var a, b;\r\n                            a = _.parse(bigDec.exp(bigDec(i).toPower(2).neg().dividedBy(bigDec(n).pow(2).plus(bigDec(R).toPower(2).times(4)))));\r\n                            b = _.parse(format('2*({1})-e^(-(2*{0}*{1}*{2}))*(2*{1}*cosh({2}*{3})-{0}*{3}*sinh({3}*{2}))', Settings.IMAGINARY, R, I, i));\r\n                            retval = _.add(retval, _.multiply(a, b));\r\n                        }\r\n                        return _.multiply(retval, new Symbol(2));\r\n                    }, true);\r\n                };\r\n                var re, im, a, b, c, k;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n\r\n                k = _.parse(format('(e^(-{0}^2))/pi', re));\r\n                a = _.parse(format('(1-e^(-(2*{0}*{1}*{2})))/(2*{1})', Settings.IMAGINARY, re, im));\r\n                b = f(re.toString(), im.toString());\r\n\r\n                return _.add(_.parse(Math2.erf(re.toString())), _.multiply(k, _.add(a, b)));\r\n            },\r\n            removeDen: function (symbol) {\r\n                var den, r, i, re, im;\r\n                if(isArray(symbol)) {\r\n                    r = symbol[0];\r\n                    i = symbol[1];\r\n                }\r\n                else {\r\n                    r = symbol.realpart();\r\n                    i = symbol.imagpart();\r\n                }\r\n\r\n                den = Math.pow(r, 2) + Math.pow(i, 2);\r\n                re = _.parse(r / den);\r\n                im = _.parse(i / den);\r\n                return [re, im];\r\n            },\r\n            fromArray: function (arr) {\r\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\r\n            },\r\n            evaluate: function (symbol, f) {\r\n                var re, im, sign;\r\n\r\n                sign = symbol.power.sign();\r\n                //remove it from under the denominator\r\n                symbol.power = symbol.power.abs();\r\n                //expand\r\n                if(symbol.power.greaterThan(1))\r\n                    symbol = _.expand(symbol);\r\n                //remove the denominator\r\n                if(sign < 0) {\r\n                    var d = this.removeDen(symbol);\r\n                    re = d[0];\r\n                    im = d[1];\r\n                }\r\n                else {\r\n                    re = symbol.realpart();\r\n                    im = symbol.imagpart();\r\n                }\r\n\r\n                if(re.isConstant('all') && im.isConstant('all'))\r\n                    return this[f].call(this, re, im);\r\n\r\n                return _.symfunction(f, [symbol]);\r\n            }\r\n        };\r\n        //object for functions which handle trig\r\n        var trig = this.trig = {\r\n            //container for trigonometric function\r\n            cos: function (symbol) {\r\n                if(symbol.equals('pi') && symbol.multiplier.den.equals(2))\r\n                    return new Symbol(0);\r\n\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(new Symbol(Settings.PI / 2)))\r\n                        return new Symbol(0);\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.cos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.cos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cos');\r\n                    }\r\n                }\r\n                if(symbol.equals(0))\r\n                    return new Symbol(1);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = Number(m.num), d = Number(m.den);\r\n                        if(d === 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d === 3) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 6) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cos', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cos', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            sin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol % Math.PI === 0) {\r\n                            return new Symbol(0);\r\n                        }\r\n\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.sin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.sin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sin');\r\n                }\r\n\r\n                if(symbol.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n                if(symbol.equals('pi'))\r\n                    retval = new Symbol(0);\r\n                else if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            tan: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % Math.PI === 0 && symbol.isLinear()) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.tan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.tan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'tan');\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('tan', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('tan', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            sec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.cos(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.sec(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sec');\r\n                    return _.parse(format('1/cos({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('sec', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('sec', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            csc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.sin(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.csc(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'csc');\r\n                    return _.parse(format('1/sin({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('csc is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            cot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % (Math.PI/2) === 0) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.tan(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.cot(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'cot');\r\n                    return _.parse(format('1/tan({0})', symbol));\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d == 3) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cot', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cot', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            acos: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var x = symbol.toString();\r\n                            return expand(evaluate(`pi/2-asin(${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.acos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.acos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acos');\r\n                }\r\n                return _.symfunction('acos', arguments);\r\n            },\r\n            asin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var i = Settings.IMAGINARY;\r\n                            var x = symbol.multiplier.toDecimal();\r\n                            return expand(evaluate(`${i}*log(sqrt(1-${x}^2)-${i}*${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.asin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.asin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'asin');\r\n                }\r\n                return _.symfunction('asin', arguments);\r\n            },\r\n            atan: function (symbol) {\r\n                var retval;\r\n                if(symbol.equals(0))\r\n                    retval = new Symbol(0);\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.atan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.atan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'atan');\r\n                    return _.symfunction('atan', arguments);\r\n                }\r\n                else if(symbol.equals(-1))\r\n                    retval = _.parse('-pi/4');\r\n                else\r\n                    retval = _.symfunction('atan', arguments);\r\n                return retval;\r\n            },\r\n            asec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(0)) {\r\n                        throw new OutOfFunctionDomainError('Input is out of the domain of sec!');\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        return trig.acos(symbol.invert());\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'asec');\r\n                    }\r\n                }\r\n                return _.symfunction('asec', arguments);\r\n            },\r\n            acsc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return trig.asin(symbol.invert());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acsc');\r\n                }\r\n                return _.symfunction('acsc', arguments);\r\n            },\r\n            acot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acot');\r\n                }\r\n                return _.symfunction('acot', arguments);\r\n            },\r\n            atan2: function (a, b) {\r\n                if(a.equals(0) && b.equals(0))\r\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\r\n\r\n                if(Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\r\n                    return new Symbol(Math.atan2(a, b));\r\n                }\r\n                return _.symfunction('atan2', arguments);\r\n            }\r\n        };\r\n        //object for functions which handle hyperbolic trig\r\n        var trigh = this.trigh = {\r\n            //container for hyperbolic trig function\r\n            cosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.cosh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cosh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('cosh', arguments);\r\n            },\r\n            sinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.sinh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sinh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('sinh', arguments);\r\n            },\r\n            tanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.tanh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'tanh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('tanh', arguments);\r\n            },\r\n            sech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new Symbol(Math.sech(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sech');\r\n                    }\r\n                    return _.parse(format('1/cosh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('sech', arguments);\r\n            },\r\n            csch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.csch(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'csch');\r\n                    }\r\n                    return _.parse(format('1/sinh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('csch', arguments);\r\n            },\r\n            coth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.coth(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'coth');\r\n                    }\r\n                    return _.parse(format('1/tanh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('coth', arguments);\r\n            },\r\n            acosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acosh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acosh', arguments);\r\n                return retval;\r\n            },\r\n            asinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asinh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('asinh', arguments);\r\n                return retval;\r\n            },\r\n            atanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'atanh');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    retval = evaluate(_.parse(format('(1/2)*' + Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\r\n                }\r\n                else\r\n                    retval = _.symfunction('atanh', arguments);\r\n                return retval;\r\n            },\r\n            asech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asech');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\r\n                else\r\n                    retval = _.symfunction('asech', arguments);\r\n                return retval;\r\n            },\r\n            acsch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acsch');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acsch', arguments);\r\n                return retval;\r\n            },\r\n            acoth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acoth');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(1))\r\n                        retval = Symbol.infinity();\r\n                    else\r\n                        retval = evaluate(\r\n                                _.divide(\r\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\r\n                                        new Symbol(2)));\r\n                }\r\n                else\r\n                    retval = _.symfunction('acoth', arguments);\r\n                return retval;\r\n            }\r\n        };\r\n        //list of supported units\r\n        this.units = {};\r\n        //list all the supported operators\r\n        var operators = {\r\n            '\\\\': {\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; //bypass the slash\r\n                }\r\n            },\r\n            '!!': {\r\n                precedence: 7,\r\n                operator: '!!',\r\n                action: 'dfactorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '!': {\r\n                precedence: 7,\r\n                operator: '!',\r\n                action: 'factorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return factorial(e); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '^': {\r\n                precedence: 6,\r\n                operator: '^',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '**': {\r\n                precedence: 6,\r\n                operator: '**',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '%': {\r\n                precedence: 4,\r\n                operator: '%',\r\n                action: 'percent',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                overloaded: true,\r\n                overloadAction: 'mod',\r\n                overloadLeftAssoc: false,\r\n                operation: function (x) {\r\n                    return _.divide(x, new Symbol(100));\r\n                }\r\n            },\r\n            '*': {\r\n                precedence: 4,\r\n                operator: '*',\r\n                action: 'multiply',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '/': {\r\n                precedence: 4,\r\n                operator: '/',\r\n                action: 'divide',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '+': {\r\n                precedence: 3,\r\n                operator: '+',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            'plus': {\r\n                precedence: 3,\r\n                operator: 'plus',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            '-': {\r\n                precedence: 3,\r\n                operator: '-',\r\n                action: 'subtract',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x.negate();\r\n                }\r\n            },\r\n            '=': {\r\n                precedence: 2,\r\n                operator: '=',\r\n                action: 'equals',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '==': {\r\n                precedence: 1,\r\n                operator: '==',\r\n                action: 'eq',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<': {\r\n                precedence: 1,\r\n                operator: '<',\r\n                action: 'lt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<=': {\r\n                precedence: 1,\r\n                operator: '<=',\r\n                action: 'lte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '>': {\r\n                precedence: 1,\r\n                operator: '>',\r\n                action: 'gt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '=>': {\r\n                precedence: 1,\r\n                operator: '=>',\r\n                action: 'gte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ',': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'comma',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ':': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                vectorFn: 'slice'\r\n            },\r\n            ':=': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'function_assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            }\r\n        };\r\n        //brackets\r\n        var brackets = {\r\n            '(': {\r\n                type: 'round',\r\n                id: 1,\r\n                is_open: true,\r\n                is_close: false\r\n            },\r\n            ')': {\r\n                type: 'round',\r\n                id: 2,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '[': {\r\n                type: 'square',\r\n                id: 3,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'vector'\r\n            },\r\n            ']': {\r\n                type: 'square',\r\n                id: 4,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '{': {\r\n                type: 'curly',\r\n                id: 5,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'Set'\r\n            },\r\n            '}': {\r\n                type: 'curly',\r\n                id: 6,\r\n                is_open: false,\r\n                is_close: true\r\n            }\r\n        };\r\n        // Supported functions.\r\n        // Format: function_name: [mapped_function, number_of_parameters]\r\n        var functions = this.functions = {\r\n            'cos': [trig.cos, 1],\r\n            'sin': [trig.sin, 1],\r\n            'tan': [trig.tan, 1],\r\n            'sec': [trig.sec, 1],\r\n            'csc': [trig.csc, 1],\r\n            'cot': [trig.cot, 1],\r\n            'acos': [trig.acos, 1],\r\n            'asin': [trig.asin, 1],\r\n            'atan': [trig.atan, 1],\r\n            'arccos': [trig.acos, 1],\r\n            'arcsin': [trig.asin, 1],\r\n            'arctan': [trig.atan, 1],\r\n            'asec': [trig.asec, 1],\r\n            'acsc': [trig.acsc, 1],\r\n            'acot': [trig.acot, 1],\r\n            'atan2': [trig.atan2, 2],\r\n            'acoth': [trigh.acoth, 1],\r\n            'asech': [trigh.asech, 1],\r\n            'acsch': [trigh.acsch, 1],\r\n            'sinh': [trigh.sinh, 1],\r\n            'cosh': [trigh.cosh, 1],\r\n            'tanh': [trigh.tanh, 1],\r\n            'asinh': [trigh.asinh, 1],\r\n            'sech': [trigh.sech, 1],\r\n            'csch': [trigh.csch, 1],\r\n            'coth': [trigh.coth, 1],\r\n            'acosh': [trigh.acosh, 1],\r\n            'atanh': [trigh.atanh, 1],\r\n            'log10': [, 1],\r\n            'exp': [exp, 1],\r\n            'radians': [radians, 1],\r\n            'degrees': [degrees, 1],\r\n            'min': [min, -1],\r\n            'max': [max, -1],\r\n            'erf': [, 1],\r\n            'floor': [, 1],\r\n            'ceil': [, 1],\r\n            'trunc': [, 1],\r\n            'Si': [, 1],\r\n            'step': [, 1],\r\n            'rect': [, 1],\r\n            'sinc': [sinc, 1],\r\n            'tri': [, 1],\r\n            'sign': [sign, 1],\r\n            'Ci': [, 1],\r\n            'Ei': [, 1],\r\n            'Shi': [, 1],\r\n            'Chi': [, 1],\r\n            'Li': [, 1],\r\n            'fib': [, 1],\r\n            'fact': [factorial, 1],\r\n            'factorial': [factorial, 1],\r\n            'continued_fraction': [continued_fraction, [1, 2]],\r\n            'dfactorial': [, 1],\r\n            'gamma_incomplete': [, [1, 2]],\r\n            'round': [round, [1, 2]],\r\n            'scientific': [scientific, [1, 2]],\r\n            'mod': [mod, 2],\r\n            'pfactor': [pfactor, 1],\r\n            'vector': [vector, -1],\r\n            'matrix': [matrix, -1],\r\n            'Set': [set, -1],\r\n            'imatrix': [imatrix, -1],\r\n            'parens': [parens, -1],\r\n            'sqrt': [sqrt, 1],\r\n            'cbrt': [cbrt, 1],\r\n            'nthroot': [nthroot, 2],\r\n            'log': [log, [1, 2]],\r\n            'expand': [expandall, 1],\r\n            'abs': [abs, 1],\r\n            'invert': [invert, 1],\r\n            'determinant': [determinant, 1],\r\n            'size': [size, 1],\r\n            'transpose': [transpose, 1],\r\n            'dot': [dot, 2],\r\n            'cross': [cross, 2],\r\n            'vecget': [vecget, 2],\r\n            'vecset': [vecset, 3],\r\n            'vectrim': [vectrim, [1, 2]],\r\n            'matget': [matget, 3],\r\n            'matset': [matset, 4],\r\n            'matgetrow': [matgetrow, 2],\r\n            'matsetrow': [matsetrow, 3],\r\n            'matgetcol': [matgetcol, 2],\r\n            'matsetcol': [matsetcol, 3],\r\n            'rationalize': [rationalize, 1],\r\n            'IF': [IF, 3],\r\n            'is_in': [is_in, 2],\r\n            //imaginary support\r\n            'realpart': [realpart, 1],\r\n            'imagpart': [imagpart, 1],\r\n            'conjugate': [conjugate, 1],\r\n            'arg': [arg, 1],\r\n            'polarform': [polarform, 1],\r\n            'rectform': [rectform, 1],\r\n            'sort': [sort, [1, 2]],\r\n            'integer_part': [, 1],\r\n            'union': [union, 2],\r\n            'contains': [contains, 2],\r\n            'intersection': [intersection, 2],\r\n            'difference': [difference, 2],\r\n            'intersects': [intersects, 2],\r\n            'is_subset': [is_subset, 2],\r\n            //system support\r\n            'print': [print, -1]\r\n        };\r\n\r\n        //error handler\r\n        this.error = err;\r\n        //this function is used to comb through the function modules and find a function given its name\r\n        var findFunction = function (fname) {\r\n            var fmodules = Settings.FUNCTION_MODULES,\r\n                    l = fmodules.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var fmodule = fmodules[i];\r\n                if(fname in fmodule)\r\n                    return fmodule[fname];\r\n            }\r\n            err('The function ' + fname + ' is undefined!');\r\n        };\r\n\r\n        /**\r\n         * This method gives the ability to override operators with new methods.\r\n         * @param {String} which\r\n         * @param {Function} with_what\r\n         */\r\n        this.override = function (which, with_what) {\r\n            if(!bin[which])\r\n                bin[which] = [];\r\n            bin[which].push(this[which]);\r\n            this[which] = with_what;\r\n        };\r\n\r\n        /**\r\n         * Restores a previously overridden operator\r\n         * @param {String} what\r\n         */\r\n        this.restore = function (what) {\r\n            if(this[what])\r\n                this[what] = bin[what].pop();\r\n        };\r\n\r\n        /**\r\n         * This method is supposed to behave similarly to the override method but it does not override\r\n         * the existing function rather it only extends it\r\n         * @param {String} what\r\n         * @param {Function} with_what\r\n         * @param {boolean} force_call\r\n         */\r\n        this.extend = function (what, with_what, force_call) {\r\n            var _ = this,\r\n                    extended = this[what];\r\n            if(typeof extended === 'function' && typeof with_what === 'function') {\r\n                var f = this[what];\r\n                this[what] = function (a, b) {\r\n                    if(isSymbol(a) && isSymbol(b) && !force_call)\r\n                        return f.call(_, a, b);\r\n                    else\r\n                        return with_what.call(_, a, b, f);\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with\r\n         * a few extras. The most important thing is that that it gives a fname and\r\n         * an args property to the symbols in addition to changing its group to FN\r\n         * @param {String} fn_name\r\n         * @param {Array} params\r\n         * @returns {Symbol}\r\n         */\r\n        this.symfunction = function (fn_name, params) {\r\n            //call the proper function and return the result;\r\n            var f = new Symbol(fn_name);\r\n            f.group = FN;\r\n            if(typeof params === 'object')\r\n                params = [].slice.call(params);//ensure an array\r\n            f.args = params;\r\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\r\n            f.updateHash();\r\n            return f;\r\n        };\r\n\r\n        /**\r\n         * An internal function call for the Parser. This will either trigger a real\r\n         * function call if it can do so or just return a symbolic representation of the\r\n         * function using symfunction.\r\n         * @param {String} fn_name\r\n         * @param {Array} args\r\n         * @param {int} allowed_args\r\n         * @returns {Symbol}\r\n         */\r\n        this.callfunction = function (fn_name, args, allowed_args) {\r\n            var fn_settings = functions[fn_name];\r\n\r\n            if(!fn_settings)\r\n                err('Nerdamer currently does not support the function ' + fn_name);\r\n\r\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\r\n                    fn = fn_settings[0], //get the mapped function\r\n                    retval;\r\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\r\n            //an array so make sure to wrap the argument in an array.\r\n            if(!(args instanceof Array))\r\n                args = args !== undefined ? [args] : [];\r\n\r\n            if(num_allowed_args !== -1) {\r\n                var is_array = isArray(num_allowed_args),\r\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\r\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\r\n                        num_args = args.length;\r\n\r\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\r\n\r\n                if(num_args < min_args)\r\n                    err(format(error_msg, 'minimum', min_args, num_args));\r\n                if(num_args > max_args)\r\n                    err(format(error_msg, 'maximum', max_args, num_args));\r\n            }\r\n\r\n            /*\r\n             * The following are very important to the how nerdamer constructs functions!\r\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n             *     they are expecting a symbolic output.\r\n             */\r\n            //check if arguments are all numers\r\n            var numericArgs = allNumbers(args);\r\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\r\n//            if (Settings.USE_BIG && numericArgs) {\r\n//                retval = Big[fn_name].apply(undefined, args);\r\n//            }\r\n//            else {\r\n            if(!fn) {\r\n                //Remember assumption 1. No function defined so it MUST be numeric in nature\r\n                fn = findFunction(fn_name);\r\n                if(Settings.PARSE2NUMBER && numericArgs)\r\n                    retval = bigConvert(fn.apply(fn, args));\r\n                else\r\n                    retval = _.symfunction(fn_name, args);\r\n            }\r\n            else {\r\n                //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\r\n                retval = fn.apply(fn_settings[2], args);\r\n            }\r\n//            }\r\n\r\n            return retval;\r\n        };\r\n        /**\r\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when\r\n         * substituting spaces for multiplication\r\n         */\r\n        this.operator_filter_regex = (function () {\r\n            //we only want the operators which are singular since those are the ones\r\n            //that nerdamer uses anyway\r\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\r\n                if(x.length === 1)\r\n                    return x;\r\n            }).join('\\\\');\r\n            //create a regex which captures all spaces between characters except those\r\n            //have an operator on one end\r\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\r\n        })();\r\n\r\n        /**\r\n         * Replaces nerdamer.setOperator\r\n         * @param {object} operator\r\n         * @param {boolean} shift\r\n         */\r\n        this.setOperator = function (operator, action, shift) {\r\n            var name = operator.operator; //take the name to be the symbol\r\n            operators[name] = operator;\r\n            if(action)\r\n                this[operator.action] = action;\r\n            //make the parser aware of the operator\r\n            _[name] = operator.operation;\r\n            //make the action available to the parser if infix\r\n            if(!operator.action && !(operator.prefix || operator.postif)) {\r\n                operator.action = name;\r\n            }\r\n            //if this operator is exclusive then all successive operators should be shifted\r\n            if(shift === 'over' || shift === 'under') {\r\n                var precedence = operator.precedence;\r\n\r\n                for(var x in operators) {\r\n                    var o = operators[x];\r\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\r\n                    if(condition)\r\n                        o.precedence++;\r\n                }\r\n                ;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Gets an opererator by its symbol\r\n         * @param {String} operator\r\n         * @returns {Object}\r\n         */\r\n        this.getOperator = function (operator) {\r\n            return operators[operator];\r\n        };\r\n\r\n        this.aliasOperator = function (o, n) {\r\n            var t = {};\r\n            var operator = operators[o];\r\n            //copy everything over to the new operator\r\n            for(var x in operator) {\r\n                t[x] = operator[x];\r\n            }\r\n            //update the symbol\r\n            t.operator = n;\r\n\r\n            this.setOperator(t);\r\n        };\r\n\r\n        /**\r\n         * Returns the list of operators. Caution! Can break parser!\r\n         * @returns {object}\r\n         */\r\n        this.getOperators = function () {\r\n            //will replace this with some cloning action in the future\r\n            return operators;\r\n        };\r\n\r\n        this.getBrackets = function () {\r\n            return brackets;\r\n        };\r\n        /*\r\n         * Preforms preprocessing on the string. Useful for making early modification before\r\n         * sending to the parser\r\n         * @param {String} e\r\n         */\r\n        var prepare_expression = function (e) {\r\n            /*\r\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for\r\n             * a side-by-side close and open parenthesis\r\n             */\r\n            e = String(e);\r\n            //apply preprocessors\r\n            for(var i = 0; i < preprocessors.actions.length; i++)\r\n                e = preprocessors.actions[i].call(this, e);\r\n\r\n            //e = e.split(' ').join('');//strip empty spaces\r\n            //replace multiple spaces with one space\r\n            e = e.replace(/\\s+/g, ' ');\r\n\r\n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\r\n            if(/e/gi.test(e)) {\r\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) {\r\n                    return scientificToDecimal(x);\r\n                });\r\n            }\r\n            //replace scientific numbers\r\n\r\n            //allow omission of multiplication after coefficients\r\n            e = e.replace(Settings.IMPLIED_MULTIPLICATION_REGEX, function () {\r\n                var str = arguments[4],\r\n                        group1 = arguments[1],\r\n                        group2 = arguments[2],\r\n                        start = arguments[3],\r\n                        first = str.charAt(start),\r\n                        before = '',\r\n                        d = '*';\r\n                if(!first.match(/[\\+\\-\\/\\*]/))\r\n                    before = str.charAt(start - 1);\r\n                if(before.match(/[a-z]/i))\r\n                    d = '';\r\n                return group1 + d + group2;\r\n            })\r\n                    .replace(/([a-z0-9_]+)/gi, function (match, a) {\r\n                        if(Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\r\n                            if(!isNaN(a))\r\n                                return a;\r\n                            return a.split('').join('*');\r\n                        }\r\n                        return a;\r\n                    })\r\n                    //allow omission of multiplication sign between brackets\r\n                    .replace(/\\)\\(/g, ')*(') || '0';\r\n            //replace x(x+a) with x*(x+a)\r\n            while(true) {\r\n                var e_org = e; //store the original\r\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\r\n                    var g1 = a || c,\r\n                            g2 = b || d;\r\n                    if(g1 in functions) //create a passthrough for functions\r\n                        return g1 + g2;\r\n                    return g1 + '*' + g2;\r\n                });\r\n                //if the original equals the replace we're done\r\n                if(e_org === e)\r\n                    break;\r\n            }\r\n            return e;\r\n        };\r\n        //delay setting of constants until Settings is ready\r\n        this.initConstants = function () {\r\n            this.CONSTANTS = {\r\n                E: new Symbol(Settings.E),\r\n                PI: new Symbol(Settings.PI)\r\n            };\r\n        };\r\n        /*\r\n         * Debugging method used to better visualize vector and arrays\r\n         * @param {object} o\r\n         * @returns {String}\r\n         */\r\n        this.pretty_print = function (o) {\r\n            if(Array.isArray(o)) {\r\n                var s = o.map(x => _.pretty_print(x)).join(', ');\r\n                if(o.type === 'vector')\r\n                    return 'vector<' + s + '>';\r\n                return '(' + s + ')';\r\n            }\r\n            return o.toString();\r\n        };\r\n        this.peekers = {\r\n            pre_operator: [],\r\n            post_operator: [],\r\n            pre_function: [],\r\n            post_function: []\r\n        };\r\n\r\n        this.callPeekers = function (name) {\r\n            if(Settings.callPeekers) {\r\n                var peekers = this.peekers[name];\r\n                //remove the first items and stringify\r\n                var args = arguments2Array(arguments).slice(1).map(stringify);\r\n                //call each one of the peekers\r\n                for(var i = 0; i < peekers.length; i++) {\r\n                    peekers[i].apply(null, args);\r\n                }\r\n            }\r\n        };\r\n        /*\r\n         * Tokenizes the string\r\n         * @param {String} e\r\n         * @returns {Token[]}\r\n         */\r\n        this.tokenize = function (e) {\r\n            //cast to String\r\n            e = String(e);\r\n            //remove multiple white spaces and spaces at beginning and end of string\r\n            e = e.trim().replace(/\\s+/g, ' ');\r\n            //remove spaces before and after brackets\r\n            for(var x in brackets) {\r\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\r\n                e = e.replace(regex, x);\r\n            }\r\n\r\n            var col = 0; //the column position\r\n            var L = e.length; //expression length\r\n            var lpos = 0; //marks beginning of next token\r\n            var tokens = []; //the tokens container\r\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\r\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\r\n            var depth = 0;\r\n            var open_brackets = [];\r\n            var has_space = false; //marks if an open space character was found\r\n            var SPACE = ' ';\r\n            var EMPTY_STRING = '';\r\n            var COMMA = ',';\r\n            var MINUS = '-';\r\n            var MULT = '*';\r\n            //Possible source of bug. Review\r\n            /*\r\n             //gets the next space\r\n             var next_space = function(from) {\r\n             for(var i=from; i<L; i++) {\r\n             if(e.charAt(i) === ' ')\r\n             return i;\r\n             }\r\n             \r\n             return L; //assume the end of the string instead\r\n             };\r\n             */\r\n            /**\r\n             * Adds a scope to tokens\r\n             * @param {String} scope_type\r\n             * @param {int} column\r\n             * @returns {undefined}\r\n             */\r\n            var addScope = function (scope_type, column) {\r\n                var new_scope = []; //create a new scope\r\n                if(scope_type !== undefined) {\r\n                    new_scope.type = scope_type;\r\n                }\r\n                new_scope.column = column; //mark the column of the scope\r\n                scopes.push(new_scope); //add it to the list of scopes\r\n                target.push(new_scope); //add it to the tokens list since now it's a scope\r\n                target = new_scope; //point to it\r\n                depth++; //go down one in scope\r\n            };\r\n            /**\r\n             * Goes up in scope by one\r\n             * @returns {undefined}\r\n             */\r\n            var goUp = function () {\r\n                scopes.pop(); //remove the scope from the scopes stack\r\n                target = scopes[--depth]; //point the above scope\r\n            };\r\n            /**\r\n             * Extracts all the operators from the expression string starting at postion start_at\r\n             * @param {int} start_at\r\n             * @returns {String}\r\n             */\r\n            var get_operator_str = function (start_at) {\r\n                start_at = start_at !== undefined ? start_at : col;\r\n                //mark the end of the operator as the start since we're just going\r\n                //to be walking along the string\r\n                var end = start_at + 1;\r\n                //just keep moving along\r\n                while(e.charAt(end++) in operators) {\r\n                }\r\n                //remember that we started at one position ahead. The beginning operator is what triggered\r\n                //this function to be called in the first place. String.CharAt is zero based so we now\r\n                //have to correct two places. The initial increment + the extra++ at the end of end during\r\n                //the last iteration.\r\n                return e.substring(start_at, end - 1);\r\n            };\r\n            /**\r\n             * Breaks operator up in to several different operators as defined in operators\r\n             * @param {String} operator_str\r\n             * @returns {String[]}\r\n             */\r\n            var chunkify = function (operator_str) {\r\n                var start = col - operator_str.length; //start of operator\r\n                var _operators = [];\r\n                var operator = operator_str.charAt(0);\r\n                //grab the largest possible chunks but start at 2 since we already know\r\n                //that the first character is an operator\r\n\r\n                for(var i = 1, L = operator_str.length; i < L; i++) {\r\n                    var ch = operator_str.charAt(i);\r\n                    var o = operator + ch;\r\n                    //since the operator now is undefined then the last operator\r\n                    //was the largest possible combination.\r\n                    if(!(o in operators)) {\r\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                        operator = ch;\r\n                    }\r\n                    else\r\n                        operator = o;//now the operator is the larger chunk\r\n                }\r\n                //add the last operator\r\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                return _operators;\r\n            };\r\n\r\n            /**\r\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\r\n             * @param {int} at\r\n             * @param {String} token\r\n             * @returns {undefined}\r\n             */\r\n            var add_token = function (at, token) {\r\n                //grab the token if we're not supplied one\r\n                if(token === undefined)\r\n                    token = e.substring(lpos, at);\r\n                //only add it if it's not an empty string\r\n                if(token in _.units)\r\n                    target.push(new Token(token, Token.UNIT, lpos));\r\n                else if(token !== '')\r\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\r\n            };\r\n            /**\r\n             * Adds a function to the output\r\n             * @param {String} f\r\n             * @returns {undefined}\r\n             */\r\n            var add_function = function (f) {\r\n                target.push(new Token(f, Token.FUNCTION, lpos));\r\n            };\r\n            /**\r\n             * Tokens are found between operators so this marks the location of where the last token was found\r\n             * @param {int} position\r\n             * @returns {undefined}\r\n             */\r\n            var set_last_position = function (position) {\r\n                lpos = position + 1;\r\n            };\r\n            /**\r\n             * When a operator is found and added, especially a combo operator, then the column location\r\n             * has to be adjusted to the end of the operator\r\n             * @returns {undefined}\r\n             */\r\n            var adjust_column_position = function () {\r\n                lpos = lpos + operator_str.length - 2;\r\n                col = lpos - 1;\r\n            };\r\n            for(; col < L; col++) {\r\n                var ch = e.charAt(col);\r\n                if(ch in operators) {\r\n                    add_token(col);\r\n                    //is the last token numeric?\r\n                    var last_token_is_numeric = target[0] && isNumber(target[0]);\r\n                    //is this character multiplication?\r\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\r\n                    //if we're in a new scope then go up by one but if the space\r\n                    //is right befor an operator then it makes no sense to go up in scope\r\n                    //consider sin -x. The last position = current position at the minus sign\r\n                    //this means that we're going for sin(x) -x which is wrong\r\n                    //Ignore comma since comma is still part of the existing scope.\r\n                    if(has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\r\n                        has_space = false;\r\n                        goUp();\r\n                    }\r\n                    //mark the last position that a\r\n                    set_last_position(col + 1);\r\n                    var operator_str = get_operator_str(col);\r\n\r\n                    adjust_column_position();\r\n                    target.push.apply(target, chunkify(operator_str));\r\n                }\r\n                else if(ch in brackets) {\r\n                    var bracket = brackets[ch];\r\n\r\n                    if(bracket.is_open) {\r\n                        //mark the bracket\r\n                        open_brackets.push([bracket, lpos]);\r\n                        var f = e.substring(lpos, col);\r\n                        if(f in functions) {\r\n                            add_function(f);\r\n                        }\r\n                        else if(f !== '') {\r\n                            //assume multiplication\r\n                            //TODO: Add the multiplication to stack\r\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\r\n                        }\r\n                        //go down one in scope\r\n                        addScope(bracket.maps_to, col);\r\n                    }\r\n                    else if(bracket.is_close) {\r\n                        //get the matching bracket\r\n                        var pair = open_brackets.pop();\r\n                        //throw errors accordingly\r\n                        //missing open bracket\r\n                        if(!pair)\r\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\r\n                        //incorrect pair\r\n                        else if(pair[0].id !== bracket.id - 1)\r\n                            throw new ParityError('Parity error');\r\n\r\n                        add_token(col);\r\n                        goUp();\r\n                    }\r\n                    set_last_position(col);\r\n                }\r\n                else if(ch === SPACE) {\r\n                    var prev = e.substring(lpos, col); //look back\r\n                    var nxt = e.charAt(col + 1); //look forward\r\n                    if(has_space) {\r\n\r\n                        if(prev in operators) {\r\n                            target.push(new Token(prev, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, prev);\r\n                            //we're at the closing space\r\n                            goUp(); //go up in scope if we're at a space\r\n\r\n                            //assume multiplication if it's not an operator except for minus\r\n                            var is_operator = nxt in operators;\r\n\r\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator) {\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                            }\r\n                        }\r\n                        has_space = false; //remove the space\r\n                    }\r\n                    else {\r\n                        //we're at the closing space\r\n                        //check if it's a function\r\n                        var f = e.substring(lpos, col);\r\n\r\n                        if(f in functions) {\r\n                            //there's no need to go up in scope if the next character is an operator\r\n                            has_space = true; //mark that a space was found\r\n                            add_function(f);\r\n                            addScope();\r\n                        }\r\n                        else if(f in operators) {\r\n                            target.push(new Token(f, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, f);\r\n                            //peek ahead to the next character\r\n                            var nxt = e.charAt(col + 1);\r\n\r\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\r\n                            //is not an operator\r\n\r\n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                        }\r\n                        //Possible source of bug. Review\r\n                        /*\r\n                         //space can mean multiplication so add the symbol if the is encountered\r\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\r\n                         var next = e.charAt(col+1);\r\n                         var next_is_operator = next in operators;\r\n                         var ns = next_space(col+1);\r\n                         var next_word = e.substring(col+1, ns);\r\n                         //the next can either be a prefix operator or no operator\r\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\r\n                         target.push(new Token('*', Token.OPERATOR, col));\r\n                         }\r\n                         */\r\n                    }\r\n                    set_last_position(col); //mark this location\r\n                }\r\n            }\r\n            //check that all brackets were closed\r\n            if(open_brackets.length) {\r\n                var b = open_brackets.pop();\r\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\r\n            }\r\n            //add the last token\r\n            add_token(col);\r\n\r\n            return tokens;\r\n        };\r\n        /*\r\n         * Puts token array in Reverse Polish Notation\r\n         * @param {Token[]} tokens\r\n         * @returns {Token[]}\r\n         */\r\n        this.toRPN = function (tokens) {\r\n            var fn = tokens.type;\r\n            var l = tokens.length, i;\r\n            var output = [];\r\n            var stack = [];\r\n            var prefixes = [];\r\n            var collapse = function (target, destination) {\r\n                while(target.length)\r\n                    destination.push(target.pop());\r\n            };\r\n            //mark all the prefixes and add them to the stack\r\n            for(i = 0; i < l; i++) {\r\n                var token = tokens[i];\r\n                if(token.type !== Token.OPERATOR)\r\n                    break;\r\n                if(!token.prefix)\r\n                    throw new OperatorError('Not a prefix operator');\r\n                token.is_prefix = true;\r\n                stack.push(token);\r\n            }\r\n            //begin with remaining tokens\r\n            for(; i < l; i++) {\r\n                var e = tokens[i];\r\n                if(e.type === Token.OPERATOR) {\r\n                    var operator = e;\r\n\r\n                    //create the option for the operator being overloaded\r\n                    if(operator.overloaded) {\r\n                        var next = tokens[i + 1];\r\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\r\n                        if(next && next.type === Token.VARIABLE_OR_LITERAL) {\r\n                            operator.postfix = false;\r\n                            //override the original function with the overload function\r\n                            operator.action = operator.overloadAction;\r\n                            operator.leftAssoc = operator.overloadLeftAssoc;\r\n                        }\r\n                    }\r\n\r\n                    //if the stack is not empty\r\n                    while(stack.length) {\r\n                        var last = stack[stack.length - 1];\r\n                        //if (there is an operator at the top of the operator stack with greater precedence)\r\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\r\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\r\n                        if(!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\r\n                            break;\r\n                        output.push(stack.pop());\r\n                    }\r\n\r\n                    //change the behavior of the operator if it's a vector and we've been asked to do so\r\n                    if((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\r\n                        operator.action = operator.vectorFn;\r\n\r\n\r\n                    //if the operator is a postfix operator then we're ready to go since it belongs\r\n                    //to the preceding token. However the output cannot be empty. It must have either\r\n                    //an operator or a variable/literal\r\n                    if(operator.postfix) {\r\n                        var previous = tokens[i - 1];\r\n                        if(!previous)\r\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\r\n                        else if(previous.type === Token.OPERATOR) {\r\n                            //a postfix can only be followed by a postfix\r\n                            if(!previous.postfix)\r\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //we must be at an infix so point the operator this\r\n                        do {\r\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\r\n                            var next = tokens[i + 1]; //take a look ahead\r\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\r\n                            if(next_is_operator) {\r\n                                //if it's not a prefix operator then it not in the right place\r\n                                if(!next.prefix) {\r\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\r\n                                }\r\n                                //mark it as a confirmed prefix\r\n                                next.is_prefix = true;\r\n                                //add it to the prefixes\r\n                                prefixes.push(next);\r\n                                i++;\r\n                            }\r\n                        }\r\n                        while(next_is_operator)\r\n                    }\r\n\r\n                    //if it's a prefix it should be on a special stack called prefixes\r\n                    //we do this to hold on to prefixes because of left associative operators.\r\n                    //they belong to the variable/literal but if placed on either the stack\r\n                    //or output there's no way of knowing this. I might be wrong so I welcome\r\n                    //any discussion about this.\r\n\r\n                    if(operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\r\n                        prefixes.push(operator);\r\n                    else\r\n                        stack.push(operator);\r\n                    //move the prefixes to the stack\r\n                    while(prefixes.length) {\r\n                        if(operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\r\n                            stack.push(prefixes.pop());\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                else if(e.type === Token.VARIABLE_OR_LITERAL) {\r\n                    //move prefixes to stack at beginning of scope\r\n                    if(output.length === 0)\r\n                        collapse(prefixes, stack);\r\n                    //done with token\r\n                    output.push(e);\r\n                    var last_on_stack = stack[stack.length - 1];\r\n                    //then move all the prefixes to the output\r\n                    if(!last_on_stack || !last_on_stack.leftAssoc)\r\n                        collapse(prefixes, output);\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    stack.push(e);\r\n                }\r\n                else if(e.type === Token.UNIT) {\r\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\r\n                    output.push(e);\r\n                }\r\n                //if it's an additonal scope then put that into RPN form\r\n                if(Array.isArray(e)) {\r\n                    output.push(this.toRPN(e));\r\n                    if(e.type)\r\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\r\n\r\n                }\r\n            }\r\n            //collapse the remainder of the stack and prefixes to output\r\n            collapse(stack, output);\r\n            collapse(prefixes, output);\r\n\r\n            return output;\r\n        };\r\n        /*\r\n         * Parses the tokens\r\n         * @param {Tokens[]} rpn\r\n         * @param {object} substitutions\r\n         * @returns {Symbol}\r\n         */\r\n        this.parseRPN = function (rpn, substitutions) {\r\n            try {\r\n                //default substitutions\r\n                substitutions = substitutions || {};\r\n                //prepare the substitutions.\r\n                //we first parse them out as-is\r\n                for(var x in substitutions)\r\n                    substitutions[x] = _.parse(substitutions[x], {});\r\n\r\n                //Although technically constants,\r\n                //pi and e are only available when evaluating the expression so add to the subs.\r\n                //Doing this avoids rounding errors\r\n                //link e and pi\r\n                if(Settings.PARSE2NUMBER) {\r\n                    //use the value provided if the individual for some strange reason prefers this.\r\n                    //one reason could be to sub e but not pi or vice versa\r\n                    if(!('e' in substitutions))\r\n                        substitutions.e = new Symbol(Settings.E);\r\n                    if((!('pi' in substitutions)))\r\n                        substitutions.pi = new Symbol(Settings.PI);\r\n                }\r\n\r\n                var Q = [];\r\n                for(var i = 0, l = rpn.length; i < l; i++) {\r\n                    var e = rpn[i];\r\n\r\n                    //Arrays indicate a new scope so parse that out\r\n                    if(Array.isArray(e)) {\r\n                        e = this.parseRPN(e, substitutions);\r\n                    }\r\n\r\n                    if(e) {\r\n                        if(e.type === Token.OPERATOR) {\r\n                            if(e.is_prefix || e.postfix)\r\n                                //resolve the operation assocated with the prefix\r\n                                Q.push(e.operation(Q.pop()));\r\n                            else {\r\n                                var b = Q.pop();\r\n                                var a = Q.pop();\r\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\r\n                                if(typeof a === 'undefined')\r\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\r\n\r\n                                var is_comma = e.action === 'comma';\r\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\r\n                                if(a instanceof Set && !is_comma)\r\n                                    a = Vector.fromSet(a);\r\n\r\n                                if(b instanceof Set && !is_comma)\r\n                                    b = Vector.fromSet(b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('pre_operator', a, b, e);\r\n\r\n                                var ans = _[e.action](a, b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('post_operator', ans, a, b, e);\r\n\r\n                                Q.push(ans);\r\n                            }\r\n                        }\r\n                        else if(e.type === Token.FUNCTION) {\r\n                            var args = Q.pop();\r\n                            var parent = args.parent; //make a note of the parent\r\n                            if(!(args instanceof Collection))\r\n                                args = Collection.create(args);\r\n                            //the return value may be a vector. If it is then we check\r\n                            //Q to see if there's another vector on the stack. If it is then\r\n                            //we check if has elements. If it does then we know that we're dealing\r\n                            //with an \"getter\" object and return the requested values\r\n\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            var fn_name = e.value;\r\n                            var fn_args = args.getItems();\r\n\r\n                            //call the pre-function peekers\r\n                            this.callPeekers('pre_function', fn_name, fn_args);\r\n\r\n                            var ret = _.callfunction(fn_name, fn_args);\r\n\r\n                            //call the post-function peekers\r\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\r\n\r\n                            var last = Q[Q.length - 1];\r\n                            var next = rpn[i + 1];\r\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\r\n\r\n                            if(!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\r\n                                //remove the item from the queue\r\n                                var item = Q.pop();\r\n\r\n                                var getter = ret.elements[0];\r\n                                //check if it's symbolic. If so put it back and add the item to the stack\r\n                                if(!getter.isConstant()) {\r\n                                    item.getter = getter;\r\n                                    Q.push(item);\r\n                                    Q.push(ret);\r\n                                }\r\n                                else if(getter instanceof Slice) {\r\n                                    //if it's a Slice return the slice\r\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\r\n                                }\r\n                                else {\r\n                                    var index = Number(getter);\r\n                                    var il = item.elements.length;\r\n                                    //support for negative indices\r\n                                    if(index < 0)\r\n                                        index = il + index;\r\n                                    //it it's still out of bounds\r\n                                    if(index < 0 || index >= il) //index should no longer be negative since it's been reset above\r\n                                        //range error\r\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\r\n\r\n                                    var element = item.elements[index];\r\n                                    //cyclic but we need to mark this for future reference\r\n                                    item.getter = index;\r\n                                    element.parent = item;\r\n\r\n                                    Q.push(element);\r\n                                }\r\n                            }\r\n                            else {\r\n                                //extend the parent reference\r\n                                if(parent)\r\n                                    ret.parent = parent;\r\n                                Q.push(ret);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            var subbed;\r\n                            var v = e.value;\r\n\r\n                            if(v in Settings.ALIASES)\r\n                                e = _.parse(Settings.ALIASES[e]);\r\n                            //wrap it in a symbol if need be\r\n                            else if(e.type === Token.VARIABLE_OR_LITERAL)\r\n                                e = new Symbol(v);\r\n                            else if(e.type === Token.UNIT) {\r\n                                e = new Symbol(v);\r\n                                e.isUnit = true;\r\n                            }\r\n\r\n                            //make substitutions\r\n                            //Always constants first. This avoids the being overridden\r\n                            if(v in _.CONSTANTS) {\r\n                                subbed = e;\r\n                                e = new Symbol(_.CONSTANTS[v]);\r\n                            }\r\n                            //next substitutions. This allows declared variable to be overridden\r\n                            //check if the values match to avoid erasing the multiplier.\r\n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\r\n                            else if(v in substitutions && v !== substitutions[v].toString()) {\r\n                                subbed = e;\r\n                                e = substitutions[v].clone();\r\n                            }\r\n                            //next declare variables\r\n                            else if(v in VARS) {\r\n                                subbed = e;\r\n                                e = VARS[v].clone();\r\n                            }\r\n                            //make notation of what it was before\r\n                            if(subbed)\r\n                                e.subbed = subbed;\r\n\r\n                            Q.push(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var retval = Q[0];\r\n\r\n                if(['undefined', 'string', 'number'].indexOf(typeof retval) !== -1) {\r\n                    throw new UnexpectedTokenError('Unexpected token!');\r\n                }\r\n\r\n                return retval;\r\n            }\r\n            catch(error) {\r\n                var rethrowErrors = [OutOfFunctionDomainError];\r\n                // Rethrow certain errors in the same class to preserve them\r\n                rethrowErrors.forEach(function (E) {\r\n                    if(error instanceof E) {\r\n                        throw new E(error.message + ': ' + e.column);\r\n                    }\r\n                });\r\n\r\n                throw new ParseError(error.message + ': ' + e.column);\r\n            }\r\n        };\r\n        /**\r\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes\r\n         * it right away. The operator functions are called when their respective operators are reached. For instance\r\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each\r\n         * character of the string and placing the operators on the stack and values on the output. When an operator\r\n         * having a lower order than the last is reached then the stack is processed from the last operator on the\r\n         * stack.\r\n         * @param {String} token\r\n         */\r\n\r\n        function Node(token) {\r\n            this.type = token.type;\r\n            this.value = token.value;\r\n            //the incoming token may already be a Node type\r\n            this.left = token.left;\r\n            this.right = token.right;\r\n        }\r\n\r\n        Node.prototype.toString = function () {\r\n            var left = this.left ? this.left.toString() + '---' : '';\r\n            var right = this.right ? '---' + this.right.toString() : '';\r\n            return left + '(' + this.value + ')' + right;\r\n        };\r\n\r\n        Node.prototype.toHTML = function (depth, indent) {\r\n            depth = depth || 0;\r\n            indent = typeof indent === 'undefined' ? 4 : indent;\r\n            var tab = function (n) {\r\n                return ' '.repeat(indent * n);\r\n            };\r\n            var html = '';\r\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\r\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\r\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\r\n            if(left || right) {\r\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\r\n            }\r\n            html += '';\r\n            return html;\r\n        };\r\n\r\n        this.tree = function (tokens) {\r\n            var Q = [];\r\n            for(var i = 0; i < tokens.length; i++) {\r\n                var e = tokens[i];\r\n                //Arrays indicate a new scope so parse that out\r\n                if(Array.isArray(e)) {\r\n                    e = this.tree(e);\r\n                    //if it's a comma then it's just arguments\r\n                    Q.push(e);\r\n                    continue;\r\n                }\r\n                if(e.type === Token.OPERATOR) {\r\n                    if(e.is_prefix || e.postfix) {\r\n                        //prefixes go to the left, postfix to the right\r\n                        var location = e.is_prefix ? 'left' : 'right';\r\n                        var last = Q.pop();\r\n                        e = new Node(e);\r\n                        e[location] = last;\r\n                        Q.push(e);\r\n                    }\r\n                    else {\r\n                        e = new Node(e);\r\n                        e.right = Q.pop();\r\n                        e.left = Q.pop();\r\n                        Q.push(e);\r\n                    }\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    e = new Node(e);\r\n                    var args = Q.pop();\r\n                    e.right = args;\r\n                    if(e.value === 'object') {\r\n                        //check if Q has a value\r\n                        var last = Q[Q.length - 1];\r\n                        if(last) {\r\n                            while(last.right) {\r\n                                last = last.right;\r\n                            }\r\n                            last.right = e;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    Q.push(e);\r\n                }\r\n                else {\r\n                    Q.push(new Node(e));\r\n                }\r\n            }\r\n\r\n            return Q[0];\r\n        };\r\n        this.parse = function (e, substitutions) {\r\n            e = prepare_expression(e);\r\n            substitutions = substitutions || {};\r\n            //three passes but easier to debug\r\n            var tokens = this.tokenize(e);\r\n            var rpn = this.toRPN(tokens);\r\n            return this.parseRPN(rpn, substitutions);\r\n        };\r\n        /**\r\n         * TODO: Switch to Parser.tokenize for this method\r\n         * Reads a string into an array of Symbols and operators\r\n         * @param {String} expression_string\r\n         * @returns {Array}\r\n         */\r\n        this.toObject = function (expression_string) {\r\n            var objectify = function (tokens) {\r\n                var output = [];\r\n                for(var i = 0, l = tokens.length; i < l; i++) {\r\n                    var token = tokens[i];\r\n                    var v = token.value;\r\n                    if(token.type === Token.VARIABLE_OR_LITERAL) {\r\n                        output.push(new Symbol(v));\r\n                    }\r\n                    else if(token.type === Token.FUNCTION) {\r\n                        //jump ahead since the next object are the arguments\r\n                        i++;\r\n                        //create a symbolic function and stick it on output\r\n                        var f = _.symfunction(v, objectify(tokens[i]));\r\n                        f.isConversion = true;\r\n                        output.push(f);\r\n                    }\r\n                    else if(token.type === Token.OPERATOR) {\r\n                        output.push(v);\r\n                    }\r\n                    else {\r\n                        output.push(objectify(token));\r\n                    }\r\n                }\r\n\r\n                return output;\r\n            };\r\n            return objectify(_.tokenize(expression_string));\r\n        };\r\n\r\n        // A helper method for toTeX\r\n        var chunkAtCommas = function (arr) {\r\n            var j, k = 0, chunks = [[]];\r\n            for(var j = 0, l = arr.length; j < l; j++) {\r\n                if(arr[j] === ',') {\r\n                    k++;\r\n                    chunks[k] = [];\r\n                }\r\n                else {\r\n                    chunks[k].push(arr[j]);\r\n                }\r\n            }\r\n            return chunks;\r\n        };\r\n\r\n        // Helper method for toTeX\r\n        var rem_brackets = function (str) {\r\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\r\n                if(a)\r\n                    return a;\r\n                return str;\r\n            });\r\n        };\r\n\r\n        var remove_redundant_powers = function (arr) {\r\n            // The filtered array\r\n            var narr = [];\r\n\r\n            while(arr.length) {\r\n                // Remove the element from the front\r\n                var e = arr.shift();\r\n                var next = arr[0];\r\n                var next_is_array = isArray(next);\r\n                var next_is_minus = next === '-';\r\n\r\n                // Remove redundant plusses \r\n                if(e === '^') {\r\n                    if(next === '+') {\r\n                        arr.shift();\r\n                    }\r\n                    else if(next_is_array && next[0] === '+') {\r\n                        next.shift();\r\n                    }\r\n\r\n                    // Remove redundant parentheses\r\n                    if(next_is_array && next.length === 1) {\r\n                        arr.unshift(arr.shift()[0]);\r\n                    }\r\n                }\r\n\r\n                // Check if it's a negative power\r\n                if(e === '^' && (next_is_array && next[0] === '-' || next_is_minus)) {\r\n                    // If so:\r\n                    // - Remove it from the new array, place a one and a division sign in that array and put it back\r\n                    var last = narr.pop();\r\n                    // Check if it's something multiplied by\r\n                    var before = narr[narr.length - 1];\r\n                    var before_last = '1';\r\n\r\n                    if(before === '*') {\r\n                        narr.pop();\r\n                        // For simplicity we just pop it. \r\n                        before_last = narr.pop();\r\n                    }\r\n                    // Implied multiplication\r\n                    else if(isArray(before)) {\r\n                        before_last = narr.pop();\r\n                    }\r\n\r\n                    narr.push(before_last, '/', last, e);\r\n\r\n                    // Remove the negative sign from the power \r\n                    if(next_is_array) {\r\n                        next.shift();\r\n                    }\r\n                    else {\r\n                        arr.shift();\r\n                    }\r\n\r\n                    // Remove it from the array so we don't end up with redundant parentheses if we can\r\n                    if(next_is_array && next.length === 1) {\r\n                        narr.push(arr.shift()[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    narr.push(e);\r\n                }\r\n            }\r\n\r\n            return narr;\r\n        };\r\n        /*\r\n         * Convert expression or object to LaTeX\r\n         * @param {String} expression_or_obj\r\n         * @param {object} opt\r\n         * @returns {String}\r\n         */\r\n        this.toTeX = function (expression_or_obj, opt) {\r\n            opt = opt || {};\r\n            // Add decimal option as per issue #579. Consider passing an object to Latex.latex as option instead of string\r\n            var decimals = opt.decimals === true ? 'decimals' : undefined;\r\n\r\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\r\n                    TeX = [],\r\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\r\n\r\n            // Remove negative powers as per issue #570\r\n            obj = remove_redundant_powers(obj);\r\n\r\n            if(isArray(obj)) {\r\n                var nobj = [], a, b;\r\n                //first handle ^\r\n                for(var i = 0; i < obj.length; i++) {\r\n                    a = obj[i];\r\n\r\n                    if(obj[i + 1] === '^') {\r\n                        b = obj[i + 2];\r\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\r\n                        i += 2;\r\n                    }\r\n                    else {\r\n                        nobj.push(a);\r\n                    }\r\n                }\r\n                obj = nobj;\r\n            }\r\n\r\n            for(var i = 0, l = obj.length; i < l; i++) {\r\n                var e = obj[i];\r\n\r\n                // Convert * to cdot\r\n                if(e === '*') {\r\n                    e = cdot;\r\n                }\r\n\r\n                if(isSymbol(e)) {\r\n                    if(e.group === FN) {\r\n                        var fname = e.fname, f;\r\n\r\n                        if(fname === SQRT) {\r\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\r\n                        }\r\n                        else if(fname === ABS) {\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\r\n                        }\r\n                        else if(fname === PARENTHESIS) {\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n                        else if(fname === Settings.LOG10) {\r\n                            f = '\\\\' + Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\r\n                        }\r\n                        else if(fname === 'integrate') {\r\n                            /* Retrive [Expression, x] */\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            /* Build TeX */\r\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[1]);\r\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\r\n                        }\r\n                        else if(fname === 'defint') {\r\n                            var chunks = chunkAtCommas(e.args),\r\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[3]),\r\n                                    lb = this.toTeX(chunks[1]),\r\n                                    ub = this.toTeX(chunks[2]);\r\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\r\n\r\n                        }\r\n                        else if(fname === 'diff') {\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\r\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\r\n                            if(chunks.length === 1) {\r\n                                var vars = [];\r\n                                for(j = 0; j < chunks[0].length; j++) {\r\n                                    if(chunks[0][j].group === 3) {\r\n                                        vars.push(chunks[0][j].value);\r\n                                    }\r\n                                }\r\n                                vars.sort();\r\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\r\n                            }\r\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\r\n                            else if(chunks.length === 2) {\r\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\r\n                            }\r\n                            /* If we have more than 2 arguments, we assume we've got everything */\r\n                            else {\r\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\r\n                            }\r\n\r\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\r\n\r\n                        }\r\n                        else if(fname === 'sum' || fname === 'product') {\r\n                            // Split e.args into 4 parts based on locations of , symbols.\r\n                            var argSplit = [[], [], [], []], j = 0, i;\r\n                            for(i = 0; i < e.args.length; i++) {\r\n                                if(e.args[i] === ',') {\r\n                                    j++;\r\n                                    continue;\r\n                                }\r\n                                argSplit[j].push(e.args[i]);\r\n                            }\r\n                            // Then build TeX string.\r\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\r\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\r\n                        }\r\n                        else if(fname === 'limit') {\r\n                            var args = chunkAtCommas(e.args).map(function (x) {\r\n                                if(Array.isArray(x))\r\n                                    return _.toTeX(x.join(''));\r\n                                return _.toTeX(String(x));\r\n                            });\r\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\r\n                        }\r\n                        else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\r\n                        }\r\n                        else {\r\n                            f = LaTeX.latex(e, decimals);\r\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n\r\n                        TeX.push(f);\r\n                    }\r\n                    else {\r\n                        TeX.push(LaTeX.latex(e, decimals));\r\n                    }\r\n                }\r\n                else if(isArray(e)) {\r\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\r\n                }\r\n                else {\r\n                    if(e === '/')\r\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\r\n                    else\r\n                        TeX.push(e);\r\n                }\r\n            }\r\n\r\n            return TeX.join(' ');\r\n        };\r\n\r\n//Parser.functions ==============================================================\r\n        /* Although parens is not a \"real\" function it is important in some cases when the\r\n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n         * as the parser will get rid of it at the first opportunity\r\n         */\r\n        function parens(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                return symbol;\r\n            }\r\n            return _.symfunction('parens', [symbol]);\r\n        }\r\n\r\n        function abs(symbol) {\r\n\r\n            //|-∞| = ∞\r\n            if(symbol.isInfinity) {\r\n                return Symbol.infinity();\r\n            }\r\n            if(symbol.multiplier.lessThan(0))\r\n                symbol.multiplier.negate();\r\n\r\n            if(symbol.isImaginary()) {\r\n                var re = symbol.realpart();\r\n                var im = symbol.imagpart();\r\n                if(re.isConstant() && im.isConstant())\r\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\r\n            }\r\n            else if(isNumericSymbol(symbol) || even(symbol.power)) {\r\n                return symbol;\r\n            }\r\n\r\n            if(symbol.isComposite()) {\r\n                var ms = [];\r\n                symbol.each(function (x) {\r\n                    ms.push(x.multiplier);\r\n                });\r\n                var gcd = Math2.QGCD.apply(null, ms);\r\n                if(gcd.lessThan(0)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\r\n                    symbol.distributeMultiplier();\r\n                }\r\n            }\r\n\r\n            //convert |n*x| to n*|x|\r\n            var m = _.parse(symbol.multiplier);\r\n            symbol.toUnitMultiplier();\r\n\r\n            return _.multiply(m, _.symfunction(ABS, [symbol]));\r\n        }\r\n        /**\r\n         * The factorial function\r\n         * @param {Symbol} symbol\r\n         * @return {Symbol}\r\n         */\r\n        function factorial(symbol) {\r\n            var retval;\r\n            if(isVector(symbol)) {\r\n                var V = new Vector();\r\n                symbol.each(function (x, i) {\r\n                    //i start at one.\r\n                    V.set(i - 1, factorial(x));\r\n                });\r\n                return V;\r\n            }\r\n            if(isMatrix(symbol)) {\r\n                var M = new Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    //i start at one.\r\n                    M.set(i, j, factorial(x));\r\n                });\r\n                return M;\r\n            }\r\n            if(Settings.PARSE2NUMBER && symbol.isConstant()) {\r\n                if(isInt(symbol)) {\r\n                    retval = Math2.bigfactorial(symbol);\r\n                }\r\n                else {\r\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\r\n                }\r\n\r\n                retval = bigConvert(retval);\r\n                return retval;\r\n            }\r\n            else if(symbol.isConstant()) {\r\n                var den = symbol.getDenom();\r\n                if(den.equals(2)) {\r\n                    var num = symbol.getNum();\r\n                    var a, b, c, n;\r\n\r\n                    if(!symbol.multiplier.isNegative()) {\r\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                    }\r\n                    else {\r\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                    }\r\n                    c = a.divide(b);\r\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\r\n                }\r\n            }\r\n            return _.symfunction(FACTORIAL, [symbol]);\r\n        }\r\n        ;\r\n        /**\r\n         * Returns the continued fraction of a number\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} n\r\n         * @returns {Symbol}\r\n         */\r\n        function continued_fraction(symbol, n) {\r\n            var _symbol = evaluate(symbol);\r\n            if(_symbol.isConstant()) {\r\n                var cf = Math2.continuedFraction(_symbol, n);\r\n                //convert the fractions array to a new Vector\r\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\r\n                    return new Symbol(x);\r\n                }));\r\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\r\n            }\r\n            return _.symfunction('continued_fraction', arguments);\r\n        }\r\n        /**\r\n         * Returns the error function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function erf(symbol) {\r\n            var _symbol = evaluate(symbol);\r\n\r\n            if(_symbol.isConstant()) {\r\n                return Math2.erf(_symbol);\r\n            }\r\n            else if(_symbol.isImaginary()) {\r\n                return complex.erf(symbol);\r\n            }\r\n            return _.symfunction('erf', arguments);\r\n        }\r\n        ;\r\n        /**\r\n         * The mod function\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Symbol}\r\n         */\r\n        function mod(symbol1, symbol2) {\r\n            if(symbol1.isConstant() && symbol2.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\r\n                return retval;\r\n            }\r\n            //try to see if division has remainder of zero\r\n            var r = _.divide(symbol1.clone(), symbol2.clone());\r\n            if(isInt(r))\r\n                return new Symbol(0);\r\n            return _.symfunction('mod', [symbol1, symbol2]);\r\n        }\r\n        /**\r\n         * A branghing function\r\n         * @param {Boolean} condition\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        function IF(condition, a, b) {\r\n            if(typeof condition !== 'boolean')\r\n                if(isNumericSymbol(condition))\r\n                    condition = !!Number(condition);\r\n            if(condition)\r\n                return a;\r\n            return b;\r\n        }\r\n        /**\r\n         *\r\n         * @param {Matrix|Vector|Set|Collection} obj\r\n         * @param {Symbol} item\r\n         * @returns {Boolean}\r\n         */\r\n        function is_in(obj, item) {\r\n            if(isMatrix(obj)) {\r\n                for(var i = 0, l = obj.rows(); i < l; i++) {\r\n                    for(var j = 0, l2 = obj.cols(); j < l2; j++) {\r\n                        var element = obj.elements[i][j];\r\n                        if(element.equals(item))\r\n                            return new Symbol(1);\r\n                    }\r\n                }\r\n            }\r\n            else if(obj.elements) {\r\n                for(var i = 0, l = obj.elements.length; i < l; i++) {\r\n                    if(obj.elements[i].equals(item))\r\n                        return new Symbol(1);\r\n                }\r\n            }\r\n\r\n            return new Symbol(0);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for sinc\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sinc(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant()) {\r\n                    return new Symbol(Math2.sinc(symbol));\r\n                }\r\n                return _.parse(format('sin({0})/({0})', symbol));\r\n            }\r\n            return _.symfunction('sinc', [symbol]);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\r\n         * Thanks @ Happypig375\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function exp(symbol) {\r\n            if(symbol.fname === Settings.LOG && symbol.isLinear()) {\r\n                return _.pow(symbol.args[0], Symbol.create(symbol.multiplier));\r\n            }\r\n            return _.parse(format('e^({0})', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value degrees to radians\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function radians(symbol) {\r\n            return _.parse(format('({0})*pi/180', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value from radians to degrees\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function degrees(symbol) {\r\n            return _.parse(format('({0})*180/pi', symbol));\r\n        }\r\n\r\n        function nroots(symbol) {\r\n            var a, b;\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n                b = _.parse(symbol.power);\r\n            }\r\n            else if(symbol.group === P) {\r\n                a = _.parse(symbol.value);\r\n                b = _.parse(symbol.power);\r\n            }\r\n\r\n            if(a && b && a.group === N && b.group === N) {\r\n                var _roots = [];\r\n                var parts = Symbol.toPolarFormArray(symbol);\r\n                var r = _.parse(a).abs().toString();\r\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n                var x = arg(a).toString();\r\n                var n = b.multiplier.den.toString();\r\n                var p = b.multiplier.num.toString();\r\n\r\n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\r\n                for(var i = 0; i < n; i++) {\r\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n                }\r\n                return Vector.fromArray(_roots);\r\n            }\r\n            else if(symbol.isConstant(true)) {\r\n                var sign = symbol.sign();\r\n                var x = evaluate(symbol.abs());\r\n                var root = _.sqrt(x);\r\n\r\n                var _roots = [root.clone(), root.negate()];\r\n\r\n                if(sign < 0)\r\n                    _roots = _roots.map(function (x) {\r\n                        return _.multiply(x, Symbol.imaginary());\r\n                    });\r\n            }\r\n            else {\r\n                _roots = [_.parse(symbol)];\r\n            }\r\n\r\n            return Vector.fromArray(_roots);\r\n        }\r\n\r\n        /**\r\n         * Rationalizes a symbol\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rationalize(symbol) {\r\n            if(symbol.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                var num, den, retnum, retden, a, b, n, d;\r\n                symbol.each(function (x) {\r\n                    num = x.getNum();\r\n                    den = x.getDenom();\r\n                    retnum = retval.getNum();\r\n                    retden = retval.getDenom();\r\n                    a = _.multiply(den, retnum);\r\n                    b = _.multiply(num, retden);\r\n                    n = _.expand(_.add(a, b));\r\n                    d = _.multiply(retden, den);\r\n                    retval = _.divide(n, d);\r\n                }, true);\r\n\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         * The square root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sqrt(symbol) {\r\n            if(!isSymbol(symbol)) {\r\n                symbol = _.parse(symbol);\r\n            }\r\n            \r\n            // Exit early for EX\r\n            if(symbol.group === EX) {\r\n                return _.symfunction(SQRT, [symbol]);\r\n            }\r\n\r\n            if(symbol.fname === '' && symbol.power.equals(1))\r\n                symbol = symbol.args[0];\r\n\r\n            var is_negative = symbol.multiplier.sign() < 0;\r\n\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant() && !is_negative) {\r\n                    return new Symbol(bigDec.sqrt(symbol.multiplier.toDecimal()));\r\n                }\r\n                else if(symbol.isImaginary()) {\r\n                    return complex.sqrt(symbol);\r\n                }\r\n                else if(symbol.group === S) {\r\n                    return _.symfunction('sqrt', [symbol]);\r\n                }\r\n            }\r\n\r\n            var img, retval,\r\n                    isConstant = symbol.isConstant();\r\n\r\n            if(symbol.group === CB && symbol.isLinear()) {\r\n                var m = sqrt(Symbol(symbol.multiplier));\r\n                for(var s in symbol.symbols) {\r\n                    var x = symbol.symbols[s];\r\n                    m = _.multiply(m, sqrt(x));\r\n                }\r\n\r\n                retval = m;\r\n            }\r\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\r\n            else if(symbol.fname === SQRT) {\r\n                var s = symbol.args[0];\r\n                var ms = symbol.multiplier;\r\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\r\n                retval = s;\r\n                //grab the multiplier\r\n                if(!ms.equals(1))\r\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\r\n            }\r\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\r\n            //no need to keep sqrt(x^(1/3))\r\n            else if(!symbol.power.isInteger()) {\r\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\r\n                retval = symbol;\r\n            }\r\n            else if(symbol.multiplier < 0 && symbol.group === S) {\r\n                var a = _.parse(symbol.multiplier).negate();\r\n                var b = _.parse(symbol).toUnitMultiplier().negate();\r\n                retval = _.multiply(_.symfunction(Settings.SQRT, [b]), sqrt(a));\r\n            }\r\n            else {\r\n\r\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\r\n                //to sqrt(a)*sqrt(b)^1 for better simplification\r\n                //the sign of the power\r\n                var sign = symbol.power.sign();\r\n                //remove the sign\r\n                symbol.power = symbol.power.abs();\r\n\r\n                //if the symbols is imagary then we place in the imaginary part. We'll return it\r\n                //as a product\r\n                if(isConstant && symbol.multiplier.lessThan(0)) {\r\n                    img = Symbol.imaginary();\r\n                    symbol.multiplier = symbol.multiplier.abs();\r\n                }\r\n\r\n                var q = symbol.multiplier.toDecimal(),\r\n                        qa = Math.abs(q),\r\n                        t = Math.sqrt(qa);\r\n\r\n                var m;\r\n                //it's a perfect square so take the square\r\n                if(isInt(t)) {\r\n                    m = new Symbol(t);\r\n                }\r\n                else if(isInt(q)) {\r\n                    var factors = Math2.ifactor(q);\r\n                    var tw = 1;\r\n                    for(var x in factors) {\r\n                        var n = factors[x],\r\n                                nn = (n - (n % 2)); //get out the whole numbers\r\n                        if(nn) { //if there is a whole number ...\r\n                            var w = Math.pow(x, nn);\r\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\r\n                            q /= w; //reduce the number by the wholes\r\n                        }\r\n                    }\r\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\r\n                }\r\n                else {\r\n                    //reduce the numerator and denominator using prime factorization\r\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\r\n                    var r = [new Symbol(1), new Symbol(1)];\r\n                    var sq = [new Symbol(1), new Symbol(1)];\r\n                    for(var i = 0; i < 2; i++) {\r\n                        var n = c[i];\r\n                        //get the prime factors and loop through each.\r\n                        pfactor(n).each(function (x) {\r\n                            x = Symbol.unwrapPARENS(x);\r\n                            var b = x.clone().toLinear();\r\n                            var p = Number(x.power);\r\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\r\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\r\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\r\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\r\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\r\n                        });\r\n                    }\r\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\r\n                }\r\n\r\n\r\n                //strip the multiplier since we already took the sqrt\r\n                symbol = symbol.toUnitMultiplier(true);\r\n                //if the symbol is one just return one and not the sqrt function\r\n                if(symbol.isOne()) {\r\n                    retval = symbol;\r\n                }\r\n                else if(even(symbol.power.toString())) {\r\n                    //just raise it to the 1/2\r\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\r\n                }\r\n                else {\r\n                    retval = _.symfunction(SQRT, [symbol]);\r\n                }\r\n\r\n                //put back the sign that was removed earlier\r\n                if(sign < 0)\r\n                    retval.power.negate();\r\n\r\n                if(m)\r\n                    retval = _.multiply(m, retval);\r\n\r\n                if(img)\r\n                    retval = _.multiply(img, retval);\r\n            }\r\n\r\n            if(is_negative && Settings.PARSE2NUMBER)\r\n                return _.parse(retval);\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * The cube root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function cbrt(symbol) {\r\n            if(!symbol.isConstant(true)) {\r\n                var retval;\r\n\r\n                var n = symbol.power / 3;\r\n                //take the cube root of the multplier\r\n                var m = _.pow(_.parse(symbol.multiplier), new Symbol(1 / 3));\r\n                //strip the multiplier\r\n                var sym = symbol.toUnitMultiplier();\r\n\r\n                //simplify the power\r\n                if(isInt(n)) {\r\n                    retval = _.pow(sym.toLinear(), _.parse(n));\r\n                }\r\n                else {\r\n                    if(sym.group === CB) {\r\n                        retval = new Symbol(1);\r\n                        sym.each(function (x) {\r\n                            retval = _.multiply(retval, cbrt(x));\r\n                        });\r\n                    }\r\n                    else {\r\n                        retval = _.symfunction('cbrt', [sym]);\r\n                    }\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n            return nthroot(symbol, new Symbol(3));\r\n        }\r\n\r\n        function scientific(symbol, sigfigs) {\r\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to\r\n            //display this\r\n            symbol.scientific = sigfigs || 10;\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Symbol} num - the number being raised\r\n         * @param {Symbol} p - the exponent\r\n         * @param {type} prec - the precision wanted\r\n         * @param {bool} asbig - true if a bigDecimal is wanted\r\n         * @returns {Symbol}\r\n         */\r\n        function nthroot(num, p, prec, asbig) {\r\n            //clone p and convert to a number if possible\r\n            p = evaluate(_.parse(p));\r\n\r\n            //cannot calculate if p = 0. nthroot(0, 0) => 0^(1/0) => undefined\r\n            if(p.equals(0)) {\r\n                throw new UndefinedError('Unable to calculate nthroots of zero');\r\n            }\r\n\r\n            //Stop computation if it negative and even since we have an imaginary result\r\n            if(num < 0 && even(p))\r\n                throw new Error('Cannot calculate nthroot of negative number for even powers');\r\n\r\n            //return non numeric values unevaluated\r\n            if(!num.isConstant(true)) {\r\n                return _.symfunction('nthroot', arguments);\r\n            }\r\n\r\n            //evaluate numeric values\r\n            if(num.group !== N) {\r\n                num = evaluate(num);\r\n            }\r\n\r\n            //default is to return a big value\r\n            if(typeof asbig === 'undefined')\r\n                asbig = true;\r\n\r\n            prec = prec || 25;\r\n\r\n            var sign = num.sign();\r\n            var retval;\r\n            var ans;\r\n\r\n            if(sign < 0) {\r\n                num = abs(num); //remove the sign\r\n            }\r\n\r\n            if(isInt(num) && p.isConstant()) {\r\n\r\n                if(num < 18446744073709551616) {\r\n                    //2^64\r\n                    ans = Frac.create(Math.pow(num, 1 / p));\r\n                }\r\n                else {\r\n                    ans = Math2.nthroot(num, p);\r\n                }\r\n\r\n                var retval;\r\n                if(asbig) {\r\n                    retval = new Symbol(ans);\r\n                }\r\n                retval = new Symbol(ans.toDecimal(prec));\r\n\r\n                return _.multiply(new Symbol(sign), retval);\r\n            }\r\n        }\r\n\r\n        function pfactor(symbol) {\r\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\r\n            //More Big Number issues >:(\r\n            if(symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1))\r\n                return symbol;\r\n            //Fix issue #298\r\n            if(symbol.equals(Math.PI))\r\n                return new Symbol(Math.PI);\r\n            //evaluate the symbol to merge constants\r\n            symbol = evaluate(symbol.clone());\r\n\r\n            if(symbol.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                var m = symbol.toString();\r\n                if(isInt(m)) {\r\n                    var factors = Math2.ifactor(m);\r\n                    for(var factor in factors) {\r\n                        var p = factors[factor];\r\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\r\n                    }\r\n                }\r\n                else {\r\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\r\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\r\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\r\n                }\r\n            }\r\n            else\r\n                retval = _.symfunction('pfactor', arguments);\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Get's the real part of a complex number. Return number if real\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function realpart(symbol) {\r\n            return symbol.realpart();\r\n        }\r\n\r\n        /**\r\n         * Get's the imaginary part of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function imagpart(symbol) {\r\n            return symbol.imagpart();\r\n        }\r\n\r\n        /**\r\n         * Computes the conjugate of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function conjugate(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant())\r\n                return new Symbol(Math.atan2(im, re));\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant()) {\r\n                if(im.equals(0) && re.equals(-1)) {\r\n                    return _.parse('pi');\r\n                }\r\n                else if(im.equals(1) && re.equals(0)) {\r\n                    return _.parse('pi/2');\r\n                }\r\n                else if(im.equals(1) && re.equals(1)) {\r\n                    return _.parse('pi/4');\r\n                }\r\n                return new Symbol(Math.atan2(im, re));\r\n            }\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the polarform of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function polarform(symbol) {\r\n            var p, r, e, theta;\r\n            p = Symbol.toPolarFormArray(symbol);\r\n            theta = p[1];\r\n            r = p[0];\r\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\r\n            return _.multiply(r, e);\r\n        }\r\n\r\n        /**\r\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rectform(symbol) {\r\n            //TODO: e^((i*pi)/4)\r\n            var original = symbol.clone();\r\n            try {\r\n                var f, p, q, s, h, d, n;\r\n                f = decompose_fn(symbol, 'e', true);\r\n                p = _.divide(f.x.power, Symbol.imaginary());\r\n                q = evaluate(trig.tan(p));\r\n                s = _.pow(f.a, new Symbol(2));\r\n                d = q.getDenom(true);\r\n                n = q.getNum();\r\n                h = Symbol.hyp(n, d);\r\n                //check\r\n                if(h.equals(f.a)) {\r\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\r\n                }\r\n                else {\r\n                    return original;\r\n                }\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n        }\r\n\r\n        function symMinMax(f, args) {\r\n            args.map(function (x) {\r\n                x.numVal = evaluate(x).multiplier;\r\n            });\r\n            var l, a, b, a_val, b_val;\r\n            while(true) {\r\n                l = args.length;\r\n                if(l < 2)\r\n                    return args[0];\r\n                a = args.pop();\r\n                b = args[l - 2];\r\n                if(f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\r\n                    args.pop();\r\n                    args.push(a);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns maximum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function max() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.max.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('max', args);\r\n            return _.symfunction('max', args);\r\n        }\r\n\r\n        /**\r\n         * Returns minimum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function min() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.min.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('min', args);\r\n            return _.symfunction('min', args);\r\n        }\r\n\r\n        /**\r\n         * Returns the sign of a number\r\n         * @param {Symbol} x\r\n         * @returns {Symbol}\r\n         */\r\n        function sign(x) {\r\n            if(x.isConstant(true))\r\n                return new Symbol(Math.sign(evaluate(x)));\r\n            return _.symfunction('sign', arguments);\r\n        }\r\n\r\n        function sort(symbol, opt) {\r\n            opt = opt ? opt.toString() : 'asc';\r\n            var getval = function (e) {\r\n                if(e.group === N)\r\n                    return e.multiplier;\r\n                if(e.group === FN) {\r\n                    if(e.fname === '')\r\n                        return getval(e.args[0]);\r\n                    return e.fname;\r\n                }\r\n                if(e.group === S)\r\n                    return e.power;\r\n\r\n                return e.value;\r\n            };\r\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\r\n            return new Vector(symbols.sort(function (a, b) {\r\n                var aval = getval(a),\r\n                        bval = getval(b);\r\n                if(opt === 'desc')\r\n                    return bval - aval;\r\n                return aval - bval;\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * The log function\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} base\r\n         * @returns {Symbol}\r\n         */\r\n        function log(symbol, base) {\r\n\r\n            if(symbol.equals(1)) {\r\n                return new Symbol(0);\r\n            }\r\n\r\n            var retval;\r\n\r\n            if(symbol.fname === SQRT && symbol.multiplier.equals(1)) {\r\n                retval = _.divide(log(symbol.args[0]), new Symbol(2));\r\n\r\n                if(symbol.power.sign() < 0) {\r\n                    retval.negate();\r\n                }\r\n\r\n                // Exit early\r\n                return retval;\r\n            }\r\n\r\n            //log(0) is undefined so complain\r\n            if(symbol.equals(0)) {\r\n                throw new UndefinedError(Settings.LOG + '(0) is undefined!');\r\n            }\r\n\r\n            //deal with imaginary values\r\n            if(symbol.isImaginary()) {\r\n                return complex.evaluate(symbol, Settings.LOG);\r\n            }\r\n\r\n            if(symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\r\n                var log_sym = Math.log(symbol);\r\n                var log_base = Math.log(base);\r\n                retval = new Symbol(log_sym / log_base);\r\n            }\r\n            else if(symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\r\n                symbol.power.negate();\r\n                //move the negative outside but keep the positive inside :)\r\n                retval = log(symbol).negate();\r\n            }\r\n            else if(symbol.value === 'e' && symbol.multiplier.equals(1)) {\r\n                var p = symbol.power;\r\n                retval = isSymbol(p) ? p : new Symbol(p);\r\n            }\r\n            else if(symbol.group === FN && symbol.fname === 'exp') {\r\n                var s = symbol.args[0];\r\n                if(symbol.multiplier.equals(1))\r\n                    retval = _.multiply(s, new Symbol(symbol.power));\r\n                else\r\n                    retval = _.symfunction(Settings.LOG, [symbol]);\r\n            }\r\n            else if(Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\r\n                // Parse for safety.\r\n                symbol = _.parse(symbol);\r\n\r\n                var img_part;\r\n                if(symbol.multiplier.lessThan(0)) {\r\n                    symbol.negate();\r\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\r\n                }\r\n\r\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\r\n\r\n                if(img_part) {\r\n                    retval = _.add(retval, img_part);\r\n                }\r\n\r\n            }\r\n            else {\r\n                var s;\r\n                if(!symbol.power.equals(1) && !symbol.contains('e')) {\r\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\r\n                    symbol.toLinear();\r\n                }\r\n                //log(a,a) = 1 since the base is allowed to be changed.\r\n                //This was pointed out by Happypig375 in issue #280\r\n                if(arguments.length > 1 && allSame(arguments)) {\r\n                    retval = new Symbol(1);\r\n                }\r\n                else {\r\n                    retval = _.symfunction(Settings.LOG, arguments);\r\n                }\r\n\r\n                if(s)\r\n                    retval = _.multiply(s, retval);\r\n            }\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Round a number up to s decimal places\r\n         * @param {Number} x\r\n         * @param {int} s - the number of decimal places\r\n         * @returns {undefined}\r\n         */\r\n        function round(x, s) {\r\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\r\n            if(x.isConstant() && sIsConstant) {\r\n                var v, e, exp, retval;\r\n                v = x;\r\n                //round the coefficient of then number but not the actual decimal value\r\n                //we know this because a negative number was passed\r\n                if(s && s.lessThan(0)) {\r\n                    s = abs(s);\r\n                    //convert the number to exponential form\r\n                    e = Number(x).toExponential().toString().split('e');\r\n                    //point v to the coefficient of then number\r\n                    v = e[0];\r\n                    //set the expontent\r\n                    exp = e[1];\r\n                }\r\n                //round the number to the requested precision\r\n                retval = new Symbol(nround(v, Number(s || 0)));\r\n                //if there's a exponent then put it back\r\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\r\n            }\r\n\r\n\r\n            return _.symfunction('round', arguments);\r\n        }\r\n\r\n        /**\r\n         * Gets the quadrant of the trig function\r\n         * @param {Frac} m\r\n         * @returns {Int}\r\n         */\r\n        function getQuadrant(m) {\r\n            var v = m % 2, quadrant;\r\n\r\n            if(v < 0)\r\n                v = 2 + v; //put it in terms of pi\r\n\r\n            if(v >= 0 && v <= 0.5)\r\n                quadrant = 1;\r\n            else if(v > 0.5 && v <= 1)\r\n                quadrant = 2;\r\n            else if(v > 1 && v <= 1.5)\r\n                quadrant = 3;\r\n            else\r\n                quadrant = 4;\r\n            return quadrant;\r\n        }\r\n\r\n        /*\r\n         * Serves as a bridge between numbers and bigNumbers\r\n         * @param {Frac|Number} n\r\n         * @returns {Symbol}\r\n         */\r\n        function bigConvert(n) {\r\n            if(!isFinite(n)) {\r\n                var sign = Math.sign(n);\r\n                var r = new Symbol(String(Math.abs(n)));\r\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\r\n                return r;\r\n            }\r\n            if(isSymbol(n))\r\n                return n;\r\n            if(typeof n === 'number') {\r\n                try {\r\n                    n = Frac.simple(n);\r\n                }\r\n                catch(e) {\r\n                    n = new Frac(n);\r\n                }\r\n            }\r\n\r\n            var symbol = new Symbol(0);\r\n            symbol.multiplier = n;\r\n            return symbol;\r\n        }\r\n        ;\r\n\r\n        function clean(symbol) {\r\n            // handle functions with numeric values\r\n            // handle denominator within denominator\r\n            // handle trig simplifications\r\n            var g = symbol.group, retval;\r\n            //Now let's get to work\r\n            if(g === CP) {\r\n                var num = symbol.getNum(),\r\n                        den = symbol.getDenom() || new Symbol(1),\r\n                        p = Number(symbol.power),\r\n                        factor = new Symbol(1);\r\n                if(Math.abs(p) === 1) {\r\n                    den.each(function (x) {\r\n                        if(x.group === CB) {\r\n                            factor = _.multiply(factor, clean(x.getDenom()));\r\n                        }\r\n                        else if(x.power.lessThan(0)) {\r\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\r\n                        }\r\n                    });\r\n\r\n                    var new_den = new Symbol(0);\r\n                    //now divide out the factor and add to new den\r\n                    den.each(function (x) {\r\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\r\n                    });\r\n\r\n                    factor.invert(); //invert so it can be added to the top\r\n                    var new_num;\r\n                    if(num.isComposite()) {\r\n                        new_num = new Symbol(0);\r\n                        num.each(function (x) {\r\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\r\n                        });\r\n                    }\r\n                    else\r\n                        new_num = _.multiply(factor, num);\r\n\r\n                    retval = _.divide(new_num, new_den);\r\n                }\r\n            }\r\n            else if(g === CB) {\r\n                retval = new Symbol(1);\r\n                symbol.each(function (x) {\r\n                    retval = _.multiply(retval, _.clean(x));\r\n                });\r\n            }\r\n            else if(g === FN) {\r\n                if(symbol.args.length === 1 && symbol.args[0].isConstant())\r\n                    retval = block('PARSE2NUMBER', function () {\r\n                        return _.parse(symbol);\r\n                    }, true);\r\n            }\r\n\r\n            if(!retval)\r\n                retval = symbol;\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * A wrapper for the expand function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function expandall(symbol, opt) {\r\n            opt = opt || {\r\n                expand_denominator: true,\r\n                expand_functions: true\r\n            };\r\n            return expand(symbol, opt);\r\n        }\r\n        /**\r\n         * Expands a symbol\r\n         * @param symbol\r\n         */\r\n        // Old expand\r\n        function expand(symbol, opt) {\r\n            if(Array.isArray(symbol)) {\r\n                return symbol.map(function (x) {\r\n                    return expand(x, opt);\r\n                });\r\n            }\r\n            opt = opt || {};\r\n            //deal with parenthesis\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                var f = expand(symbol.args[0], opt);\r\n                var x = expand(_.pow(f, _.parse(symbol.power)), opt);\r\n                return _.multiply(_.parse(symbol.multiplier), x).distributeMultiplier();\r\n            }\r\n            // We can expand these groups so no need to waste time. Just return and be done.\r\n            if([N, P, S].indexOf(symbol.group) !== -1) {\r\n                return symbol; //nothing to do\r\n            }\r\n\r\n            var original = symbol.clone();\r\n\r\n            // Set up a try-catch block. If anything goes wrong then we simply return the original symbol\r\n            try {\r\n                // Store the power and multiplier\r\n                var m = symbol.multiplier.toString();\r\n                var p = Number(symbol.power);\r\n                var retval = symbol;\r\n\r\n                // Handle (a+b)^2 | (x+x^2)^2\r\n                if(symbol.isComposite() && isInt(symbol.power) && symbol.power > 0) {\r\n                    var n = p - 1;\r\n                    // Strip the expression of it's multiplier and power. We'll call it f. The power will be p and the multiplier m.\r\n                    var f = new Symbol(0);\r\n\r\n                    symbol.each(function (x) {\r\n                        f = _.add(f, expand(_.parse(x), opt));\r\n                    });\r\n\r\n                    var expanded = _.parse(f);\r\n\r\n                    for(var i = 0; i < n; i++) {\r\n                        expanded = mix(expanded, f, opt);\r\n                    }\r\n\r\n                    retval = _.multiply(_.parse(m), expanded).distributeMultiplier();\r\n                }\r\n                else if(symbol.group === FN && opt.expand_functions === true) {\r\n                    var args = [];\r\n                    // Expand function the arguments\r\n                    symbol.args.forEach(function (x) {\r\n                        args.push(expand(x, opt));\r\n                    });\r\n                    // Put back the power and multiplier\r\n                    retval = _.pow(_.symfunction(symbol.fname, args), _.parse(symbol.power));\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.isComposite() && isInt(symbol.power) && symbol.power < 0 && opt.expand_denominator === true) {\r\n                    // Invert it. Expand it and then re-invert it.\r\n                    symbol = symbol.invert();\r\n                    retval = expand(symbol, opt);\r\n                    retval.invert();\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    var rank = function (s) {\r\n                        switch(s.group) {\r\n                            case CP:\r\n                                return 0;\r\n                            case PL:\r\n                                return 1;\r\n                            case CB:\r\n                                return 2;\r\n                            case FN:\r\n                                return 3;\r\n                            default:\r\n                                return 4;\r\n                        }\r\n                    };\r\n                    // Consider (a+b)(c+d). The result will be (a*c+a*d)+(b*c+b*d).\r\n                    // We start by moving collecting the symbols. We want others>FN>CB>PL>CP\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return rank(b) - rank(a);\r\n                    })\r\n                            // Distribute the power to each symbol and expand\r\n                            .map(function (s) {\r\n                                var x = _.pow(s, _.parse(p));\r\n                                var e = expand(x, opt);\r\n                                return e;\r\n                            });\r\n\r\n                    var f = symbols.pop();\r\n\r\n                    // If the first symbols isn't a composite then we're done\r\n                    if(f.isComposite() && f.isLinear()) {\r\n                        symbols.forEach(function (s) {\r\n                            f = mix(f, s, opt);\r\n                        });\r\n\r\n                        // If f is of group PL or CP then we can expand some more\r\n                        if(f.isComposite()) {\r\n                            if(f.power > 1) {\r\n                                f = expand(_.pow(f, _.parse(f.power)), opt);\r\n                            }\r\n                            // Put back the multiplier\r\n                            retval = _.multiply(_.parse(m), f).distributeMultiplier();\r\n                            ;\r\n                        }\r\n                        else {\r\n                            // Everything is expanded at this point so if it's still a CB\r\n                            // then just return the symbol\r\n                            retval = f;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Just multiply back in the expanded form of each\r\n                        retval = f;\r\n                        symbols.forEach(function (s) {\r\n                            retval = _.multiply(retval, s);\r\n                        });\r\n                        // Put back the multiplier\r\n                        retval = _.multiply(retval, _.parse(m)).distributeMultiplier();\r\n                    }\r\n\r\n                    // TODO: This exists solely as a quick fix for sqrt(11)*sqrt(33) not simplifying.\r\n                    if(retval.group === CB) {\r\n                        retval = _.parse(retval);\r\n                    }\r\n                }\r\n                else {\r\n                    // Otherwise just return the expression\r\n                    retval = symbol;\r\n                }\r\n                // Final cleanup and return\r\n                return retval;\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n\r\n            return original;\r\n        }\r\n\r\n        /**\r\n         * Returns an identity matrix of nxn\r\n         * @param {Number} n\r\n         * @returns {Matrix}\r\n         */\r\n        function imatrix(n) {\r\n            return Matrix.identity(n);\r\n        }\r\n\r\n        /**\r\n         * Retrieves and item from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @returns {Vector|Symbol}\r\n         */\r\n        function vecget(vector, index) {\r\n            if(index.isConstant() && isInt(index))\r\n                return vector.elements[index];\r\n            return _.symfunction('vecget', arguments);\r\n        }\r\n\r\n        /**\r\n         * Removes duplicates from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} tolerance\r\n         * @returns {Vector}\r\n         */\r\n        function vectrim(vector, tolerance) {\r\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\r\n\r\n            vector = vector.clone();\r\n\r\n            tolerance = Number(tolerance);\r\n            //place algebraic solutions first\r\n            vector.elements.sort(function (a, b) {\r\n                return b.group - a.group;\r\n            });\r\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\r\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\r\n            vector.elements = removeDuplicates(vector.elements, function (a, b) {\r\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\r\n                return diff <= tolerance;\r\n            });\r\n\r\n            return vector;\r\n        }\r\n\r\n        /**\r\n         * Set a value for a vector at a given index\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @param {Symbol} value\r\n         * @returns {Vector}\r\n         */\r\n        function vecset(vector, index, value) {\r\n            if(!index.isConstant)\r\n                return _.symfunction('vecset', arguments);\r\n            vector.elements[index] = value;\r\n            return vector;\r\n        }\r\n\r\n        function matget(matrix, i, j) {\r\n            if(i.isConstant() && j.isConstant())\r\n                return matrix.elements[i][j];\r\n            return _.symfunction('matget', arguments);\r\n        }\r\n\r\n        function matgetrow(matrix, i) {\r\n            if(i.isConstant())\r\n                return new Matrix(matrix.elements[i]);\r\n            return _.symfunction('matgetrow', arguments);\r\n        }\r\n\r\n        function matsetrow(matrix, i, x) {\r\n            //handle symbolics\r\n            if(!i.isConstant())\r\n                return _.symfunction('matsetrow', arguments);\r\n            if(matrix.elements[i].length !== x.elements.length)\r\n                throw new DimensionError('Matrix row must match row dimensions!');\r\n            var M = matrix.clone();\r\n            M.elements[i] = x.clone().elements;\r\n            return M;\r\n        }\r\n\r\n        function matgetcol(matrix, col_index) {\r\n            //handle symbolics\r\n            if(!col_index.isConstant())\r\n                return _.symfunction('matgetcol', arguments);\r\n            col_index = Number(col_index);\r\n            var M = Matrix.fromArray([]);\r\n            matrix.each(function (x, i, j) {\r\n                if(j === col_index) {\r\n                    M.elements.push([x.clone()]);\r\n                }\r\n            });\r\n            return M;\r\n        }\r\n\r\n        function matsetcol(matrix, j, col) {\r\n            //handle symbolics\r\n            if(!j.isConstant())\r\n                return _.symfunction('matsetcol', arguments);\r\n            j = Number(j);\r\n            if(matrix.rows() !== col.elements.length)\r\n                throw new DimensionError('Matrix columns must match number of columns!');\r\n            col.each(function (x, i) {\r\n                matrix.set(i - 1, j, x.elements[0].clone());\r\n            });\r\n            return matrix;\r\n        }\r\n\r\n\r\n        function matset(matrix, i, j, value) {\r\n            matrix.elements[i][j] = value;\r\n            return matrix;\r\n        }\r\n\r\n        //the constructor for vectors\r\n        function vector() {\r\n            return new Vector([].slice.call(arguments));\r\n        }\r\n\r\n        //the constructor for matrices\r\n        function matrix() {\r\n            return Matrix.fromArray(arguments);\r\n        }\r\n\r\n        //the constructor for sets\r\n        function set() {\r\n            return Set.fromArray(arguments);\r\n        }\r\n\r\n        function determinant(symbol) {\r\n            if(isMatrix(symbol)) {\r\n                return symbol.determinant();\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        function size(symbol) {\r\n            var retval;\r\n            if(isMatrix(symbol))\r\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\r\n            else if(isVector(symbol) || isSet(symbol))\r\n                retval = new Symbol(symbol.elements.length);\r\n            else\r\n                err('size expects a matrix or a vector');\r\n            return retval;\r\n        }\r\n\r\n        function dot(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.dot(vec2);\r\n            err('function dot expects 2 vectors');\r\n        }\r\n\r\n        function cross(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.cross(vec2);\r\n            err('function cross expects 2 vectors');\r\n        }\r\n\r\n        function transpose(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.transpose();\r\n            err('function transpose expects a matrix');\r\n        }\r\n\r\n        function invert(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.invert();\r\n            err('invert expects a matrix');\r\n        }\r\n\r\n        //basic set functions\r\n        function union(set1, set2) {\r\n            return set1.union(set2);\r\n        }\r\n\r\n        function intersection(set1, set2) {\r\n            return set1.intersection(set2);\r\n        }\r\n\r\n        function contains(set1, e) {\r\n            return set1.contains(e);\r\n        }\r\n\r\n        function difference(set1, set2) {\r\n            return set1.difference(set2);\r\n        }\r\n\r\n        function intersects(set1, set2) {\r\n            return new Symbol(Number(set1.intersects(set2)));\r\n        }\r\n\r\n        function is_subset(set1, set2) {\r\n            return new Symbol(Number(set1.is_subset(set2)));\r\n        }\r\n\r\n        function print() {\r\n            arguments2Array(arguments).map(function (x) {\r\n                console.log(x.toString());\r\n            });\r\n        }\r\n\r\n        function testSQRT(symbol) {\r\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\r\n            if(!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\r\n                var sign = symbol.power.sign();\r\n                //don't devide the power directly. Notice the use of toString. This makes it possible\r\n                //to use a bigNumber library in the future\r\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\r\n                //place back the sign of the power\r\n                if(sign < 0)\r\n                    retval.invert();\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        //try to reduce a symbol by pulling its power\r\n        function testPow(symbol) {\r\n            if(symbol.group === P) {\r\n                var v = symbol.value;\r\n\r\n                var fct = primeFactors(v)[0];\r\n\r\n                //safety\r\n                if(!fct) {\r\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\r\n                    return symbol;\r\n                }\r\n\r\n                var n = new Frac(Math.log(v) / Math.log(fct)),\r\n                        p = n.multiply(symbol.power);\r\n\r\n                //we don't want a more complex number than before\r\n                if(p.den > symbol.power.den)\r\n                    return symbol;\r\n\r\n                if(isInt(p))\r\n                    symbol = Symbol(Math.pow(fct, p));\r\n                else\r\n                    symbol = new Symbol(fct).setPower(p);\r\n            }\r\n\r\n            return symbol;\r\n        }\r\n\r\n        //Link the functions to the parse so they're available outside of the library.\r\n        //This is strictly for convenience and may be deprecated.\r\n        this.expand = expand;\r\n        this.round = round;\r\n        this.clean = clean;\r\n        this.sqrt = sqrt;\r\n        this.cbrt = cbrt;\r\n        this.abs = abs;\r\n        this.log = log;\r\n        this.rationalize = rationalize;\r\n        this.nthroot = nthroot;\r\n        this.arg = arg;\r\n        this.conjugate = conjugate;\r\n        this.imagpart = imagpart;\r\n        this.realpart = realpart;\r\n\r\n        //TODO:\r\n        //Utilize the function below instead of the linked function\r\n        this.getFunction = function (name) {\r\n            return functions[name][0];\r\n        };\r\n\r\n//Parser.methods ===============================================================\r\n        this.addPreprocessor = function (name, action, order, shift_cells) {\r\n            var names = preprocessors.names;\r\n            var actions = preprocessors.actions;\r\n            if((typeof action !== 'function')) //the person probably forgot to specify a name\r\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\r\n            if(!order) {\r\n                names.push(name);\r\n                actions.push(action);\r\n            }\r\n            else {\r\n                if(shift_cells) {\r\n                    names.splice(order, 0, name);\r\n                    actions.splice(order, 0, action);\r\n                }\r\n                else {\r\n                    names[order] = name;\r\n                    actions[order] = action;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getPreprocessors = function () {\r\n            var preprocessors = {};\r\n            for(var i = 0, l = preprocessors.names.length; i < l; i++) {\r\n                var name = preprocessors.names[i];\r\n                preprocessors[name] = {\r\n                    order: i,\r\n                    action: preprocessors.actions[i]\r\n                };\r\n            }\r\n            return preprocessors;\r\n        };\r\n\r\n        this.removePreprocessor = function (name, shift_cells) {\r\n            var i = preprocessors.names.indexOf(name);\r\n            if(shift_cells) {\r\n                remove(preprocessors.names, i);\r\n                remove(preprocessors.actions, i);\r\n            }\r\n            else {\r\n                preprocessors.names[i] = undefined;\r\n                preprocessors.actions[i] = undefined;\r\n            }\r\n        };\r\n\r\n        //The loader for functions which are not part of Math2\r\n        this.mapped_function = function () {\r\n            var subs = {},\r\n                    params = this.params;\r\n\r\n            for(var i = 0; i < params.length; i++) {\r\n                subs[params[i]] = String(arguments[i]);\r\n            }\r\n\r\n            return _.parse(this.body, subs);\r\n        };\r\n        /**\r\n         * Adds two symbols\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.add = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with two symbols\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward the adding of symbols with units to the Unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.add(a, b);\r\n                }\r\n                //handle Infinity\r\n                //https://www.encyclopediaofmath.org/index.php/Infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    var aneg = a.multiplier.lessThan(0),\r\n                            bneg = b.multiplier.lessThan(0);\r\n\r\n                    if(a.isInfinity && b.isInfinity && aneg !== bneg) {\r\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\r\n                    }\r\n\r\n                    var inf = Symbol.infinity();\r\n                    if(bneg)\r\n                        inf.negate();\r\n                    return inf;\r\n                }\r\n\r\n                if(a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\r\n                    a.distributeMultiplier();\r\n                    b.distributeMultiplier();\r\n                    // Fix for issue #606\r\n                    if(b.length > a.length && a.group === b.group) {\r\n                        [a, b] = [b, a];\r\n                    }\r\n                }\r\n                \r\n                //no need to waste time on zeroes\r\n                if(a.multiplier.equals(0))\r\n                    return b;\r\n                if(b.multiplier.equals(0))\r\n                    return a;\r\n\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\r\n                    return result;\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        ap = a.power.toString(),\r\n                        bp = b.power.toString();\r\n\r\n                //always keep the greater group on the left.\r\n                if(g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n                 * because it doesn't know which one to prioritize. */\r\n                //correction to PL dilemma\r\n                if(g1 === CB && g2 === PL && a.value === b.value) {\r\n                    //swap\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;\r\n                    g1 = a.group;\r\n                    g2 = b.group;\r\n                    ap = a.power.toString();\r\n                    bp = b.power.toString();\r\n                }\r\n\r\n                var powEQ = ap === bp,\r\n                        v1 = a.value,\r\n                        v2 = b.value,\r\n                        aIsComposite = a.isComposite(),\r\n                        bIsComposite = b.isComposite(),\r\n                        h1, h2, result;\r\n\r\n                if(aIsComposite)\r\n                    h1 = text(a, 'hash');\r\n                if(bIsComposite)\r\n                    h2 = text(b, 'hash');\r\n\r\n                if(g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\r\n                if(g1 === PL && g2 === PL) {\r\n                    v1 = h1;\r\n                    v2 = h2;\r\n                }\r\n\r\n                var PN = g1 === P && g2 === N,\r\n                        PNEQ = a.value === b.multiplier.toString(),\r\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\r\n\r\n                //equal values, equal powers\r\n                if(valEQ && powEQ && g1 === g2) {\r\n                    //make sure to convert N to something P can work with\r\n                    if(PN)\r\n                        b = b.convert(P);//CL\r\n\r\n                    //handle PL\r\n                    if(g1 === PL && (g2 === S || g2 === P)) {\r\n                        a.distributeMultiplier();\r\n                        result = a.attach(b);\r\n                    }\r\n                    else {\r\n                        result = a;//CL\r\n                        if(a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\r\n                            for(var s in b.symbols) {\r\n                                var x = b.symbols[s];\r\n                                result.attach(x);\r\n                            }\r\n                        }\r\n                        else\r\n                            result.multiplier = result.multiplier.add(b.multiplier);\r\n                    }\r\n                }\r\n                //equal values uneven powers\r\n                else if(valEQ && g1 !== PL) {\r\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\r\n                    if(g1 === CP && g2 === PL) {\r\n                        b.insert(a, 'add');\r\n                        result = b;\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(PL).attach([a, b]);\r\n                        //update the hash\r\n                        result.value = g1 === PL ? h1 : v1;\r\n                    }\r\n                }\r\n                else if(aIsComposite && a.isLinear()) {\r\n                    var canIterate = g1 === g2,\r\n                            bothPL = g1 === PL && g2 === PL;\r\n\r\n                    //we can only iterate group PL if they values match\r\n                    if(bothPL)\r\n                        canIterate = a.value === b.value;\r\n                    //distribute the multiplier over the entire symbol\r\n                    a.distributeMultiplier();\r\n\r\n                    if(b.isComposite() && b.isLinear() && canIterate) {\r\n                        b.distributeMultiplier();\r\n                        //CL\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            a.attach(x);\r\n                        }\r\n                        result = a;\r\n                    }\r\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\r\n                    else if(bothPL && a.value !== h2 || g1 === PL && !valEQ) {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n\r\n                    }\r\n                    else {\r\n                        result = a.attach(b);\r\n                    }\r\n                }\r\n                else {\r\n                    if(g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\r\n                        var m = b.multiplier.clone();\r\n                        b = sqrt(b.toUnitMultiplier().toLinear());\r\n                        b.multiplier = m;\r\n                    }\r\n                    //fix for issue #3 and #159\r\n                    if(a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\r\n                        result = _.add(expand(a), expand(b));\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n                    }\r\n                }\r\n\r\n                if(result.multiplier.equals(0))\r\n                    result = new Symbol(0);\r\n\r\n                //make sure to remove unnecessary wraps\r\n                if(result.length === 1) {\r\n                    var m = result.multiplier;\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(m);\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //keep symbols to the right\r\n                if(bIsSymbol && !aIsSymbol) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var bIsMatrix = isMatrix(b);\r\n\r\n                if(aIsSymbol && bIsMatrix) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.add(a.clone(), e));\r\n                    });\r\n\r\n                    b = M\r\n                }\r\n                else {\r\n                    if(isMatrix(a) && bIsMatrix) {\r\n                        b = a.add(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return _.add(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.subtract = function (a, b) {\r\n            var aIsSymbol = aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b), t;\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.subtract(a, b);\r\n                }\r\n                return this.add(a, b.negate());\r\n            }\r\n            else {\r\n                if(bIsSymbol && isVector(a)) {\r\n                    b = a.map(function (x) {\r\n                        return _.subtract(x, b.clone());\r\n                    });\r\n                }\r\n                else if(aIsSymbol && isVector(b)) {\r\n                    b = b.map(function (x) {\r\n                        return _.subtract(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVector(a) && isVector(b)) {\r\n                    if(a.dimensions() === b.dimensions())\r\n                        b = a.subtract(b);\r\n                    else\r\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\r\n                }\r\n                else if(isMatrix(a) && isVector(b)) {\r\n                    if(b.elements.length === a.rows()) {\r\n                        var M = new Matrix(), l = a.cols();\r\n                        b.each(function (e, i) {\r\n                            var row = [];\r\n                            for(var j = 0; j < l; j++) {\r\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\r\n                            }\r\n                            M.elements.push(row);\r\n                        });\r\n                        return M;\r\n                    }\r\n                    else\r\n                        err('Dimensions must match!');\r\n                }\r\n                else if(isVector(a) && isMatrix(b)) {\r\n                    var M = b.clone().negate();\r\n                    return _.add(M, a);\r\n                }\r\n                else if(isMatrix(a) && isMatrix(b)) {\r\n                    b = a.subtract(b);\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(x, b.clone()));\r\n                    });\r\n                    b = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(a.clone(), x));\r\n                    });\r\n                    b = M;\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the * operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.multiply = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with function assignment here\r\n            if(aIsSymbol && b instanceof Collection) {\r\n                b.elements.push(a);\r\n                return b;\r\n            }\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //if it has a unit then add it and return it right away.\r\n                if(b.isUnit) {\r\n                    var result = a.clone();\r\n                    a.unit = b;\r\n                    return result;\r\n                }\r\n                \r\n                //if it has units then just forward that problem to the unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.multiply(a, b);\r\n                }\r\n\r\n                //handle Infinty\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.equals(0) || b.equals(0))\r\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\r\n                    //x/infinity\r\n                    if(b.power.lessThan(0)) {\r\n                        if(!a.isInfinity) {\r\n                            return new Symbol(0);\r\n                        }\r\n                        else {\r\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\r\n                        }\r\n                    }\r\n\r\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\r\n                            inf = Symbol.infinity();\r\n                    if(a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\r\n                        if(sign < 0)\r\n                            inf.negate();\r\n\r\n                        return inf;\r\n                    }\r\n                }\r\n                //the quickies\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\r\n                    var retval = new Symbol(t);\r\n                    return retval;\r\n                }\r\n\r\n                //don't waste time\r\n                if(a.isOne()) {\r\n                    return b.clone();\r\n                }\r\n                if(b.isOne()) {\r\n                    return a.clone();\r\n                }\r\n\r\n                if(a.multiplier.equals(0) || b.multiplier.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                if(b.group > a.group && !(b.group === CP))\r\n                    return this.multiply(b, a);\r\n                //correction for PL/CB dilemma\r\n                if(a.group === CB && b.group === PL && a.value === b.value) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;//swap\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        bnum = b.multiplier.num,\r\n                        bden = b.multiplier.den;\r\n\r\n                if(g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\r\n                    //unwrap sqrt\r\n                    var a_pow = a.power;\r\n                    var a_multiplier = _.parse(a.multiplier);\r\n                    a = _.multiply(a_multiplier, a.args[0].clone());\r\n                    a.setPower(new Frac(0.5).multiply(a_pow));\r\n                    g1 = a.group;\r\n                }\r\n                //simplify n/sqrt(n). Being very specific\r\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\r\n                    a = _.symfunction(SQRT, [b.clone()]);\r\n                    b = new Symbol(1);\r\n                }\r\n                ;\r\n\r\n                var v1 = a.value,\r\n                        v2 = b.value,\r\n                        sign = new Frac(a.sign()),\r\n                        //since P is just a morphed version of N we need to see if they relate\r\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\r\n                        //don't multiply the multiplier of b since that's equal to the value of a\r\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\r\n                        result = a.clone().toUnitMultiplier();\r\n                b = b.clone().toUnitMultiplier(true);\r\n\r\n                //further simplification of sqrt\r\n                if(g1 === FN && g2 === FN) {\r\n                    var u = a.args[0].clone();\r\n                    var v = b.args[0].clone();\r\n                    if(a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\r\n\r\n                        var q = _.divide(u, v).invert();\r\n                        if(q.gt(1) && isInt(q)) {\r\n                            //b contains a factor a which can be moved to a\r\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\r\n                            b = new Symbol(1);\r\n                        }\r\n                    }\r\n                    //simplify factorial but only if\r\n                    //1 - It's division so b will have a negative power\r\n                    //2 - We're not dealing with factorials of numbers\r\n                    else if(a.fname === FACTORIAL && b.fname === FACTORIAL && !u.isConstant() && !v.isConstant() && b.power < 0) {\r\n                        //assume that n = positive\r\n                        var d = _.subtract(u.clone(), v.clone());\r\n\r\n                        //if it's not numeric then we don't know if we can simplify so just return\r\n                        if(d.isConstant()) {\r\n\r\n                            //there will never be a case where d == 0 since this will already have\r\n                            //been handled at the beginning of this function\r\n                            t = new Symbol(1);\r\n                            if(d < 0) {\r\n                                //If d is negative then the numerator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(u.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(u, new Symbol(a.power)), _.pow(t, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                            else {\r\n                                //Otherwise the denominator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(v.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(t, new Symbol(a.power)), _.pow(v, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                //if both are PL then their hashes have to match\r\n                if(v1 === v2 && g1 === PL && g1 === g2) {\r\n                    v1 = a.text('hash');\r\n                    v2 = b.text('hash');\r\n                }\r\n\r\n                //same issue with (x^2+1)^x*(x^2+1)\r\n                //EX needs an exception when multiplying because it needs to recognize\r\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\r\n                if(g2 === EX && b.previousGroup === PL && g1 === PL) {\r\n                    v1 = text(a, 'hash', EX);\r\n                }\r\n\r\n                if((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\r\n                    var p1 = a.power,\r\n                            p2 = b.power,\r\n                            isSymbolP1 = isSymbol(p1),\r\n                            isSymbolP2 = isSymbol(p2),\r\n                            toEX = (isSymbolP1 || isSymbolP2);\r\n                    //TODO: this needs cleaning up\r\n                    if(g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\r\n                        result = new Symbol(0);\r\n                        a.each(function (x) {\r\n                            result = _.add(result, _.multiply(x, b.clone()));\r\n                        }, true);\r\n                    }\r\n                    else {\r\n                        //add the powers\r\n                        result.power = toEX ? _.add(\r\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\r\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\r\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\r\n\r\n                        //eliminate zero power values and convert them to numbers\r\n                        if(result.power.equals(0))\r\n                            result = result.convert(N);\r\n\r\n                        //properly convert to EX\r\n                        if(toEX)\r\n                            result.convert(EX);\r\n\r\n                        //take care of imaginaries\r\n                        if(a.imaginary && b.imaginary) {\r\n                            var isEven = even(result.power % 2);\r\n                            if(isEven) {\r\n                                result = new Symbol(1);\r\n                                m.negate();\r\n                            }\r\n                        }\r\n\r\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\r\n                        if(result.group !== EX && result.previousGroup)\r\n                            result.previousGroup = undefined;\r\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\r\n                        //the sign but this isn't true if they're equals symbols\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                }\r\n                else if(g1 === CB && a.isLinear()) {\r\n                    if(g2 === CB)\r\n                        b.distributeExponent();\r\n                    if(g2 === CB && b.isLinear()) {\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            result = result.combine(x);\r\n                        }\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                    else {\r\n                        result.combine(b);\r\n                    }\r\n                }\r\n                else {\r\n                    //the multiplier was already handled so nothing left to do\r\n                    if(g1 !== N) {\r\n                        if(g1 === CB) {\r\n                            result.distributeExponent();\r\n                            result.combine(b);\r\n                        }\r\n                        else if(!b.isOne()) {\r\n                            var bm = b.multiplier.clone();\r\n                            b.toUnitMultiplier();\r\n                            result = Symbol.shell(CB).combine([result, b]);\r\n                            //transfer the multiplier to the outside\r\n                            result.multiplier = result.multiplier.multiply(bm);\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = b.clone().toUnitMultiplier();\r\n                    }\r\n                }\r\n\r\n                if(result.group === P) {\r\n                    var logV = Math.log(result.value),\r\n                            n1 = Math.log(bnum) / logV,\r\n                            n2 = Math.log(bden) / logV,\r\n                            ndiv = m.num / bnum,\r\n                            ddiv = m.den / bden;\r\n                    //we don't want to divide by zero no do we? Strange things happen.\r\n                    if(n1 !== 0 && isInt(n1) && isInt(ndiv)) {\r\n                        result.power = result.power.add(new Frac(n1));\r\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                    if(n2 !== 0 && isInt(n2) && isInt(ddiv)) {\r\n                        result.power = result.power.subtract(new Frac(n2));\r\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                }\r\n\r\n                //unpack CB if length is only one\r\n                if(result.length === 1) {\r\n                    var t = result.multiplier;\r\n                    //transfer the multiplier\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(t);\r\n                }\r\n\r\n                //reduce square root\r\n                var ps = result.power.toString();\r\n                if(even(ps) && result.fname === SQRT) {\r\n                    //grab the sign of the symbol\r\n                    sign = sign * result.sign();\r\n                    var p = result.power;\r\n                    result = result.args[0];\r\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\r\n                    //flip it back to the correct sign\r\n                    if(sign < 0)\r\n                        result.negate()\r\n                }\r\n                else {\r\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\r\n                    if(result.group === CP && result.isImaginary())\r\n                        result.distributeMultiplier();\r\n                }\r\n\r\n                //back convert group P to a simpler group N if possible\r\n                if(result.group === P && isInt(result.power.toDecimal()))\r\n                    result = result.convert(N);\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //****** Matrices & Vector *****//\r\n                if(bIsSymbol && !aIsSymbol) { //keep symbols to the right\r\n                    t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\r\n                if(aIsSymbol && isMatrixB) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.multiply(a.clone(), e));\r\n                    });\r\n\r\n                    b = M;\r\n                }\r\n                else {\r\n                    if(isMatrixA && isMatrixB) {\r\n                        b = a.multiply(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return this.multiply(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the / operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.divide = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward to Unit division\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.divide(a, b);\r\n                }\r\n                var result;\r\n                if(b.equals(0))\r\n                    throw new DivisionByZero('Division by zero not allowed!');\r\n\r\n                if(a.isConstant() && b.isConstant()) {\r\n                    result = a.clone();\r\n                    result.multiplier = result.multiplier.divide(b.multiplier);\r\n                }\r\n                else {\r\n                    b.invert();\r\n                    result = _.multiply(a, b);\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                //******* Vectors & Matrices *********//\r\n                var isVectorA = isVector(a), isVectorB = isVector(b);\r\n                if(aIsSymbol && isVectorB) {\r\n                    b = b.map(function (x) {\r\n                        return _.divide(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVectorA && bIsSymbol) {\r\n                    b = a.map(function (x) {\r\n                        return _.divide(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isVectorA && isVectorB) {\r\n                    if(a.dimensions() === b.dimensions()) {\r\n                        b = b.map(function (x, i) {\r\n                            return _.divide(a.elements[--i], x);\r\n                        });\r\n                    }\r\n                    else\r\n                        _.error('Cannot divide vectors. Dimensions do not match!');\r\n                }\r\n                else {\r\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\r\n                    if(isMatrixA && bIsSymbol) {\r\n                        var M = new Matrix();\r\n                        a.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(x, b.clone()));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(aIsSymbol && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        b.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(a.clone(), x));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(isMatrixA && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        if(a.rows() === b.rows() && a.cols() === b.cols()) {\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i][j]));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Dimensions do not match!');\r\n                        }\r\n                    }\r\n                    else if(isMatrixA && isVectorB) {\r\n                        if(a.cols() === b.dimensions()) {\r\n                            var M = new Matrix();\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i].clone()));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Unable to divide matrix by vector.');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the ^ operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.pow = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //it has units then it's the Unit module's problem\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.pow(a, b);\r\n                }\r\n                \r\n                // Handle abs\r\n                if(a.group === FN && a.fname === ABS && even(b)) {\r\n                    var m = a.multiplier.clone();\r\n                    var raised = _.pow(a.args[0], b);\r\n                    raised.multiplier = m;\r\n                    return raised;\r\n                }\r\n                \r\n                // Handle infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.isInfinity && b.isInfinity)\r\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\r\n\r\n                    if(a.isConstant() && b.isInfinity) {\r\n                        if(a.equals(0)) {\r\n                            if(b.lessThan(0))\r\n                                throw new UndefinedError('0^Infinity is undefined!');\r\n                            return new Symbol(0);\r\n                        }\r\n                        if(a.equals(1))\r\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\r\n                        //a^-oo\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        //a^oo\r\n                        if(!a.lessThan(0))\r\n                            return Symbol.infinity();\r\n                    }\r\n\r\n                    if(a.isInfinity && b.isConstant()) {\r\n                        if(b.equals(0))\r\n                            throw new UndefinedError(a + '^0 is undefined!');\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\r\n                    }\r\n                }\r\n\r\n                var aIsZero = a.equals(0);\r\n                var bIsZero = b.equals(0);\r\n                if(aIsZero && bIsZero)\r\n                    throw new UndefinedError('0^0 is undefined!');\r\n\r\n                // Return 0 right away if possible\r\n                if(aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\r\n                    return new Symbol(0);\r\n\r\n                if(bIsZero)\r\n                    return new Symbol(1);\r\n\r\n                var bIsConstant = b.isConstant(),\r\n                        aIsConstant = a.isConstant(),\r\n                        bIsInt = b.isInteger(),\r\n                        m = a.multiplier,\r\n                        result = a.clone();\r\n\r\n                // 0^0, 1/0, etc. Complain.\r\n                if(aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\r\n                    throw new UndefinedError('Division by zero is not allowed!');\r\n\r\n                // Compute imaginary numbers right away\r\n                if(Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\r\n                    var k, re, im;\r\n                    k = Math.PI * b;\r\n                    re = new Symbol(Math.cos(k));\r\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\r\n                    return _.add(re, im);\r\n                }\r\n\r\n                // Imaginary number under negative nthroot or to the n\r\n                if(Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\r\n                    var re, im, r, theta, nre, nim, phi;\r\n                    re = a.realpart();\r\n                    im = a.imagpart();\r\n                    if(re.isConstant('all') && im.isConstant('all')) {\r\n                        phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal()).times(b.toString())) : Math.atan2(im, re) * b;\r\n                        theta = new Symbol(phi);\r\n                        r = _.pow(Symbol.hyp(re, im), b);\r\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\r\n                        nim = _.multiply(r, _.trig.sin(theta));\r\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\r\n                    }\r\n                }\r\n\r\n                // Take care of the symbolic part\r\n                result.toUnitMultiplier();\r\n                //simpifly sqrt\r\n                if(result.group === FN && result.fname === SQRT && !bIsConstant) {\r\n                    var s = result.args[0];\r\n                    s.multiplyPower(new Symbol(0.5));\r\n                    s.multiplier.multiply(result.multiplier);\r\n                    s.multiplyPower(b);\r\n                    result = s;\r\n                }\r\n                else {\r\n                    var sign = m.sign();\r\n                    //handle cases such as (-a^3)^(1/4)\r\n                    if(evenFraction(b) && sign < 0) {\r\n                        // Swaperoo\r\n                        // First put the sign back on the symbol\r\n                        result.negate();\r\n                        // Wrap it in brackets\r\n                        result = _.symfunction(PARENTHESIS, [result]);\r\n                        // Move the sign back the exterior and let nerdamer handle the rest\r\n                        result.negate();\r\n                    }\r\n\r\n                    result.multiplyPower(b);\r\n                }\r\n\r\n                if(aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\r\n                    var c;\r\n                    //remove the sign\r\n                    if(sign < 0) {\r\n                        a.negate();\r\n                        if(b.multiplier.den.equals(2))\r\n                            //we know that the numerator has to be odd and therefore it's i\r\n                            c = new Symbol(Settings.IMAGINARY);\r\n                        else if(isInt(b.multiplier)) {\r\n                            if(even(b.multiplier))\r\n                                c = new Symbol(1);\r\n                            else\r\n                                c = new Symbol(-1);\r\n                        }\r\n                        else if(!even(b.multiplier.den)) {\r\n                            c = new Symbol(Math.pow(sign, b.multiplier.num));\r\n                        }\r\n                        else {\r\n                            c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                        }\r\n                    }\r\n\r\n                    result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\r\n\r\n                    //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\r\n                    //put the back sign\r\n                    if(c)\r\n                        result = _.multiply(result, c);\r\n                }\r\n                else if(bIsInt && !m.equals(1)) {\r\n                    var abs_b = b.abs();\r\n                    // Provide fall back to JS until big number implementation is improved\r\n                    if(abs_b.gt(Settings.MAX_EXP)) {\r\n                        if(b.sign() < 0)\r\n                            return new Symbol(0);\r\n                        return Symbol.infinity();\r\n                    }\r\n                    else {\r\n                        var p = b.multiplier.toDecimal();\r\n                        var sgn = Math.sign(p);\r\n                        p = Math.abs(p);\r\n                        var multiplier = new Frac(1);\r\n                        multiplier.num = m.num.pow(p);\r\n                        multiplier.den = m.den.pow(p);\r\n                        if(sgn < 0)\r\n                            multiplier.invert();\r\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\r\n                        result.multiplier = result.multiplier.multiply(multiplier);\r\n                    }\r\n                }\r\n                else {\r\n                    var sign = a.sign();\r\n                    if(b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\r\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\r\n                        if(b.multiplier.den.equals(2)) {\r\n                            var i = new Symbol(Settings.IMAGINARY);\r\n                            a.negate();//remove the sign\r\n                            //if the power is negative then i is negative\r\n                            if(b.lessThan(0)) {\r\n                                i.negate();\r\n                                b.negate();//remove the sign from the power\r\n                            }\r\n                            //pull the power normally and put back the imaginary\r\n                            result = _.multiply(_.pow(a, b), i);\r\n                        }\r\n                        else {\r\n                            var aa = a.clone();\r\n                            aa.multiplier.negate();\r\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\r\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\r\n                            var r = _.divide(_a, _b);\r\n                            result = _.multiply(result, r);\r\n                        }\r\n                    }\r\n                    else if(Settings.PARSE2NUMBER && b.isImaginary()) {\r\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\r\n\r\n                        var re = b.realpart();\r\n                        var im = b.imagpart();\r\n                        /*\r\n                         if(b.group === CP && false) {\r\n                         var ex = _.pow(a.clone(), re);\r\n                         var xi = _.multiply(_.multiply(ex.clone(), trig.sin(im.clone())), Symbol.imaginary());\r\n                         var xa = _.multiply(trig.cos(im), ex);\r\n                         result = _.add(xi, xa);\r\n                         }\r\n                         else {\r\n                         */\r\n                        var aa = a.clone().toLinear();\r\n                        var a1 = _.pow(aa.clone(), re);\r\n                        var log_a = log(aa.clone());\r\n                        var b1 = trig.cos(_.multiply(im.clone(), log_a));\r\n                        var c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\r\n                        result = _.multiply(a1, _.add(b1, c1));\r\n                        result = _.expand(_.parse(result));\r\n                        /*\r\n                         }   \r\n                         */\r\n                    }\r\n                    else {\r\n                        //b is a symbol\r\n                        var neg_num = a.group === N && sign < 0,\r\n                            num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\r\n                            den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\r\n\r\n                        //eliminate imaginary if possible\r\n                        if(a.imaginary) {\r\n                            if(bIsInt) {\r\n                                var s, p, n;\r\n                                s = Math.sign(b);\r\n                                p = abs(b);\r\n                                n = p % 4;\r\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\r\n                                if(n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\r\n                                    result.negate();\r\n                                }\r\n                            }\r\n                            else {\r\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\r\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\r\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\r\n                                        tn = Math.pow(-1, nr.num);\r\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\r\n                            }\r\n                        }\r\n                        //ensure that the sign is carried by the symbol and not the multiplier\r\n                        //this enables us to check down the line if the multiplier can indeed be transferred\r\n                        if(sign < 0 && !neg_num)\r\n                            result.negate();\r\n\r\n                        //retain the absolute value\r\n                        if(bIsConstant && a.group !== EX) {\r\n                            var evenr = even(b.multiplier.den),\r\n                                    evenp = even(a.power),\r\n                                    n = result.power.toDecimal(),\r\n                                    evennp = even(n);\r\n                            if(evenr && evenp && !evennp) {\r\n                                if(n === 1)\r\n                                    result = _.symfunction(ABS, [result]);\r\n                                else if(!isInt(n)) {\r\n                                    var p = result.power;\r\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\r\n                                }\r\n                                else {\r\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\r\n                                            result.clone().setPower(new Frac(n - 1)));\r\n                                }\r\n                                //quick workaround. Revisit\r\n                                if(Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\r\n                                    result = result.args[0];\r\n                            }\r\n                        }\r\n                        //multiply out sqrt\r\n                        if(b.equals(2) && result.group === CB) {\r\n                            var _result = new Symbol(1);\r\n                            result.each(function (sym) {\r\n                                _result = _.multiply(_result, _.pow(sym, b));\r\n                            });\r\n                            result = _result;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = testSQRT(result);\r\n\r\n                // Don't multiply until we've tested the remaining symbol\r\n                if(num && den) {\r\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\r\n                }\r\n\r\n                // Reduce square root\r\n                if(result.fname === SQRT) {\r\n                    var isEX = result.group === EX;\r\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\r\n                    if(even(t)) {\r\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\r\n                                m = result.multiplier;\r\n                        result = _.pow(result.args[0], pt);\r\n                        result.multiplier = result.multiplier.multiply(m);\r\n                    }\r\n                }\r\n                // Detect Euler's identity\r\n                else if(!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\r\n                        && result.power.contains(Settings.IMAGINARY) && b.group === CB) {\r\n                    var theta = b.stripVar(Settings.IMAGINARY);\r\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                if(isVector(a) && bIsSymbol) {\r\n                    a = a.map(function (x) {\r\n                        return _.pow(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(x, b.clone()));\r\n                    });\r\n                    a = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(a.clone(), x));\r\n                    });\r\n                    a = M;\r\n                }\r\n                return a;\r\n            }\r\n        };\r\n        // Gets called when the parser finds the , operator.\r\n        // Commas return a Collector object which is roughly an array\r\n        this.comma = function (a, b) {\r\n            if(!(a instanceof Collection))\r\n                a = Collection.create(a);\r\n            a.append(b);\r\n            return a;\r\n        };\r\n        // Link to modulus\r\n        this.mod = function (a, b) {\r\n            return mod(a, b);\r\n        };\r\n        // Used to slice elements from arrays\r\n        this.slice = function (a, b) {\r\n            return new Slice(a, b);\r\n        };\r\n        // The equality setter\r\n        this.equals = function (a, b) {\r\n            // Equality can only be set for group S so complain it's not\r\n            if(a.group !== S && !a.isLinear())\r\n                err('Cannot set equality for ' + a.toString());\r\n            VARS[a.value] = b.clone();\r\n            return b;\r\n        };\r\n        // Percent\r\n        this.percent = function (a) {\r\n            return _.divide(a, new Symbol(100));\r\n        };\r\n        // Set variable\r\n        this.assign = function (a, b) {\r\n            if(a instanceof Collection && b instanceof Collection) {\r\n                a.elements.map(function (x, i) {\r\n                    return _.assign(x, b.elements[i]);\r\n                });\r\n                return Vector.fromArray(b.elements);\r\n            }\r\n            if(a.parent) {\r\n                // It's referring to the parent instead. The current item can be discarded\r\n                var e = a.parent;\r\n                e.elements[e.getter] = b;\r\n                delete e.getter;\r\n                return e;\r\n            }\r\n\r\n            if(a.group !== S)\r\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\r\n            VARS[a.value] = b;\r\n            return b;\r\n        };\r\n        this.function_assign = function (a, b) {\r\n            var f = a.elements.pop();\r\n            return setFunction(f, a.elements, b);\r\n        };\r\n        // Function to quickly convert bools to Symbols\r\n        var bool2Symbol = function (x) {\r\n            return new Symbol(x === true ? 1 : 0);\r\n        };\r\n        //check for equality\r\n        this.eq = function (a, b) {\r\n            return bool2Symbol(a.equals(b));\r\n        };\r\n        //checks for greater than\r\n        this.gt = function (a, b) {\r\n            return bool2Symbol(a.gt(b));\r\n        };\r\n        //checks for greater than equal\r\n        this.gte = function (a, b) {\r\n            return bool2Symbol(a.gte(b));\r\n        };\r\n        //checks for less than\r\n        this.lt = function (a, b) {\r\n            return bool2Symbol(a.lt(b));\r\n        };\r\n        //checks for less than equal\r\n        this.lte = function (a, b) {\r\n            return bool2Symbol(a.lte(b));\r\n        };\r\n        // wraps the factorial\r\n        this.factorial = function (a) {\r\n            return this.symfunction(FACTORIAL, [a]);\r\n        };\r\n        // wraps the double factorial\r\n        this.dfactorial = function (a) {\r\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\r\n        };\r\n    }\r\n    ;\r\n\r\n    /* \"STATIC\" */\r\n    // converts a number to a fraction.\r\n    var Fraction = {\r\n        /**\r\n         * Converts a decimal to a fraction\r\n         * @param {number} value\r\n         * @param {object} opts\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        convert: function (value, opts) {\r\n            var frac;\r\n            if(value === 0) {\r\n                frac = [0, 1];\r\n            }\r\n            else {\r\n                if(value < 1e-6 || value > 1e20) {\r\n                    var qc = this.quickConversion(Number(value));\r\n                    if(qc[1] <= 1e20) {\r\n                        var abs = Math.abs(value);\r\n                        var sign = value / abs;\r\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\r\n                        frac[0] = frac[0] * sign;\r\n                    }\r\n                    else {\r\n                        frac = qc;\r\n                    }\r\n                }\r\n                else {\r\n                    frac = this.fullConversion(value);\r\n                }\r\n            }\r\n            return frac;\r\n        },\r\n        /**\r\n         * If the fraction is too small or too large this gets called instead of fullConversion method\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        quickConversion: function (value) {\r\n            var stripSign = function (s) {\r\n                // Explicitely convert to a string\r\n                if(typeof s !== 'string') {\r\n                    s = s.toString();\r\n                }\r\n\r\n                var sign = '';\r\n\r\n                // Remove and store the sign\r\n                var start = s.charAt(0);\r\n                if(start === '-') {\r\n                    s = s.substr(1, s.length);\r\n                    sign = '-';\r\n                }\r\n                else if(start === '+') {\r\n                    // Just remove the plus sign\r\n                    s = s.substr(1, s.length);\r\n                }\r\n\r\n                return {\r\n                    sign: sign,\r\n                    value: s\r\n                };\r\n            };\r\n\r\n\r\n            function convert(value) {\r\n                // Explicitely convert to a decimal\r\n                if(Scientific.isScientific(value)) {\r\n                    value = scientificToDecimal(value);\r\n                }\r\n\r\n                // Split the value into the sign and the value\r\n                var nparts = stripSign(value);\r\n\r\n                // Split it at the decimal. We'll refer to it as the coeffient parts\r\n                var cparts = nparts.value.split('.');\r\n\r\n                // Combine the entire number by removing leading zero and adding the decimal part\r\n                // This would be teh same as moving the decimal point to the end\r\n                var num;\r\n                // We're dealing with integers\r\n                if(cparts.length === 1) {\r\n                    num = cparts[0];\r\n                }\r\n                else {\r\n                    num = cparts[0] + cparts[1];\r\n                }\r\n                var n = cparts[1] ? cparts[1].length : 0;\r\n                // Generate the padding for the zeros\r\n                var den = `1${'0'.repeat(n)}`;\r\n\r\n                if(num !== '0') {\r\n                    num = num.replace(/^0+/, '');\r\n                }\r\n                return [nparts.sign + num, den];\r\n            }\r\n\r\n            return convert(value);\r\n        },\r\n        /**\r\n         * Returns a good approximation of a fraction. This method gets called by convert\r\n         * http://mathforum.org/library/drmath/view/61772.html\r\n         * Decimal To Fraction Conversion - A Simpler Version\r\n         * Dr Peterson\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        fullConversion: function (dec) {\r\n            var done = false;\r\n            // you can adjust the epsilon to a larger number if you don't need very high precision\r\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\r\n            while(!done) {\r\n                n++;\r\n                if(n > 10000) {\r\n                    done = true;\r\n                }\r\n                var a = Math.floor(q);\r\n                var num = n1 + a * n2;\r\n                var den = d1 + a * d2;\r\n                var e = (q - a);\r\n                if(e < epsilon) {\r\n                    done = true;\r\n                }\r\n                q = 1 / e;\r\n                n1 = n2;\r\n                d1 = d2;\r\n                n2 = num;\r\n                d2 = den;\r\n                if(Math.abs(num / den - dec) < epsilon || n > 30) {\r\n                    done = true;\r\n                }\r\n            }\r\n            return [num, den];\r\n        }\r\n    };\r\n    //Depends on Fraction\r\n\r\n    //The latex generator\r\n    var LaTeX = {\r\n        parser: (function () {\r\n            // create a parser and strip it from everything except the items that you need\r\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\r\n            var parser = new Parser();\r\n            for(var x in parser) {\r\n                if(keep.indexOf(x) === -1)\r\n                    delete parser[x];\r\n            }\r\n            // declare the operators\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\,',\r\n                action: 'slash_comma',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            // have braces not map to anything. We want them to be return as-is\r\n            var brackets = parser.getBrackets();\r\n            brackets['{'].maps_to = undefined;\r\n            return parser;\r\n        })(),\r\n        space: '~',\r\n        dot: ' \\\\cdot ',\r\n        // grab a list of supported functions but remove the excluded ones found in exclFN\r\n\r\n        latex: function (symbol, option) {\r\n            // it might be an array\r\n            if(symbol.clone) {\r\n                symbol = symbol.clone(); // leave original as-is\r\n            }\r\n            if(symbol instanceof _.classes.Collection)\r\n                symbol = symbol.elements;\r\n\r\n            if(isArray(symbol)) {\r\n                var LaTeXArray = [];\r\n                for(var i = 0; i < symbol.length; i++) {\r\n                    var sym = symbol[i];\r\n                    //This way I can generate LaTeX on an array of strings.\r\n                    if(!isSymbol(sym))\r\n                        sym = _.parse(sym);\r\n                    LaTeXArray.push(this.latex(sym, option));\r\n                }\r\n                return this.brackets(LaTeXArray.join(', '), 'square');\r\n            }\r\n\r\n            else if(isMatrix(symbol)) {\r\n                var TeX = '\\\\begin{pmatrix}\\n';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    var rowTeX = [],\r\n                            e = symbol.elements[i];\r\n                    for(var j = 0; j < e.length; j++) {\r\n                        rowTeX.push(this.latex(e[j], option));\r\n                    }\r\n                    TeX += rowTeX.join(' & ');\r\n                    if(i < symbol.elements.length - 1) {\r\n                        TeX += '\\\\\\\\\\n';\r\n                    }\r\n                }\r\n                TeX += '\\\\end{pmatrix}';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isVector(symbol)) {\r\n                var TeX = '\\\\left[';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\right]';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isSet(symbol)) {\r\n                var TeX = '\\\\{';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\}';\r\n                return TeX;\r\n            }\r\n\r\n            symbol = symbol.clone();\r\n\r\n            var decimal = (option === 'decimal' || option === 'decimals'),\r\n                    power = symbol.power,\r\n                    invert = isNegative(power),\r\n                    negative = symbol.multiplier.lessThan(0);\r\n\r\n            if(symbol.group === P && decimal) {\r\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\r\n            }\r\n            else {\r\n                symbol.multiplier = symbol.multiplier.abs();\r\n\r\n                // if the user wants the result in decimal format then return it as such by placing it at the top part\r\n                var m_array;\r\n\r\n                if(decimal) {\r\n                    var m = String(symbol.multiplier.toDecimal());\r\n                    // if(String(m) === '1' && !decimal) m = '';\r\n                    m_array = [m, ''];\r\n                }\r\n                else {\r\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\r\n                }\r\n                // get the value as a two part array\r\n                var v_array = this.value(symbol, invert, option, negative),\r\n                        p;\r\n                // make it all positive since we know whether to push the power to the numerator or denominator already.\r\n                if(invert)\r\n                    power.negate();\r\n                // the power is simple since it requires no additional formatting. We can get it to a\r\n                // string right away. pass in true to neglect unit powers\r\n                if(decimal) {\r\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\r\n                    if(String(p) === '1')\r\n                        p = '';\r\n                }\r\n                // get the latex representation\r\n                else if(isSymbol(power))\r\n                    p = this.latex(power, option);\r\n                // get it as a fraction\r\n                else\r\n                    p = this.formatFrac(power, true);\r\n                // use this array to specify if the power is getting attached to the top or the bottom\r\n                var p_array = ['', ''],\r\n                        // stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\r\n                        index = invert ? 1 : 0;\r\n                p_array[index] = p;\r\n\r\n                // special case group P and decimal\r\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\r\n\r\n                return retval.replace(/\\+\\-/gi, '-');\r\n            }\r\n\r\n        },\r\n        // greek mapping\r\n        greek: {\r\n            alpha: '\\\\alpha',\r\n            beta: '\\\\beta',\r\n            gamma: '\\\\gamma',\r\n            delta: '\\\\delta',\r\n            epsilon: '\\\\epsilon',\r\n            zeta: '\\\\zeta',\r\n            eta: '\\\\eta',\r\n            theta: '\\\\theta',\r\n            iota: '\\\\iota',\r\n            kappa: '\\\\kappa',\r\n            lambda: '\\\\lambda',\r\n            mu: '\\\\mu',\r\n            nu: '\\\\nu',\r\n            xi: '\\\\xi',\r\n            omnikron: '\\\\omnikron',\r\n            pi: '\\\\pi',\r\n            rho: '\\\\rho',\r\n            sigma: '\\\\sigma',\r\n            tau: '\\\\tau',\r\n            upsilon: '\\\\upsilon',\r\n            phi: '\\\\phi',\r\n            chi: '\\\\chi',\r\n            psi: '\\\\psi',\r\n            omega: '\\\\omega',\r\n            Gamma: '\\\\Gamma',\r\n            Delta: '\\\\Delta',\r\n            Epsilon: '\\\\Epsilon',\r\n            Theta: '\\\\Theta',\r\n            Lambda: '\\\\Lambda',\r\n            Xi: '\\\\Xi',\r\n            Pi: '\\\\Pi',\r\n            Sigma: '\\\\Sigma',\r\n            Phi: '\\\\Phi',\r\n            Psi: '\\\\Psi',\r\n            Omega: '\\\\Omega'\r\n        },\r\n        symbols: {\r\n            arccos: '\\\\arccos',\r\n            cos: '\\\\cos',\r\n            csc: '\\\\csc',\r\n            exp: '\\\\exp',\r\n            ker: '\\\\ker',\r\n            limsup: '\\\\limsup',\r\n            min: '\\\\min',\r\n            sinh: '\\\\sinh',\r\n            arcsin: '\\\\arcsin',\r\n            cosh: '\\\\cosh',\r\n            deg: '\\\\deg',\r\n            gcd: '\\\\gcd',\r\n            lg: '\\\\lg',\r\n            ln: '\\\\ln',\r\n            Pr: '\\\\Pr',\r\n            sqrt: '\\\\sqrt',\r\n            sup: '\\\\sup',\r\n            arctan: '\\\\arctan',\r\n            cot: '\\\\cot',\r\n            det: '\\\\det',\r\n            hom: '\\\\hom',\r\n            lim: '\\\\lim',\r\n            log: '\\\\log',\r\n            LN: '\\\\LN',\r\n            sec: '\\\\sec',\r\n            tan: '\\\\tan',\r\n            arg: '\\\\arg',\r\n            coth: '\\\\coth',\r\n            dim: '\\\\dim',\r\n            inf: '\\\\inf',\r\n            liminf: '\\\\liminf',\r\n            max: '\\\\max',\r\n            sin: '\\\\sin',\r\n            tanh: '\\\\tanh'\r\n        },\r\n        // get the raw value of the symbol as an array\r\n        value: function (symbol, inverted, option, negative) {\r\n            var group = symbol.group,\r\n                    previousGroup = symbol.previousGroup,\r\n                    v = ['', ''],\r\n                    index = inverted ? 1 : 0;\r\n            /*if(group === N) // do nothing since we want to return top & bottom blank; */\r\n            if(symbol.isInfinity) {\r\n                v[index] = '\\\\infty';\r\n            }\r\n            else if(group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\r\n                var value = this.formatSubscripts(symbol.value);\r\n                if(value.replace)\r\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\r\n                // split it so we can check for instances of alpha as well as alpha_b\r\n                var t_varray = String(value).split('_');\r\n                var greek = this.greek[t_varray[0]];\r\n                if(greek) {\r\n                    t_varray[0] = greek;\r\n                    value = t_varray.join('_');\r\n                }\r\n                var symbol = this.symbols[t_varray[0]];\r\n                if(symbol) {\r\n                    t_varray[0] = symbol;\r\n                    value = t_varray.join('_');\r\n                }\r\n                v[index] = value;\r\n            }\r\n            else if(group === FN || previousGroup === FN) {\r\n                var name,\r\n                        input = [],\r\n                        fname = symbol.fname;\r\n                // collect the arguments\r\n                for(var i = 0; i < symbol.args.length; i++) {\r\n                    var arg = symbol.args[i], item;\r\n                    if(typeof arg === 'string')\r\n                        item = arg;\r\n                    else {\r\n                        item = this.latex(arg, option);\r\n                    }\r\n                    input.push(item);\r\n                }\r\n\r\n                if(fname === SQRT) {\r\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\r\n                }\r\n                else if(fname === ABS) {\r\n                    v[index] = this.brackets(input.join(','), 'abs');\r\n                }\r\n                else if(fname === PARENTHESIS) {\r\n                    v[index] = this.brackets(input.join(','), 'parens');\r\n                }\r\n                else if(fname === 'limit') {\r\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\r\n                }\r\n                else if(fname === 'integrate') {\r\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\r\n                }\r\n                else if(fname === 'defint') {\r\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\r\n                }\r\n                else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\r\n                        input[0] = this.brackets(input[0]);\r\n                    }\r\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\r\n                }\r\n                else if(fname === 'floor') {\r\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\r\n                }\r\n                else if(fname === 'ceil') {\r\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG && input.length > 1) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG10) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'sum') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'product') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'nthroot') {\r\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\r\n                }\r\n                else if(fname === 'mod') {\r\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\r\n                }\r\n                else if(fname === 'realpart') {\r\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'imagpart') {\r\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\r\n                }\r\n                else {\r\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\r\n                    if(symbol.isConversion)\r\n                        v[index] = name + this.brackets(input.join(''), 'parens');\r\n                    else\r\n                        v[index] = name + this.brackets(input.join(','), 'parens');\r\n                }\r\n            }\r\n            else if(symbol.isComposite()) {\r\n                var collected = symbol.collectSymbols().sort(\r\n                        group === CP || previousGroup === CP ?\r\n                        function (a, b) {\r\n                            return b.group - a.group;\r\n                        } :\r\n                        function (a, b) {\r\n                            var x = isSymbol(a.power) ? -1 : a.power;\r\n                            var y = isSymbol(b.power) ? -1 : b.power;\r\n                            return y - x;\r\n                        }\r\n                ),\r\n                        symbols = [],\r\n                        l = collected.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    symbols.push(LaTeX.latex(collected[i], option));\r\n                }\r\n                var value = symbols.join('+');\r\n\r\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\r\n            }\r\n            else if(group === CB || previousGroup === EX || previousGroup === CB) {\r\n                if(group === CB)\r\n                    symbol.distributeExponent();\r\n                // This almost feels a little like cheating but I need to know if I should be wrapping the symbol\r\n                // in brackets or not. We'll do this by checking the value of the numerator and then comparing it\r\n                // to whether the symbol value is \"simple\" or not.\r\n                var denominator = [],\r\n                        numerator = [];\r\n                // Generate a profile\r\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\r\n                var setBrackets = function (container, map, counter) {\r\n                    if(counter > 1 && map.length > 0) {\r\n                        var l = map.length;\r\n                        for(var i = 0; i < l; i++) {\r\n                            var idx = map[i], item = container[idx];\r\n                            if(!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\r\n                                container[idx] = LaTeX.brackets(item, 'parens');\r\n                            }\r\n                        }\r\n                    }\r\n                    return container;\r\n                };\r\n\r\n                // Generate latex for each of them\r\n                symbol.each(function (x) {\r\n                    var isDenom = isNegative(x.power),\r\n                            laTex;\r\n\r\n                    if(isDenom) {\r\n                        laTex = LaTeX.latex(x.invert(), option);\r\n                        den_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            den_map.push(denominator.length); // make a note of where the composite was found\r\n                        }\r\n\r\n                        denominator.push(laTex);\r\n                    }\r\n                    else {\r\n                        laTex = LaTeX.latex(x, option);\r\n                        num_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            num_map.push(numerator.length);   // make a note of where the composite was found\r\n                        }\r\n                        numerator.push(laTex);\r\n                    }\r\n                });\r\n\r\n                // Apply brackets\r\n                setBrackets(numerator, num_map, num_c);\r\n                v[0] = numerator.join(this.dot); // collapse the numerator into one string\r\n\r\n                setBrackets(denominator, den_map, den_c);\r\n                v[1] = denominator.join(this.dot);\r\n            }\r\n\r\n            return v;\r\n        },\r\n        set: function (m, v, p, combine_power) {\r\n            var isBracketed = function (v) {\r\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\r\n            };\r\n            // format the power if it exists\r\n            if(p)\r\n                p = this.formatP(p);\r\n            // group CB will have to be wrapped since the power applies to both it's numerator and denominator\r\n            if(combine_power) {\r\n                // POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\r\n                // the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\r\n                // of a case where this isn't true\r\n                var tp = p[0];\r\n                p[0] = ''; // temporarily make p blank\r\n            }\r\n\r\n            // merge v and p. Not that v MUST be first since the order matters\r\n            v = this.merge(v, p);\r\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\r\n            // filters\r\n            // if the top has a variable but the numerator is one drop it\r\n            if(vn && Number(mn) === 1)\r\n                mn = '';\r\n            // if denominator is 1 drop it always\r\n            if(Number(md) === 1)\r\n                md = '';\r\n            // prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\r\n\r\n            // prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\r\n            // format the power if it exists\r\n            // make it a fraction if both top and bottom exists\r\n            if(top && bottom) {\r\n                var frac = this.frac(top, bottom);\r\n                if(combine_power && tp)\r\n                    frac = this.brackets(frac) + tp;\r\n                return frac;\r\n            }\r\n            // otherwise only the top exists so return that\r\n            else\r\n                return top;\r\n        },\r\n        merge: function (a, b) {\r\n            var r = [];\r\n            for(var i = 0; i < 2; i++)\r\n                r[i] = a[i] + b[i];\r\n            return r;\r\n        },\r\n        // joins together two strings if both exist\r\n        join: function (n, d, glue) {\r\n            if(!n && !d)\r\n                return '';\r\n            if(n && !d)\r\n                return n;\r\n            if(d && !n)\r\n                return d;\r\n            return n + glue + d;\r\n        },\r\n        /**\r\n         * Places subscripts in braces for proper formatting\r\n         * @param {String} v\r\n         * @returns {String}\r\n         */\r\n        formatSubscripts: function (v) {\r\n            // Split it at the underscore\r\n            var arr = v.toString().split('_');\r\n\r\n            var name = '';\r\n\r\n            // Loop over all entries except the first one\r\n            while(arr.length > 1) {\r\n                // Wrap all in braces except for the last one\r\n                if(arr.length > 0) {\r\n                    name = '_' + this.braces(arr.pop() + name);\r\n                }\r\n            }\r\n\r\n            return arr[0] + name;\r\n        },\r\n        formatP: function (p_array) {\r\n            for(var i = 0; i < 2; i++) {\r\n                var p = p_array[i];\r\n                if(p)\r\n                    p_array[i] = '^' + this.braces(p);\r\n            }\r\n            return p_array;\r\n        },\r\n        /**\r\n         * formats the fractions accordingly.\r\n         * @param {Frac} f\r\n         * @param {bool} is_pow\r\n         */\r\n        formatFrac: function (f, is_pow) {\r\n            var n = f.num.toString(),\r\n                    d = f.den.toString();\r\n            // no need to have x^1\r\n            if(is_pow && n === '1' && d === '1')\r\n                return '';\r\n            // no need to have x/1\r\n            if(d === '1')\r\n                return n;\r\n            return this.frac(n, d);\r\n        },\r\n        frac: function (n, d) {\r\n            return '\\\\frac' + this.braces(n) + this.braces(d);\r\n        },\r\n        braces: function (e) {\r\n            return '{' + e + '}';\r\n        },\r\n        brackets: function (e, typ) {\r\n            typ = typ || 'parens';\r\n            var bracketTypes = {\r\n                parens: ['(', ')'],\r\n                square: ['[', ']'],\r\n                brace: ['{', '}'],\r\n                abs: ['|', '|'],\r\n                angle: ['\\\\langle', '\\\\rangle']\r\n            };\r\n            var bracket = bracketTypes[typ];\r\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\r\n        },\r\n        /**\r\n         * Removes extreneous tokens\r\n         * @param {Tokens[]} tokens\r\n         * @returns {Tokens[]}\r\n         */\r\n        filterTokens: function (tokens) {\r\n            var filtered = [];\r\n\r\n            // Copy over the type of the scope\r\n            if(isArray(tokens)) {\r\n                filtered.type = tokens.type;\r\n            }\r\n\r\n            // the items that need to be disposed\r\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\r\n            for(var i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                var next_token = tokens[i + 1];\r\n                if(token.value === '\\\\' && next_token.value === '\\\\') {\r\n                    filtered.push(token);\r\n                }\r\n                else if(isArray(token)) {\r\n                    filtered.push(LaTeX.filterTokens(token));\r\n                }\r\n                else if(d.indexOf(token.value) === -1) {\r\n                    filtered.push(token);\r\n                }\r\n            }\r\n            return filtered;\r\n        },\r\n        /*\r\n         * Parses tokens from LaTeX string. Does not do any error checking\r\n         * @param {Tokens[]} rpn\r\n         * @returns {String}\r\n         */\r\n        parse: function (raw_tokens) {\r\n            var i, l;\r\n            var retval = '';\r\n            var tokens = this.filterTokens(raw_tokens);\r\n            var replace = {\r\n                'cdot': '',\r\n                'times': '',\r\n                'infty': 'Infinity'\r\n            };\r\n            // get the next token\r\n            var next = function (n) {\r\n                return tokens[(typeof n === 'undefined' ? ++i : i += n)];\r\n            };\r\n            var parse_next = function () {\r\n                return LaTeX.parse(next());\r\n            };\r\n            var get = function (token) {\r\n                if(token in replace) {\r\n                    return replace[token];\r\n                }\r\n                // A quirk with implicit multiplication forces us to check for *\r\n                if(token === '*' && tokens[i + 1].value === '&') {\r\n                    next(2); // skip this and the &\r\n                    return ',';\r\n                }\r\n\r\n                if(token === '&') {\r\n                    next();\r\n                    return ','; // Skip the *\r\n                }\r\n                // If it's the end of a row, return the row separator\r\n                if(token === '\\\\') {\r\n                    return '],[';\r\n                }\r\n                return token;\r\n            };\r\n\r\n            // start parsing the tokens\r\n            for(i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                // fractions\r\n                if(token.value === 'frac') {\r\n                    // parse and wrap it in brackets\r\n                    var n = parse_next();\r\n                    var d = parse_next();\r\n                    retval += n + '/' + d;\r\n                }\r\n                else if(token.value in LaTeX.symbols) {\r\n                    if(token.value === SQRT && tokens[i + 1].type === 'vector' && tokens[i + 2].type === 'Set') {\r\n                        var base = parse_next();\r\n                        var expr = parse_next();\r\n                        retval += (expr + '^' + inBrackets('1/' + base));\r\n                    }\r\n                    else {\r\n                        retval += token.value + parse_next();\r\n                    }\r\n                }\r\n                else if(token.value === 'int') {\r\n                    var f = parse_next();\r\n                    // skip the comma\r\n                    i++;\r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    dx = get(dx.substring(1, dx.length));\r\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\r\n                }\r\n                else if(token.value === 'int_') {\r\n                    var l = parse_next(); // lower\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value && token.value.startsWith('int_')) {\r\n                    // var l = parse_next(); // lower\r\n                    var l = token.value.replace('int_', '')\r\n                    console.log('uppernow')\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value === 'mathrm') {\r\n                    var f = tokens[++i][0].value;\r\n                    retval += f + parse_next();\r\n                }\r\n                // sum and product\r\n                else if(token.value === 'sum_' || token.value === 'prod_') {\r\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\r\n                    var nxt = next();\r\n                    i++; // skip the caret\r\n                    var end = parse_next();\r\n                    var f = parse_next();\r\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\r\n                }\r\n                else if(token.value === 'lim_') {\r\n                    var nxt = next();\r\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\r\n                }\r\n                else if(token.value === 'begin') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // Start a matrix\r\n                            retval += 'matrix([';\r\n                        }\r\n                    }\r\n                }\r\n                else if(token.value === 'end') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // End a matrix\r\n                            retval += '])';\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(Array.isArray(token)) {\r\n                        retval += get(LaTeX.parse(token));\r\n                    }\r\n                    else {\r\n                        retval += get(token.value.toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n            return inBrackets(retval);\r\n        }\r\n    };\r\n//Vector =======================================================================\r\n    function Vector(v) {\r\n        if(isVector(v))\r\n            this.elements = v.items.slice(0);\r\n        else if(isArray(v))\r\n            this.elements = v.slice(0);\r\n        else\r\n            this.elements = [].slice.call(arguments);\r\n    }\r\n    /*\r\n     * Generates a pre-filled array\r\n     * @param {type} n\r\n     * @param {type} val\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.arrayPrefill = function (n, val) {\r\n        var a = [];\r\n        val = val || 0;\r\n        for(var i = 0; i < n; i++)\r\n            a[i] = val;\r\n        return a;\r\n    };\r\n    /**\r\n     * Generate a vector from and array\r\n     * @param {type} a\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.fromArray = function (a) {\r\n        var v = new Vector();\r\n        v.elements = a;\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Convert a Set to a Vector\r\n     * @param {Set} set\r\n     * @returns {Vector}\r\n     */\r\n    Vector.fromSet = function (set) {\r\n        return Vector.fromArray(set.elements);\r\n    };\r\n\r\n    //Ported from Sylvester.js\r\n    Vector.prototype = {\r\n        custom: true,\r\n        // Returns element i of the vector\r\n        e: function (i) {\r\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\r\n        },\r\n\r\n        set: function (i, val) {\r\n            if(!isSymbol(val))\r\n                val = new Symbol(val);\r\n            this.elements[i] = val;\r\n        },\r\n\r\n        // Returns the number of elements the vector has\r\n        dimensions: function () {\r\n            return this.elements.length;\r\n        },\r\n\r\n        // Returns the modulus ('length') of the vector\r\n        modulus: function () {\r\n            return block('SAFE', function () {\r\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is equal to the argument\r\n        eql: function (vector) {\r\n            var n = this.elements.length;\r\n            var V = vector.elements || vector;\r\n            if(n !== V.length) {\r\n                return false;\r\n            }\r\n            do {\r\n                if(Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\r\n                    return false;\r\n                }\r\n            }\r\n            while(--n);\r\n            return true;\r\n        },\r\n\r\n        // Returns a clone of the vector\r\n        clone: function () {\r\n            var V = new Vector(),\r\n                    l = this.elements.length;\r\n            for(var i = 0; i < l; i++) {\r\n                //Rule: all items within the vector must have a clone method.\r\n                V.elements.push(this.elements[i].clone());\r\n            }\r\n            if(this.getter) {\r\n                V.getter = this.getter.clone();\r\n            }\r\n            return V;\r\n        },\r\n\r\n        // Maps the vector to another vector according to the given function\r\n        map: function (fn) {\r\n            var elements = [];\r\n            this.each(function (x, i) {\r\n                elements.push(fn(x, i));\r\n            });\r\n\r\n            return new Vector(elements);\r\n        },\r\n\r\n        // Calls the iterator for each element of the vector in turn\r\n        each: function (fn) {\r\n            var n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                fn(this.elements[i], i + 1);\r\n            }\r\n            while(--n);\r\n        },\r\n\r\n        // Returns a new vector created by normalizing the receiver\r\n        toUnitVector: function () {\r\n            return block('SAFE', function () {\r\n                var r = this.modulus();\r\n                if(r.valueOf() === 0) {\r\n                    return this.clone();\r\n                }\r\n                return this.map(function (x) {\r\n                    return _.divide(x, r);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the angle between the vector and the argument (also a vector)\r\n        angleFrom: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\r\n                // Work things out in parallel to save time\r\n                this.each(function (x, i) {\r\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\r\n                    mod1 = _.add(mod1, _.multiply(x, x));// will not conflict in safe block\r\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));// will not conflict in safe block\r\n                });\r\n                mod1 = _.pow(mod1, new Symbol(0.5));\r\n                mod2 = _.pow(mod2, new Symbol(0.5));\r\n                var product = _.multiply(mod1, mod2);\r\n                if(product.valueOf() === 0) {\r\n                    return null;\r\n                }\r\n                var theta = _.divide(dot, product);\r\n                var theta_val = theta.valueOf();\r\n                if(theta_val < -1) {\r\n                    theta = -1;\r\n                }\r\n                if(theta_val > 1) {\r\n                    theta = 1;\r\n                }\r\n                return new Symbol(Math.acos(theta));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is parallel to the argument\r\n        isParallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (angle <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is antiparallel to the argument\r\n        isAntiparallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is perpendicular to the argument\r\n        isPerpendicularTo: function (vector) {\r\n            var dot = this.dot(vector);\r\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\r\n        },\r\n\r\n        // Returns the result of adding the argument to the vector\r\n        add: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.add(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of subtracting the argument from the vector\r\n        subtract: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.subtract(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of multiplying the elements of the vector by the argument\r\n        multiply: function (k) {\r\n            return this.map(function (x) {\r\n                return x.clone() * k.clone();\r\n            });\r\n        },\r\n\r\n        x: function (k) {\r\n            return this.multiply(k);\r\n        },\r\n\r\n        // Returns the scalar product of the vector with the argument\r\n        // Both vectors must have equal dimensionality\r\n        dot: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var product = new Symbol(0), n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                do {\r\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\r\n                }\r\n                while(--n);\r\n                return product;\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the vector product of the vector with the argument\r\n        // Both vectors must have dimensionality 3\r\n        cross: function (vector) {\r\n            var B = vector.elements || vector;\r\n            if(this.elements.length !== 3 || B.length !== 3) {\r\n                return null;\r\n            }\r\n            var A = this.elements;\r\n            return block('SAFE', function () {\r\n                return new Vector([\r\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\r\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\r\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\r\n                ]);\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the (absolute) largest element of the vector\r\n        max: function () {\r\n            var m = 0, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\r\n                    m = this.elements[i];\r\n                }\r\n            }\r\n            while(--n);\r\n            return m;\r\n        },\r\n        magnitude: function () {\r\n            var magnitude = new Symbol(0);\r\n            this.each(function (e) {\r\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\r\n            });\r\n            return _.sqrt(magnitude);\r\n        },\r\n        // Returns the index of the first match found\r\n        indexOf: function (x) {\r\n            var index = null, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(index === null && this.elements[i].valueOf() === x.valueOf()) {\r\n                    index = i + 1;\r\n                }\r\n            }\r\n            while(--n);\r\n            return index;\r\n        },\r\n        text: function (x) {\r\n            return text(this);\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        },\r\n        latex: function (option) {\r\n            var tex = [];\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\r\n            }\r\n            return '[' + tex.join(', ') + ']';\r\n        }\r\n    };\r\n\r\n//Matrix =======================================================================\r\n    function Matrix() {\r\n        var m = arguments,\r\n                l = m.length, i, el = [];\r\n        if(isMatrix(m)) { // if it's a matrix then make a clone\r\n            for(i = 0; i < l; i++) {\r\n                el.push(m[i].slice(0));\r\n            }\r\n        }\r\n        else {\r\n            var row, lw, rl;\r\n            for(i = 0; i < l; i++) {\r\n                row = m[i];\r\n                if(isVector(row))\r\n                    row = row.elements;\r\n                if(!isArray(row))\r\n                    row = [row];\r\n                rl = row.length;\r\n                if(lw && lw !== rl)\r\n                    err('Unable to create Matrix. Row dimensions do not match!');\r\n                el.push(row);\r\n                lw = rl;\r\n            }\r\n        }\r\n        this.elements = el;\r\n    }\r\n    Matrix.identity = function (n) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < n; i++) {\r\n            m.elements.push([]);\r\n            for(var j = 0; j < n; j++) {\r\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Matrix.apply(this, args);\r\n        }\r\n        F.prototype = Matrix.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n    Matrix.zeroMatrix = function (rows, cols) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < rows; i++) {\r\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.prototype = {\r\n        // needs be true to let the parser know not to try to cast it to a symbol\r\n        custom: true,\r\n        get: function (row, column) {\r\n            if(!this.elements[row])\r\n                return undefined;\r\n            return this.elements[row][column];\r\n        },\r\n        map: function (f, raw_values) {\r\n            var M = new Matrix();\r\n            this.each(function (e, i, j) {\r\n                M.set(i, j, f.call(M, e), raw_values);\r\n            });\r\n            return M;\r\n        },\r\n        set: function (row, column, value, raw) {\r\n            if(!this.elements[row])\r\n                this.elements[row] = [];\r\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\r\n        },\r\n        cols: function () {\r\n            return this.elements[0].length;\r\n        },\r\n        rows: function () {\r\n            return this.elements.length;\r\n        },\r\n        row: function (n) {\r\n            if(!n || n > this.cols())\r\n                return [];\r\n            return this.elements[n - 1];\r\n        },\r\n        col: function (n) {\r\n            var nr = this.rows(),\r\n                    col = [];\r\n            if(n > this.cols() || !n)\r\n                return col;\r\n            for(var i = 0; i < nr; i++) {\r\n                col.push(this.elements[i][n - 1]);\r\n            }\r\n            return col;\r\n        },\r\n        eachElement: function (fn) {\r\n            var nr = this.rows(),\r\n                    nc = this.cols(), i, j;\r\n            for(i = 0; i < nr; i++) {\r\n                for(j = 0; j < nc; j++) {\r\n                    fn.call(this, this.elements[i][j], i, j);\r\n                }\r\n            }\r\n        },\r\n        // ported from Sylvester.js\r\n        determinant: function () {\r\n            if(!this.isSquare()) {\r\n                return null;\r\n            }\r\n            var M = this.toRightTriangular();\r\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n            do {\r\n                i = k - n + 1;\r\n                det = _.multiply(det, M.elements[i][i]);\r\n            }\r\n            while(--n);\r\n            return det;\r\n        },\r\n        isSquare: function () {\r\n            return this.elements.length === this.elements[0].length;\r\n        },\r\n        isSingular: function () {\r\n            return this.isSquare() && this.determinant() === 0;\r\n        },\r\n        augment: function (m) {\r\n            var r = this.rows(), rr = m.rows();\r\n            if(r !== rr)\r\n                err(\"Cannot augment matrix. Rows don't match.\");\r\n            for(var i = 0; i < r; i++) {\r\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var r = this.rows(), c = this.cols(),\r\n                    m = new Matrix();\r\n            for(var i = 0; i < r; i++) {\r\n                m.elements[i] = [];\r\n                for(var j = 0; j < c; j++) {\r\n                    var symbol = this.elements[i][j];\r\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\r\n                }\r\n            }\r\n            return m;\r\n        },\r\n        // ported from Sylvester.js\r\n        invert: function () {\r\n            if(!this.isSquare())\r\n                err('Matrix is not square!');\r\n            return block('SAFE', function () {\r\n                var ni = this.elements.length, ki = ni, i, j;\r\n                var imatrix = Matrix.identity(ni);\r\n                var M = this.augment(imatrix).toRightTriangular();\r\n                var np, kp = M.elements[0].length, p, els, divisor;\r\n                var inverse_elements = [], new_element;\r\n                // Matrix is non-singular so there will be no zeros on the diagonal\r\n                // Cycle through rows from last to first\r\n                do {\r\n                    i = ni - 1;\r\n                    // First, normalise diagonal elements to 1\r\n                    els = [];\r\n                    np = kp;\r\n                    inverse_elements[i] = [];\r\n                    divisor = M.elements[i][i];\r\n                    do {\r\n                        p = kp - np;\r\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\r\n                        els.push(new_element);\r\n                        // Shuffle of the current row of the right hand side into the results\r\n                        // array as it will not be modified by later runs through this loop\r\n                        if(p >= ki) {\r\n                            inverse_elements[i].push(new_element);\r\n                        }\r\n                    }\r\n                    while(--np);\r\n                    M.elements[i] = els;\r\n                    // Then, subtract this row from those above it to\r\n                    // give the identity matrix on the left hand side\r\n                    for(j = 0; j < i; j++) {\r\n                        els = [];\r\n                        np = kp;\r\n                        do {\r\n                            p = kp - np;\r\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\r\n                        }\r\n                        while(--np);\r\n                        M.elements[j] = els;\r\n                    }\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(inverse_elements);\r\n            }, undefined, this);\r\n        },\r\n        // ported from Sylvester.js\r\n        toRightTriangular: function () {\r\n            return block('SAFE', function () {\r\n                var M = this.clone(), els, fel, nel,\r\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n                do {\r\n                    i = k - n;\r\n                    fel = M.elements[i][i];\r\n                    if(fel.valueOf() === 0) {\r\n                        for(var j = i + 1; j < k; j++) {\r\n                            nel = M.elements[j][i];\r\n                            if(nel && nel.valueOf() !== 0) {\r\n                                els = [];\r\n                                np = kp;\r\n                                do {\r\n                                    p = kp - np;\r\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\r\n                                }\r\n                                while(--np);\r\n                                M.elements[i] = els;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var fel = M.elements[i][i];\r\n                    if(fel.valueOf() !== 0) {\r\n                        for(j = i + 1; j < k; j++) {\r\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\r\n                            els = [];\r\n                            np = kp;\r\n                            do {\r\n                                p = kp - np;\r\n                                // Elements with column numbers up to an including the number\r\n                                // of the row that we're subtracting can safely be set straight to\r\n                                // zero, since that's the point of this routine and it avoids having\r\n                                // to loop over and correct rounding errors later\r\n                                els.push(p <= i ? new Symbol(0) :\r\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\r\n                            }\r\n                            while(--np);\r\n                            M.elements[j] = els;\r\n                        }\r\n                    }\r\n                }\r\n                while(--n);\r\n\r\n                return M;\r\n            }, undefined, this);\r\n        },\r\n        transpose: function () {\r\n            var rows = this.elements.length, cols = this.elements[0].length;\r\n            var M = new Matrix(), ni = cols, i, nj, j;\r\n\r\n            do {\r\n                i = cols - ni;\r\n                M.elements[i] = [];\r\n                nj = rows;\r\n                do {\r\n                    j = rows - nj;\r\n                    M.elements[i][j] = this.elements[j][i].clone();\r\n                }\r\n                while(--nj);\r\n            }\r\n            while(--ni);\r\n            return M;\r\n        },\r\n        // Returns true if the matrix can multiply the argument from the left\r\n        canMultiplyFromLeft: function (matrix) {\r\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\r\n            // this.columns should equal matrix.rows\r\n            return (this.elements[0].length === l);\r\n        },\r\n        sameSize: function (matrix) {\r\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\r\n        },\r\n        multiply: function (matrix) {\r\n            return block('SAFE', function () {\r\n                var M = matrix.elements || matrix;\r\n                if(!this.canMultiplyFromLeft(M)) {\r\n                    if(this.sameSize(matrix)) {\r\n                        var MM = new Matrix();\r\n                        var rows = this.rows();\r\n                        for(var i = 0; i < rows; i++) {\r\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\r\n                            MM.elements[i] = e.elements;\r\n                        }\r\n                        return MM;\r\n                    }\r\n                    return null;\r\n                }\r\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n                do {\r\n                    i = ki - ni;\r\n                    elements[i] = [];\r\n                    nj = kj;\r\n                    do {\r\n                        j = kj - nj;\r\n                        sum = new Symbol(0);\r\n                        nc = cols;\r\n                        do {\r\n                            c = cols - nc;\r\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\r\n                        }\r\n                        while(--nc);\r\n                        elements[i][j] = sum;\r\n                    }\r\n                    while(--nj);\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(elements);\r\n            }, undefined, this);\r\n        },\r\n        add: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        subtract: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        negate: function () {\r\n            this.each(function (e) {\r\n                return e.negate();\r\n            });\r\n            return this;\r\n        },\r\n        toVector: function () {\r\n            if(this.rows() === 1 || this.cols() === 1) {\r\n                var v = new Vector();\r\n                v.elements = this.elements;\r\n                return v;\r\n            }\r\n            return this;\r\n        },\r\n        toString: function (newline, to_decimal) {\r\n            var l = this.rows(),\r\n                    s = [];\r\n            newline = newline === undefined ? '\\n' : newline;\r\n            for(var i = 0; i < l; i++) {\r\n                s.push('[' + this.elements[i].map(function (x) {\r\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\r\n                    return x !== undefined ? v : '';\r\n                }).join(',') + ']');\r\n            }\r\n            return 'matrix' + inBrackets(s.join(','));\r\n        },\r\n        text: function () {\r\n            return 'matrix(' + this.elements.toString('') + ')';\r\n        },\r\n        latex: function (option) {\r\n            var cols = this.cols(), elements = this.elements;\r\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\r\n                var tex = [];\r\n                for(var row in elements) {\r\n                    var row_tex = [];\r\n                    for(var i = 0; i < cols; i++) {\r\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\r\n                    }\r\n                    tex.push(row_tex.join(' & '));\r\n                }\r\n                return tex.join(' \\\\cr ');\r\n            });\r\n        }\r\n    };\r\n    // aliases\r\n    Matrix.prototype.each = Matrix.prototype.eachElement;\r\n\r\n\r\n    function Set(set) {\r\n        this.elements = [];\r\n        // if the first object isn't an array, convert it to one.\r\n        if(!isVector(set))\r\n            set = Vector.fromArray(arguments);\r\n\r\n        if(set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                this.add(elements[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    Set.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Set.apply(this, args);\r\n        }\r\n        F.prototype = Set.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n\r\n    Set.prototype = {\r\n        add: function (x) {\r\n            if(!this.contains(x))\r\n                this.elements.push(x.clone());\r\n        },\r\n        contains: function (x) {\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                var e = this.elements[i];\r\n                if(x.equals(e))\r\n                    return true;\r\n            }\r\n            return false;\r\n        },\r\n        each: function (f) {\r\n            var elements = this.elements;\r\n            var set = new Set();\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                var e = elements[i];\r\n                f.call(this, e, set, i);\r\n            }\r\n            return set;\r\n        },\r\n        clone: function () {\r\n            var set = new Set();\r\n            this.each(function (e) {\r\n                set.add(e.clone());\r\n            });\r\n            return set;\r\n        },\r\n        union: function (set) {\r\n            var _union = this.clone();\r\n            set.each(function (e) {\r\n                _union.add(e);\r\n            });\r\n\r\n            return _union;\r\n        },\r\n        difference: function (set) {\r\n            var diff = this.clone();\r\n            set.each(function (e) {\r\n                diff.remove(e);\r\n            });\r\n            return diff;\r\n        },\r\n        remove: function (element) {\r\n            for(var i = 0, l = this.elements.length; i < l; i++) {\r\n                var e = this.elements[i];\r\n                if(e.equals(element)) {\r\n                    remove(this.elements, i);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        intersection: function (set) {\r\n            var _intersection = new Set();\r\n            var A = this;\r\n            set.each(function (e) {\r\n                if(A.contains(e)) {\r\n                    _intersection.add(e);\r\n                }\r\n                ;\r\n            });\r\n\r\n            return _intersection;\r\n        },\r\n        intersects: function (set) {\r\n            return this.intersection(set).elements.length > 0;\r\n        },\r\n        is_subset: function (set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                if(!this.contains(elements[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        toString: function () {\r\n            return '{' + this.elements.join(',') + '}';\r\n        }\r\n    };\r\n\r\n//build ========================================================================\r\n    var Build = {\r\n        dependencies: {\r\n            _rename: {\r\n                'Math2.factorial': 'factorial'\r\n            },\r\n            factorial: {\r\n                'Math2.gamma': Math2.gamma\r\n            },\r\n            gamma_incomplete: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Li: {\r\n                'Math2.Ei': Math2.Ei,\r\n                'Math2.bigLog': Math2.bigLog,\r\n                'Frac': Frac\r\n            },\r\n            Ci: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Ei: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Si: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Shi: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Chi: {\r\n                'isInt': isInt,\r\n                'nround': nround,\r\n                'Math2.num_integrate': Math2.num_integrate\r\n            },\r\n            factor: {\r\n                'Math2.ifactor': Math2.ifactor,\r\n                'Symbol': Symbol\r\n            },\r\n            num_integrate: {\r\n                'Math2.simpson': Math2.simpson,\r\n                'nround': nround\r\n            },\r\n            fib: {\r\n                'even': even\r\n            }\r\n        },\r\n        /* Some functions need to be made numeric safe. Build checks if there's a\r\n         * reformat option and calls that instead when compiling the function string.\r\n         */\r\n        reformat: {\r\n            // this simply extends the build function\r\n            diff: function (symbol, deps) {\r\n                var v = symbol.args[1].toString();\r\n                var f = 'var f = ' + Build.build(symbol.args[0].toString(), [v]) + ';';\r\n                deps[1] += 'var diff = ' + Math2.diff.toString() + ';';\r\n                deps[1] += f;\r\n\r\n                return ['diff(f)(' + v + ')', deps];\r\n            }\r\n        },\r\n        getProperName: function (f) {\r\n            var map = {\r\n                continued_fraction: 'continuedFraction'\r\n            };\r\n            return map[f] || f;\r\n        },\r\n        // assumes that dependences are at max 2 levels\r\n        compileDependencies: function (f, deps) {\r\n            // grab the predefined dependiences\r\n            var dependencies = Build.dependencies[f];\r\n\r\n            // the dependency string\r\n            var dep_string = deps && deps[1] ? deps[1] : '';\r\n\r\n            // the functions to be replaced\r\n            var replacements = deps && deps[0] ? deps[0] : {};\r\n\r\n            // loop through them and add them to the list\r\n            for(var x in dependencies) {\r\n                if(typeof dependencies[x] === 'object')\r\n                    continue; // skip object\r\n                var components = x.split('.'); //Math.f becomes f\r\n                // if the function isn't part of an object then reference the function itself\r\n                dep_string += 'var ' + (components.length > 1 ? components[1] : components[0]) + '=' + dependencies[x] + ';';\r\n                replacements[x] = components.pop();\r\n            }\r\n\r\n            return [replacements, dep_string];\r\n        },\r\n        getArgsDeps: function (symbol, dependencies) {\r\n            var args = symbol.args;\r\n            for(var i = 0; i < args.length; i++) {\r\n                symbol.args[i].each(function (x) {\r\n                    if(x.group === FN)\r\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\r\n                });\r\n            }\r\n            return dependencies;\r\n        },\r\n        build: function (symbol, arg_array) {\r\n            symbol = block('PARSE2NUMBER', function () {\r\n                return _.parse(symbol);\r\n            }, true);\r\n            var args = variables(symbol);\r\n            var supplements = [];\r\n            var dependencies = [];\r\n            var ftext = function (symbol, xports) {\r\n                //Fix for #545 - Parentheses confuse build.\r\n                if(symbol.fname === '') {\r\n                    symbol = Symbol.unwrapPARENS(symbol);\r\n                }\r\n                xports = xports || [];\r\n                var c = [],\r\n                        group = symbol.group,\r\n                        prefix = '';\r\n\r\n                var ftext_complex = function (group) {\r\n                    var d = group === CB ? '*' : '+',\r\n                            cc = [];\r\n\r\n                    for(var x in symbol.symbols) {\r\n                        var sym = symbol.symbols[x],\r\n                                ft = ftext(sym, xports)[0];\r\n                        // wrap it in brackets if it's group PL or CP\r\n                        if(sym.isComposite())\r\n                            ft = inBrackets(ft);\r\n                        cc.push(ft);\r\n                    }\r\n                    var retval = cc.join(d);\r\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\r\n                    return retval;\r\n                },\r\n                        ftext_function = function (bn) {\r\n                            var retval;\r\n                            if(bn in Math)\r\n                                retval = 'Math.' + bn;\r\n                            else {\r\n                                bn = Build.getProperName(bn);\r\n                                if(supplements.indexOf(bn) === -1) { // make sure you're not adding the function twice\r\n                                    //Math2 functions aren't part of the standard javascript\r\n                                    //Math library and must be exported.\r\n                                    xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\r\n                                    supplements.push(bn);\r\n                                }\r\n                                retval = bn;\r\n                            }\r\n                            retval = retval + inBrackets(symbol.args.map(function (x) {\r\n                                return ftext(x, xports)[0];\r\n                            }).join(','));\r\n\r\n                            return retval;\r\n                        };\r\n\r\n                // the multiplier\r\n                if(group === N)\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                else if(symbol.multiplier.equals(-1))\r\n                    prefix = '-';\r\n                else if(!symbol.multiplier.equals(1))\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                // the value\r\n                var value;\r\n\r\n                if(group === S || group === P)\r\n                    value = symbol.value;\r\n                else if(group === FN) {\r\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    if(Build.reformat[symbol.fname]) {\r\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\r\n                        dependencies = components[1];\r\n                        value = components[0];\r\n                    }\r\n                    else {\r\n                        value = ftext_function(symbol.fname);\r\n                    }\r\n\r\n                }\r\n                else if(group === EX) {\r\n                    var pg = symbol.previousGroup;\r\n                    if(pg === N || pg === S)\r\n                        value = symbol.value;\r\n                    else if(pg === FN) {\r\n                        value = ftext_function(symbol.fname);\r\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    }\r\n                    else\r\n                        value = ftext_complex(symbol.previousGroup);\r\n                }\r\n                else {\r\n                    value = ftext_complex(symbol.group);\r\n                }\r\n\r\n                if(symbol.group !== N && !symbol.power.equals(1)) {\r\n                    var pow = ftext(_.parse(symbol.power));\r\n                    xports.push(pow[1]);\r\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\r\n                }\r\n\r\n                if(value)\r\n                    c.push(prefix + value);\r\n\r\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\r\n            };\r\n            if(arg_array) {\r\n                // Fix for issue #546\r\n                // Disable argument checking since it's a bit presumptuous.\r\n                // Consider f(x) = 5; If I explicitely pass in an argument array contain x \r\n                // this check will fail and complain since the function doesn't contain x.\r\n                /*\r\n                 for (var i = 0; i < args.length; i++) {\r\n                 var arg = args[i];\r\n                 if (arg_array.indexOf(arg) === -1)\r\n                 err(arg + ' not found in argument array');\r\n                 }\r\n                 */\r\n                args = arg_array;\r\n            }\r\n\r\n            var f_array = ftext(symbol);\r\n\r\n            // make all the substitutions;\r\n            for(var x in dependencies[0]) {\r\n                var alias = dependencies[0][x];\r\n                f_array[1] = f_array[1].replace(x, alias);\r\n                dependencies[1] = dependencies[1].replace(x, alias);\r\n            }\r\n\r\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\r\n\r\n            return f;\r\n        }\r\n    };\r\n\r\n\r\n//finalize =====================================================================\r\n    /* FINALIZE */\r\n    (function () {\r\n        reserveNames(_.CONSTANTS);\r\n        reserveNames(_.functions);\r\n        _.initConstants();\r\n        //bug fix for error but needs to be revisited\r\n        if(!_.error)\r\n            _.error = err;\r\n\r\n        //Store the log and log10 functions\r\n        Settings.LOG_FNS = {\r\n            log: _.functions['log'],\r\n            log10: _.functions['log10']\r\n        };\r\n\r\n    })();\r\n\r\n    /* END FINALIZE */\r\n\r\n//Core =========================================================================\r\n    var Utils = {\r\n        allSame: allSame,\r\n        allNumeric: allNumeric,\r\n        arguments2Array: arguments2Array,\r\n        arrayAddSlices: arrayAddSlices,\r\n        arrayClone: arrayClone,\r\n        arrayMax: arrayMax,\r\n        arrayMin: arrayMin,\r\n        arrayEqual: arrayEqual,\r\n        arrayUnique: arrayUnique,\r\n        arrayGetVariables: arrayGetVariables,\r\n        arraySum: arraySum,\r\n        block: block,\r\n        build: Build.build,\r\n        clearU: clearU,\r\n        comboSort: comboSort,\r\n        compare: compare,\r\n        convertToVector: convertToVector,\r\n        customError: customError,\r\n        customType: customType,\r\n        decompose_fn: decompose_fn,\r\n        each: each,\r\n        evaluate: evaluate,\r\n        even: even,\r\n        evenFraction: evenFraction,\r\n        fillHoles: fillHoles,\r\n        firstObject: firstObject,\r\n        format: format,\r\n        generatePrimes: generatePrimes,\r\n        getCoeffs: getCoeffs,\r\n        getU: getU,\r\n        importFunctions: importFunctions,\r\n        inBrackets: inBrackets,\r\n        isArray: isArray,\r\n        isExpression: isExpression,\r\n        isFraction: isFraction,\r\n        isInt: isInt,\r\n        isMatrix: isMatrix,\r\n        isNegative: isNegative,\r\n        isNumericSymbol: isNumericSymbol,\r\n        isPrime: isPrime,\r\n        isReserved: isReserved,\r\n        isSymbol: isSymbol,\r\n        isVariableSymbol: isVariableSymbol,\r\n        isVector: isVector,\r\n        keys: keys,\r\n        knownVariable: knownVariable,\r\n        nroots: nroots,\r\n        remove: remove,\r\n        reserveNames: reserveNames,\r\n        range: range,\r\n        round: nround,\r\n        sameSign: sameSign,\r\n        scientificToDecimal: scientificToDecimal,\r\n        separate: separate,\r\n        stringReplace: stringReplace,\r\n        text: text,\r\n        validateName: validateName,\r\n        variables: variables,\r\n        warn: warn\r\n    };\r\n\r\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\r\n    //to be used.\r\n    var C = {\r\n        groups: Groups,\r\n        Symbol: Symbol,\r\n        Expression: Expression,\r\n        Frac: Frac,\r\n        Vector: Vector,\r\n        Matrix: Matrix,\r\n        Parser: Parser,\r\n        Scientific: Scientific,\r\n        Fraction: Fraction,\r\n        Math2: Math2,\r\n        LaTeX: LaTeX,\r\n        Utils: Utils,\r\n        PARSER: _,\r\n        PARENTHESIS: PARENTHESIS,\r\n        Settings: Settings,\r\n        err: err,\r\n        bigInt: bigInt,\r\n        bigDec: bigDec,\r\n        exceptions: exceptions\r\n    };\r\n\r\n//libExports ===================================================================\r\n    /**\r\n     *\r\n     * @param {String} expression the expression to be evaluated\r\n     * @param {Object} subs the object containing the variable values\r\n     * @param {Integer} location a specific location in the equation list to\r\n     * insert the evaluated expression\r\n     * @param {String} option additional options\r\n     * @returns {Expression}\r\n     */\r\n    var libExports = function (expression, subs, option, location) {\r\n        // Initiate the numer flag\r\n        var numer = false;\r\n\r\n        // Is the user declaring a function?\r\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\r\n        if(fndec)\r\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\r\n\r\n        // var variable, fn, args;\r\n        // Convert any expression passed in to a string\r\n        if(expression instanceof Expression)\r\n            expression = expression.toString();\r\n\r\n        // Convert it to an array for simplicity\r\n        if(!isArray(option)) {\r\n            option = typeof option === 'undefined' ? [] : [option];\r\n        }\r\n\r\n        option.forEach(function (o) {\r\n            // Turn on the numer flag if requested\r\n            if(o === 'numer') {\r\n                numer = true;\r\n                return;\r\n            }\r\n            // Wrap it in a function if requested. This only holds true for\r\n            // functions that take a single argument which is the expression\r\n            var f = _.functions[option];\r\n            // If there's a function and it takes a single argument, then wrap\r\n            // the expression in it\r\n            if(f && f[1] === 1) {\r\n                expression = `${o}(${expression})`;\r\n            }\r\n        });\r\n\r\n        var e = block('PARSE2NUMBER', function () {\r\n            return _.parse(expression, subs);\r\n        }, numer || Settings.PARSE2NUMBER);\r\n\r\n        if(location) {\r\n            EXPRESSIONS[location - 1] = e;\r\n        }\r\n        else {\r\n            EXPRESSIONS.push(e);\r\n        }\r\n\r\n        return new Expression(e);\r\n    };\r\n    /**\r\n     * Converts expression into rpn form\r\n     * @param {String} expression\r\n     * @returns {Token[]}\r\n     */\r\n    libExports.rpn = function (expression) {\r\n        return _.tokenize(_.toRPN(expression));\r\n    };\r\n\r\n    /**\r\n     * Generates LaTeX from expression string\r\n     * @param {String} e\r\n     * @param {object} opt\r\n     * @returns {String}\r\n     */\r\n    libExports.convertToLaTeX = function (e, opt) {\r\n        return _.toTeX(e, opt);\r\n    };\r\n\r\n    /**\r\n     * Converts latex to text - Very very very basic at the moment\r\n     * @param {String} e\r\n     * @returns {String}\r\n     */\r\n    libExports.convertFromLaTeX = function (e) {\r\n        var txt = LaTeX.parse(_.tokenize(e));\r\n        return new Expression(_.parse(txt));\r\n    };\r\n\r\n    /**\r\n     * Get the version of nerdamer or a loaded add-on\r\n     * @param {String} add_on - The add-on being checked\r\n     * @returns {String} returns the version of nerdamer\r\n     */\r\n    libExports.version = function (add_on) {\r\n        if(add_on) {\r\n            try {\r\n                return C[add_on].version;\r\n            }\r\n            catch(e) {\r\n                return \"No module named \" + add_on + \" found!\";\r\n            }\r\n        }\r\n        return version;\r\n    };\r\n\r\n    /**\r\n     * Get nerdamer generated warnings\r\n     * @returns {String[]}\r\n     */\r\n    libExports.getWarnings = function () {\r\n        return WARNINGS;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} constant The name of the constant to be set\r\n     * @param {mixed} value The value of the constant\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setConstant = function (constant, value) {\r\n        validateName(constant);\r\n        if(!isReserved(constant)) {\r\n            //fix for issue #127\r\n            if(value === 'delete' || value === '') {\r\n                delete _.CONSTANTS[constant];\r\n            }\r\n            else {\r\n                if(isNaN(value))\r\n                    throw new NerdamerTypeError('Constant must be a number!');\r\n                _.CONSTANTS[constant] = value;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a previously set constant\r\n     * @param {type} constant\r\n     * @returns {String}\r\n     */\r\n    libExports.getConstant = function (constant) {\r\n        return String(_.constant[constant]);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} name The name of the function\r\n     * @param {Array} params_array A list containing the parameter name of the functions\r\n     * @param {String} body The body of the function\r\n     * @returns {Boolean} returns true if succeeded and falls on fail\r\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n     */\r\n    libExports.setFunction = setFunction;\r\n\r\n    /**\r\n     *\r\n     * @returns {C} Exports the nerdamer core functions and objects\r\n     */\r\n    libExports.getCore = function () {\r\n        return C;\r\n    };\r\n\r\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n     * @returns {String|Array}\r\n     */\r\n    libExports.reserved = function (asArray) {\r\n        if(asArray) {\r\n            return RESERVED;\r\n        }\r\n        return RESERVED.join(', ');\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Integer} equation_number the number of the equation to clear.\r\n     * If 'all' is supplied then all equations are cleared\r\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\r\n        if(equation_number === 'all') {\r\n            EXPRESSIONS = [];\r\n        }\r\n        else if(equation_number === 'last') {\r\n            EXPRESSIONS.pop();\r\n        }\r\n        else if(equation_number === 'first') {\r\n            EXPRESSIONS.shift();\r\n        }\r\n        else {\r\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\r\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Alias for nerdamer.clear('all')\r\n     */\r\n    libExports.flush = function () {\r\n        this.clear('all');\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asObject\r\n     * @param {Boolean} asLaTeX\r\n     * @param {String|String[]} option\r\n     * @returns {Array}\r\n     */\r\n    libExports.expressions = function (asObject, asLaTeX, option) {\r\n        var result = asObject ? {} : [];\r\n        for(var i = 0; i < EXPRESSIONS.length; i++) {\r\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\r\n            asObject ? result[i + 1] = eq : result.push(eq);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //the method for registering modules\r\n    libExports.register = function (obj) {\r\n        var core = this.getCore();\r\n\r\n        if(isArray(obj)) {\r\n            for(var i = 0; i < obj.length; i++) {\r\n                if(obj)\r\n                    this.register(obj[i]);\r\n            }\r\n        }\r\n        else if(obj && Settings.exclude.indexOf(obj.name) === -1) {\r\n            //make sure all the dependencies are available\r\n            if(obj.dependencies) {\r\n                for(var i = 0; i < obj.dependencies.length; i++)\r\n                    if(!core[obj.dependencies[i]])\r\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\r\n            }\r\n            //if no parent object is provided then the function does not have an address and cannot be called directly\r\n            var parent_obj = obj.parent,\r\n                    fn = obj.build.call(core); //call constructor to get function\r\n            if(parent_obj) {\r\n                if(!core[parent_obj])\r\n                    core[obj.parent] = {};\r\n\r\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\r\n                //attach the function to the core\r\n                ref_obj[obj.name] = fn;\r\n            }\r\n            if(obj.visible)\r\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} name variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validateName = validateName;\r\n\r\n    /**\r\n     * @param {String} varname variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validVarName = function (varname) {\r\n        try {\r\n            validateName(varname);\r\n            return RESERVED.indexOf(varname) === -1;\r\n        }\r\n        catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Array} Array of functions currently supported by nerdamer\r\n     */\r\n    libExports.supported = function () {\r\n        return keys(_.functions);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Number} The number equations/expressions currently loaded\r\n     */\r\n    libExports.numEquations = libExports.numExpressions = function () {\r\n        return EXPRESSIONS.length;\r\n    };\r\n    /* END EXPORTS */\r\n\r\n    /**\r\n     *\r\n     * @param {String} v variable to be set\r\n     * @param {String} val value of variable. This can be a variable expression or number\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setVar = function (v, val) {\r\n        validateName(v);\r\n        //check if it's not already a constant\r\n        if(v in _.CONSTANTS)\r\n            err('Cannot set value for constant ' + v);\r\n        if(val === 'delete' || val === '')\r\n            delete VARS[v];\r\n        else {\r\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a set variable\r\n     * @param {type} v\r\n     * @returns {varies}\r\n     */\r\n    libExports.getVar = function (v) {\r\n        return VARS[v];\r\n    };\r\n    /**\r\n     * Clear the variables from the VARS object\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clearVars = function () {\r\n        VARS = {};\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Function} loader\r\n     * @returns {nerdamer}\r\n     */\r\n    libExports.load = function (loader) {\r\n        loader.call(this);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n     * @param {String|String[]} option\r\n     * @returns {Object} Returns an object with the variables\r\n     */\r\n    libExports.getVars = function (output, option) {\r\n        output = output || 'text';\r\n        var variables = {};\r\n        if(output === 'object')\r\n            variables = VARS;\r\n        else {\r\n            for(var v in VARS) {\r\n                if(output === 'latex') {\r\n                    variables[v] = VARS[v].latex(option);\r\n                }\r\n                else if(output === 'text') {\r\n                    variables[v] = VARS[v].text(option);\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    };\r\n\r\n    /**\r\n     * Set the value of a setting\r\n     * @param {String} setting The setting to be changed\r\n     * @param {boolean} value\r\n     */\r\n    libExports.set = function (setting, value) {\r\n        //current options:\r\n        //PARSE2NUMBER, suppress_errors\r\n        if(typeof setting === 'object')\r\n            for(var x in setting) {\r\n                libExports.set(x, setting[x]);\r\n            }\r\n\r\n        var disallowed = ['SAFE'];\r\n        if(disallowed.indexOf(setting) !== -1)\r\n            err('Cannot modify setting: ' + setting);\r\n\r\n        if(setting === 'PRECISION') {\r\n            bigDec.set({precision: value});\r\n            Settings.PRECISION = value;\r\n\r\n            // Avoid that nerdamer puts out garbage after 21 decimal place\r\n            if(value > 21) {\r\n                this.set('USE_BIG', true);\r\n            }\r\n        }\r\n        else if(setting === 'USE_LN' && value === true) {\r\n            //set log as LN\r\n            Settings.LOG = 'LN';\r\n            //set log10 as log\r\n            Settings.LOG10 = 'log';\r\n            //point the functions in the right direction\r\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\r\n            //the log10 function must be explicitly set\r\n            _.functions['log'][0] = function (x) {\r\n                if(x.isConstant())\r\n                    return new Symbol(Math.log10(x));\r\n                return _.symfunction(Settings.LOG10, [x]);\r\n            };\r\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\r\n\r\n            //remove log10\r\n            delete _.functions['log10'];\r\n        }\r\n        else\r\n            Settings[setting] = value;\r\n    };\r\n\r\n    /**\r\n     * Get the value of a setting\r\n     * @param {type} setting\r\n     * @returns {undefined}\r\n     */\r\n    libExports.get = function (setting) {\r\n        return Settings[setting];\r\n    };\r\n\r\n    /**\r\n     * This functions makes internal functions available externally\r\n     * @param {bool} override Override the functions when calling updateAPI if it exists\r\n     */\r\n    libExports.updateAPI = function (override) {\r\n        //Map internal functions to external ones\r\n        var linker = function (fname) {\r\n            return function () {\r\n                var args = [].slice.call(arguments);\r\n                for(var i = 0; i < args.length; i++)\r\n                    args[i] = _.parse(args[i]);\r\n                return new Expression(block('PARSE2NUMBER', function () {\r\n                    return _.callfunction(fname, args);\r\n                }));\r\n            };\r\n        };\r\n        //perform the mapping\r\n        for(var x in _.functions)\r\n            if(!(x in libExports) || override)\r\n                libExports[x] = linker(x);\r\n    };\r\n\r\n    libExports.replaceFunction = function (name, fn, num_args) {\r\n        var existing = _.functions[name];\r\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\r\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\r\n    };\r\n\r\n    libExports.setOperator = function (operator, shift) {\r\n        _.setOperator(operator, shift);\r\n    };\r\n\r\n    libExports.getOperator = function (operator) {\r\n        return _.getOperator(operator);\r\n    };\r\n\r\n    libExports.aliasOperator = function (operator, withOperator) {\r\n        _.aliasOperator(operator, withOperator);\r\n    };\r\n\r\n    libExports.tree = function (expression) {\r\n        return _.tree(_.toRPN(_.tokenize(expression)));\r\n    };\r\n\r\n    libExports.htmlTree = function (expression, indent) {\r\n        var tree = this.tree(expression);\r\n\r\n        return '<div class=\"tree\">\\n' +\r\n                '    <ul>\\n' +\r\n                '        <li>\\n' +\r\n                tree.toHTML(3, indent) + '\\n' +\r\n                '        </li>\\n' +\r\n                '    </ul>\\n' +\r\n                '</div>';\r\n    };\r\n\r\n    libExports.addPeeker = function (name, f) {\r\n        if(_.peekers[name])\r\n            _.peekers[name].push(f);\r\n    };\r\n\r\n    libExports.removePeeker = function (name, f) {\r\n        remove(_.peekers[name], f);\r\n    };\r\n\r\n    libExports.parse = function (e) {\r\n        return String(e).split(';').map(function (x) {\r\n            return _.parse(x);\r\n        });\r\n    };\r\n\r\n    libExports.updateAPI();\r\n\r\n    return libExports; //Done\r\n//imports ======================================================================\r\n})({\r\n    //https://github.com/peterolson/BigInteger.js\r\n    bigInt: (function(){\r\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\r\n        return bigInt;\r\n    })(),\r\n    /*\r\n     *  decimal.js v10.2.1\r\n     *  An arbitrary-precision Decimal type for JavaScript.\r\n     *  https://github.com/MikeMcl/decimal.js\r\n     *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n     *  MIT Licence\r\n     */\r\n    bigDec: function(n){\"use strict\";var e,i,t,r,s=9e15,o=1e9,u=\"0123456789abcdef\",c=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",f=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-s,maxE:s,crypto:!1},h=!0,d=\"[DecimalError] \",l=d+\"Invalid argument: \",p=d+\"Precision limit exceeded\",g=d+\"crypto unavailable\",m=Math.floor,w=Math.pow,v=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,N=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,b=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,E=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,x=1e7,y=7,M=c.length-1,q=f.length-1,O={name:\"[object Decimal]\"};function D(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=y-t.length)&&(s+=k(i)),s+=t;o=n[e],(i=y-(t=o+\"\").length)&&(s+=k(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(l+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=y,r=0):(r=Math.ceil((e+1)/y),e%=y),s=w(10,y-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function S(n,e,i){for(var t,r,s=[0],o=0,c=n.length;o<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=u.indexOf(n.charAt(o++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}O.absoluteValue=O.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},O.ceil=function(){return P(new this.constructor(this),this.e+1,2)},O.comparedTo=O.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},O.cosine=O.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=(1/z(4,i)).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=J(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,G(t,i)),t.precision=n,t.rounding=e,P(2==r||3==r?i.neg():i,n,e,!0)):new t(1):new t(NaN)},O.cubeRoot=O.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*w(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=D(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=w(i,1/3),n=m((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),D(u.d).slice(0,o)===(i=D(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},O.decimalPlaces=O.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-m(this.e/y))*y,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},O.dividedBy=O.div=function(n){return Z(this,new this.constructor(n))},O.dividedToIntegerBy=O.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},O.equals=O.eq=function(n){return 0===this.cmp(n)},O.floor=function(){return P(new this.constructor(this),this.e+1,3)},O.greaterThan=O.gt=function(n){return this.cmp(n)>0},O.greaterThanOrEqualTo=O.gte=function(n){var e=this.cmp(n);return 1==e||0===e},O.hyperbolicCosine=O.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?e=(1/z(4,n=Math.ceil(r/3))).toString():(n=16,e=\"2.3283064365386962890625e-10\"),s=J(o,1,s.times(e),new o(1),!0);for(var c,f=n,a=new o(8);f--;)c=s.times(s),s=u.minus(c.times(a.minus(c.times(a))));return P(s,o.precision=i,o.rounding=t,!0)},O.hyperbolicSine=O.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=J(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=J(s,2,r=r.times(1/z(5,n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},O.hyperbolicTangent=O.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},O.inverseCosine=O.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?U(i,r,s):new i(0):new i(NaN):e.isZero()?U(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=U(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},O.inverseHyperbolicCosine=O.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},O.inverseHyperbolicSine=O.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},O.inverseHyperbolicTangent=O.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},O.inverseSine=O.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=U(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},O.inverseTangent=O.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=q)return(o=U(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=q)return(o=U(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/y+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/y),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},O.isFinite=function(){return!!this.d},O.isInteger=O.isInt=function(){return!!this.d&&m(this.e/y)>this.d.length-2},O.isNaN=function(){return!this.s},O.isNegative=O.isNeg=function(){return this.s<0},O.isPositive=O.isPos=function(){return this.s>0},O.isZero=function(){return!!this.d&&0===this.d[0]},O.lessThan=O.lt=function(n){return this.cmp(n)<0},O.lessThanOrEqualTo=O.lte=function(n){return this.cmp(n)<1},O.logarithm=O.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=V(this,u=a+5),t=e?T(f,u+10):V(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=V(this,u+=10),t=e?T(f,u+10):V(n,u),c=Z(o,t,u,1),!s){+D(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},O.minus=O.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,g=p.constructor;if(n=new g(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new g(n.d||p.s!==n.s?p:NaN):n=new g(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=g.precision,c=g.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new g(3===c?-0:0);n=new g(p)}return h?P(n,u,c):n}if(i=m(n.e/y),a=m(p.e/y),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/y),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=x-1;--f[r],f[t]+=x}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new g(3===c?-0:0)},O.modulo=O.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},O.naturalExponential=O.exp=function(){return B(this)},O.naturalLogarithm=O.ln=function(){return V(this)},O.negated=O.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},O.plus=O.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=m(d.e/y),t=m(n.e/y),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/y))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/x|0,f[r]%=x;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},O.precision=O.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(l+n);return i.d?(e=_(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},O.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},O.sine=O.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return J(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(1/z(5,i)),e=J(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,G(t,i)),t.precision=n,t.rounding=e,P(r>2?i.neg():i,n,e,!0)):new t(NaN)},O.squareRoot=O.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=D(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=m((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"5e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),D(s.d).slice(0,i)===(e=D(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},O.tangent=O.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Z(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,P(2==r||4==r?i.neg():i,n,e,!0)):new t(NaN)},O.times=O.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=m(a.e/y)+m(n.e/y),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%x|0,e=u/x|0;s[r]=(s[r]+e)%x|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},O.toBinary=function(n,e){return K(this,2,n,e)},O.toDecimalPlaces=O.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,o),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},O.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toFixed=function(n,e){var i,t,r=this,s=r.constructor;return void 0===n?i=R(r):(F(n,0,o),void 0===e?e=s.rounding:F(e,0,8),i=R(t=P(new s(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},O.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,d,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=_(m)-g.e-1)%y,e.d[0]=w(10,o<0?y+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(l+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(D(m)),a=v.precision,v.precision=s=m.length*y*2;d=Z(u,e,0,1,1),1!=(r=i.plus(d.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(d.times(r)),c=r,r=e,e=u.minus(d.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},O.toHexadecimal=O.toHex=function(n,e){return K(this,16,n,e)},O.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},O.toNumber=function(){return+this},O.toOctal=function(n,e){return K(this,8,n,e)},O.toPower=O.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=m(n.e/y))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=C(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:m(f*(Math.log(\"0.\"+D(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=B(n.times(V(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+D((r=P(B(n.times(V(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},O.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toSignificantDigits=O.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,o),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},O.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},O.truncated=O.trunc=function(){return P(new this.constructor(this),this.e+1,1)},O.valueOf=O.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var a,h,d,l,p,g,w,v,N,b,E,M,q,O,D,F,A,S,Z,R,L=r.constructor,T=r.s==s.s?1:-1,U=r.d,_=s.d;if(!(U&&U[0]&&_&&_[0]))return new L(r.s&&s.s&&(U?!_||U[0]!=_[0]:_)?U&&0==U[0]||!_?0*T:T/0:NaN);for(f?(p=1,h=r.e-s.e):(f=x,p=y,h=m(r.e/p)-m(s.e/p)),Z=_.length,A=U.length,b=(N=new L(T)).d=[],d=0;_[d]==(U[d]||0);d++);if(_[d]>(U[d]||0)&&h--,null==o?(O=o=L.precision,u=L.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),g=!0;else{if(O=O/p+2|0,d=0,1==Z){for(l=0,_=_[0],O++;(d<A||l)&&O--;d++)D=l*f+(U[d]||0),b[d]=D/_|0,l=D%_|0;g=l||d<A}else{for((l=f/(_[0]+1)|0)>1&&(_=n(_,l,f),U=n(U,l,f),Z=_.length,A=U.length),F=Z,M=(E=U.slice(0,Z)).length;M<Z;)E[M++]=0;(R=_.slice()).unshift(0),S=_[0],_[1]>=f/2&&++S;do{l=0,(a=e(_,E,Z,M))<0?(q=E[0],Z!=M&&(q=q*f+(E[1]||0)),(l=q/S|0)>1?(l>=f&&(l=f-1),1==(a=e(w=n(_,l,f),E,v=w.length,M=E.length))&&(l--,t(w,Z<v?R:_,v,f))):(0==l&&(a=l=1),w=_.slice()),(v=w.length)<M&&w.unshift(0),t(E,w,M,f),-1==a&&(a=e(_,E,Z,M=E.length))<1&&(l++,t(E,Z<M?R:_,M,f)),M=E.length):0===a&&(l++,E=[0]),b[d++]=l,a&&E[0]?E[M++]=U[F]||0:(E=[U[F]],M=1)}while((F++<A||void 0!==E[0])&&O--);g=void 0!==E[0]}b[0]||b.shift()}if(1==p)N.e=h,i=g;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+h*p-1,P(N,c?o+N.e+1:o,u,g)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=y,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/y))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=y)-y+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=y)-y+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(y-e%y)%y),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,y-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==x&&(d[0]=1));break}if(d[l]+=u,d[l]!=x)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return j(n);var t,r=n.e,s=D(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+k(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+k(-r-1)+s,i&&(t=i-o)>0&&(s+=k(t))):r>=o?(s+=k(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+k(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=k(t))),s}function L(n,e){var i=n[0];for(e*=y;i>=10;i/=10)e++;return e}function T(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(p);return P(new n(c),e,1,!0)}function U(n,e,i){if(e>q)throw Error(p);return P(new n(f),e,i,!0)}function _(n){var e=n.length-1,i=e*y+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function k(n){for(var e=\"\";n--;)e+=\"0\";return e}function C(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/y+4);for(h=!1;;){if(i%2&&Q((s=s.times(e)).d,o)&&(r=!0),0===(i=m(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}Q((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function H(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function B(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),D((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===D(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function V(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,m=g.d,w=g.constructor,v=w.rounding,N=w.precision;if(g.s<0||!m||!m[0]||!g.e&&1==m[0]&&1==m.length)return new w(m&&!m[0]?-1/0:1!=g.s?NaN:m?0:g);if(null==e?(h=!1,a=N):a=e,w.precision=a+=10,t=(i=D(m)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=T(w,a+2,N).times(s+\"\"),g=V(new w(t+\".\"+i.slice(1)),a-10).plus(f),w.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=D((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new w(\"0.\"+i),s++):g=new w(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),D((f=c.plus(Z(o,new w(r),a,1))).d).slice(0,a)===D(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(T(w,a+2,N).times(s+\"\"))),c=Z(c,new w(p),a,1),null!=e)return w.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,w.precision=N,v,h=!0);w.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function j(n){return String(n.s*n.s/0)}function $(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%y,i<0&&(t+=y),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=y;t<r;)n.d.push(+e.slice(t,t+=y));e=e.slice(t),t=y-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function W(n,i){var t,r,s,o,u,c,f,a,d;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(N.test(i))t=16,i=i.toLowerCase();else if(v.test(i))t=2;else{if(!b.test(i))throw Error(l+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=C(r,new r(t),o,2*o)),o=d=(a=S(i,t,x)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,d),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?w(2,f):e.pow(2,f))),h=!0,n)}function J(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/y);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function z(n,e){for(var i=n;--e;)i*=n;return i}function G(n,e){var i,t=e.s<0,s=U(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return r=t?4:1,e;if((i=e.divToInt(s)).isZero())r=t?3:2;else{if((e=e.minus(i.times(s))).lte(o))return r=I(i)?t?2:3:t?4:1,e;r=I(i)?t?1:4:t?3:2}return e.minus(s).abs()}function K(n,e,t,r){var s,c,f,a,h,d,l,p,g,m=n.constructor,w=void 0!==t;if(w?(F(t,1,o),void 0===r?r=m.rounding:F(r,0,8)):(t=m.precision,r=m.rounding),n.isFinite()){for(w?(s=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):s=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new m(1)).e=l.length-f,g.d=S(R(g),10,s),g.e=g.d.length),c=h=(p=S(l,10,s)).length;0==p[--h];)p.pop();if(p[0]){if(f<0?c--:((n=new m(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,s)).d,c=n.e,d=i),f=p[t],a=s/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>a||f===a&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>s-1;)p[t]=0,t||(++c,p.unshift(1));for(h=p.length;!p[h-1];--h);for(f=0,l=\"\";f<h;f++)l+=u.charAt(p[f]);if(w){if(h>1)if(16==e||8==e){for(f=16==e?4:3,--h;h%f;h++)l+=\"0\";for(h=(p=S(l,s,e)).length;!p[h-1];--h);for(f=1,l=\"1.\";f<h;f++)l+=u.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>h)for(c-=h;c--;)l+=\"0\";else c<h&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=w?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=j(n);return n.s<0?\"-\"+l:l}function Q(n,e){if(n.length>e)return n.length=e,!0}function X(n){return new this(n).abs()}function Y(n){return new this(n).acos()}function nn(n){return new this(n).acosh()}function en(n,e){return new this(n).plus(e)}function tn(n){return new this(n).asin()}function rn(n){return new this(n).asinh()}function sn(n){return new this(n).atan()}function on(n){return new this(n).atanh()}function un(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?U(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=U(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=U(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=U(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function cn(n){return new this(n).cbrt()}function fn(n){return P(n=new this(n),n.e+1,2)}function an(n){if(!n||\"object\"!=typeof n)throw Error(d+\"Object expected\");var e,i,t,r=!0===n.defaults,u=[\"precision\",1,o,\"rounding\",0,8,\"toExpNeg\",-s,0,\"toExpPos\",0,s,\"maxE\",0,s,\"minE\",-s,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!(m(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(l+i+\": \"+t);this[i]=t}if(i=\"crypto\",r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(l+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(g);this[i]=!0}else this[i]=!1}return this}function hn(n){return new this(n).cos()}function dn(n){return new this(n).cosh()}function ln(n,e){return new this(n).div(e)}function pn(n){return new this(n).exp()}function gn(n){return P(n=new this(n),n.e+1,3)}function mn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function wn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function vn(n){return new this(n).ln()}function Nn(n,e){return new this(n).log(e)}function bn(n){return new this(n).log(2)}function En(n){return new this(n).log(10)}function xn(){return H(this,arguments,\"lt\")}function yn(){return H(this,arguments,\"gt\")}function Mn(n,e){return new this(n).mod(e)}function qn(n,e){return new this(n).mul(e)}function On(n,e){return new this(n).pow(e)}function Dn(n){var e,i,t,r,s=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,o),t=Math.ceil(n/y),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));s<t;)(r=e[s])>=429e7?e[s]=crypto.getRandomValues(new Uint32Array(1))[0]:c[s++]=r%1e7;else{if(!crypto.randomBytes)throw Error(g);for(e=crypto.randomBytes(t*=4);s<t;)(r=e[s]+(e[s+1]<<8)+(e[s+2]<<16)+((127&e[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,s):(c.push(r%1e7),s+=4);s=t/4}else for(;s<t;)c[s++]=1e7*Math.random()|0;for(t=c[--s],n%=y,t&&n&&(r=w(10,y-n),c[s]=(t/r|0)*r);0===c[s];s--)c.pop();if(s<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=y)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<y&&(i-=y-t)}return u.e=i,u.d=c,u}function Fn(n){return P(n=new this(n),n.e+1,this.rounding)}function An(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function Sn(n){return new this(n).sin()}function Zn(n){return new this(n).sinh()}function Pn(n){return new this(n).sqrt()}function Rn(n,e){return new this(n).sub(e)}function Ln(n){return new this(n).tan()}function Tn(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):$(r,n.toString())}if(\"string\"!==t)throw Error(l+n);return 45===(i=n.charCodeAt(0))?(n=n.slice(1),r.s=-1):(43===i&&(n=n.slice(1)),r.s=1),E.test(n)?$(r,n):W(r,n)}if(s.prototype=O,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=an,s.clone=n,s.isDecimal=wn,s.abs=X,s.acos=Y,s.acosh=nn,s.add=en,s.asin=tn,s.asinh=rn,s.atan=sn,s.atanh=on,s.atan2=un,s.cbrt=cn,s.ceil=fn,s.cos=hn,s.cosh=dn,s.div=ln,s.exp=pn,s.floor=gn,s.hypot=mn,s.ln=vn,s.log=Nn,s.log10=En,s.log2=bn,s.max=xn,s.min=yn,s.mod=Mn,s.mul=qn,s.pow=On,s.random=Dn,s.round=Fn,s.sign=An,s.sin=Sn,s.sinh=Zn,s.sqrt=Pn,s.sub=Rn,s.tan=Ln,s.tanh=Tn,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(a)).default=e.Decimal=e,c=new e(c),f=new e(f),\"function\"==typeof define&&define.amd?define(function(){return e}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(O[Symbol.for(\"nodejs.util.inspect.custom\")]=O.toString,O[Symbol.toStringTag]=\"Decimal\"),module.exports=e):(n||(n=\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=n.Decimal,e.noConflict=function(){return n.Decimal=t,e},n.Decimal=e),e}(this)\r\n//    bigDec: require('decimal.js')\r\n});\r\n\r\nif((typeof module) !== 'undefined') {\r\n    module.exports = nerdamer;\r\n};","import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        'v-data-table--has-top': !!this.$slots.top,\n        'v-data-table--has-bottom': !!this.$slots.bottom,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","interface Unit {\n  formatting: (val: number) => string;\n  unit: string;\n}\n\nconst fixedDigits = (precision: number) => {\n  return (val: number) => val.toFixed(precision);\n};\n\nconst fixedDigitsPercent = (precision: number) => {\n  return (val: number) => (val * 100).toFixed(precision);\n};\nexport const units: Record<string, Unit> = {\n  chipload: { formatting: fixedDigits(4), unit: \"in\" },\n  woc: { formatting: fixedDigits(4), unit: \"in\" },\n  doc: { formatting: fixedDigits(4), unit: \"in\" },\n  rpm: { formatting: fixedDigits(4), unit: \"rpm\" },\n  maxAcceptableDeflection: { formatting: fixedDigits(4), unit: \"in\" },\n  cutterDiameter: { formatting: fixedDigits(4), unit: \"in\" },\n  materialKFactor: { formatting: fixedDigits(1), unit: \"\" },\n  cutterFlutes: { formatting: fixedDigits(0), unit: \"\" },\n  maximumMachineForce: { formatting: fixedDigits(2), unit: \"lbf\" },\n  routerOutputPower: { formatting: fixedDigits(2), unit: \"HP\" },\n  cutterOverallStickout: { formatting: fixedDigits(3), unit: \"in\" },\n  cutterYoungsModulus: { formatting: fixedDigits(4), unit: \"\" },\n  cutterShankDiameter: { formatting: fixedDigits(3), unit: \"in\" },\n  cutterLength: { formatting: fixedDigits(2), unit: \"in\" },\n  adjustedChipload: { formatting: fixedDigits(4), unit: \"in\" },\n  feedrate: { formatting: fixedDigits(0), unit: \"in/min\" },\n  materialRemovalRate: { formatting: fixedDigits(2), unit: \"in^3/min\" },\n  powerUsage: { formatting: fixedDigits(2), unit: \"HP\" },\n  torque: { formatting: fixedDigits(2), unit: \"in*lbf\" },\n  machineForce: { formatting: fixedDigits(2), unit: \"lbf\" },\n  machineForcePercent: { formatting: fixedDigitsPercent(1), unit: \"%\" },\n  availablePowerPercent: { formatting: fixedDigitsPercent(1), unit: \"%\" },\n  routerCutterPowerIncrease: { formatting: fixedDigits(4), unit: \"in\" },\n  maxDeflection: { formatting: fixedDigits(4), unit: \"in\" },\n  maxDeflectionPercent: { formatting: fixedDigitsPercent(1), unit: \"%\" },\n  count: { formatting: fixedDigits(0), unit: \"\" },\n};\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { Store } from \"@/utils/store\";\n\nexport interface Material {\n  name: string;\n  kFactor: number;\n}\n\nexport const materialsStore = new Store<Material[]>(\"materials\", [\n  { name: \"Soft Whitewood\", kFactor: 10 },\n]);\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      const { title, ...switchAttrs } = this.attrs$\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...switchAttrs,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","import { Machine } from \"@/utils/machine\";\nimport { Cutter } from \"@/utils/cutter\";\nimport { Material } from \"@/utils/material\";\nimport { Store } from \"@/utils/store\";\nimport nerdamer from \"nerdamer\";\n\nexport interface Calculator {\n  name: string;\n  machine: Machine;\n  cutter: Cutter;\n  material: Material;\n  chipload: number;\n  woc: number;\n  doc: number;\n  rpm: number;\n  maxAcceptableDeflection: number;\n}\n\nexport const calculatorsStore = new Store<Calculator[]>(\"calculators\", []);\n\nexport const adjustedChipload = (woc: number, cutterDiameter: number) => {\n  if (woc > cutterDiameter / 2) {\n    return \"chipload\";\n  } else {\n    return `\n      (cutterDiameter * chipload) /\n      (2.0 * (cutterDiameter * woc - woc^2)^(1/2))\n    `;\n  }\n};\n\nexport const feedrate = \"cutterFlutes * rpm * adjustedChipload\";\n\nexport const materialRemovalRate = \"feedrate * doc * woc\";\n\nexport const powerUsage = \"materialRemovalRate / materialKFactor\";\n\nexport const torque = \"(powerUsage * 63024.0) / rpm\";\n\nexport const machineForce = \"torque / (cutterDiameter / 2)\";\n\nexport const machineForcePercent = \"machineForce / maximumMachineForce\";\n\nexport const availablePowerPercent = \"powerUsage / routerOutputPower\";\n\nexport const routerCutterPowerIncrease = \"powerUsage * 745.7\";\n\nexport const maxDeflection = (\n  cutterDiameter: number,\n  cutterShankDiameter: number\n) => {\n  if (cutterDiameter < cutterShankDiameter) {\n    return `machineForce *\n      ((cutterLength)^3 /\n        (3 *\n          cutterYoungsModulus *\n          ((pi * (cutterDiameter / 2)^4) / 4)) +\n        ((cutterOverallStickout - cutterLength)^3) /\n        (3 *\n          cutterYoungsModulus *\n          ((pi * (cutterShankDiameter / 2)^4) / 4))\n    )`;\n  } else if (cutterDiameter == cutterShankDiameter) {\n    return `\n      (machineForce * (cutterOverallStickout)^3) /\n      (3 *\n        cutterYoungsModulus *\n        ((pi * (cutterDiameter / 2)^4) / 4))\n    `;\n  } else {\n    return `\n      (machineForce * (cutterOverallStickout)^3) /\n      ((3 *\n        cutterYoungsModulus *\n        pi *\n        (cutterShankDiameter / 2)^4) /\n        4)\n    `;\n  }\n};\n\nexport const maxDeflectionPercent = \"maxDeflection / maxAcceptableDeflection\";\n\nexport interface NerdamerEquations {\n  adjustedChipload: string;\n  feedrate: string;\n  materialRemovalRate: string;\n  powerUsage: string;\n  torque: string;\n  machineForce: string;\n  machineForcePercent: string;\n  availablePowerPercent: string;\n  routerCutterPowerIncrease: string;\n  maxDeflection: string;\n  maxDeflectionPercent: string;\n}\n\nexport const allMathStrings = (\n  woc: number,\n  cutterDiameter: number,\n  cutterShankDiameter: number\n): NerdamerEquations => ({\n  adjustedChipload: adjustedChipload(woc, cutterDiameter),\n  feedrate: feedrate,\n  materialRemovalRate: materialRemovalRate,\n  powerUsage: powerUsage,\n  torque: torque,\n  machineForce: machineForce,\n  machineForcePercent: machineForcePercent,\n  availablePowerPercent: availablePowerPercent,\n  routerCutterPowerIncrease: routerCutterPowerIncrease,\n  maxDeflection: maxDeflection(cutterDiameter, cutterShankDiameter),\n  maxDeflectionPercent: maxDeflectionPercent,\n});\n\nexport interface Inputs {\n  chipload: number;\n  woc: number;\n  doc: number;\n  rpm: number;\n  maxAcceptableDeflection: number;\n  cutterDiameter: number;\n  materialKFactor: number;\n  cutterFlutes: number;\n  maximumMachineForce: number;\n  routerOutputPower: number;\n  cutterOverallStickout: number;\n  cutterYoungsModulus: number;\n  cutterShankDiameter: number;\n  cutterLength: number;\n}\n\nexport const iterativelySubbed = (inputs: Inputs) => {\n  const allMath = allMathStrings(\n    inputs.woc,\n    inputs.cutterDiameter,\n    inputs.cutterShankDiameter\n  );\n  const subbedWithInputs = Object.entries(allMath).reduce(\n    (acc, [key, math]) => {\n      return {\n        ...acc,\n        //@ts-ignore\n        [key]: nerdamer(math, inputs).evaluate(),\n      };\n    },\n    {}\n  );\n\n  const subbedWithOutputs = Object.entries(subbedWithInputs).reduce(\n    (acc, [key, math]) => {\n      return {\n        ...acc,\n        //@ts-ignore\n        [key]: Number(nerdamer(math, acc).evaluate()),\n      };\n    },\n    {}\n  );\n\n  return subbedWithOutputs;\n};\n\nexport const fullySubbed = (\n  key: keyof ReturnType<typeof allMathStrings>,\n  allStrings: Record<string, string>\n): string => {\n  const otherKeysMap = { ...allStrings };\n  delete otherKeysMap[key];\n\n  const otherKeys = Object.keys(otherKeysMap).reverse();\n\n  return otherKeys.slice(1).reduce<string>((acc, ea) => {\n    return nerdamer(acc, { [ea]: otherKeysMap[ea] }).toString();\n  }, nerdamer(allStrings[key], { [otherKeys[0]]: otherKeysMap[otherKeys[0]] }).toString());\n};\n","import { Store } from \"@/utils/store\";\n\nexport class Router {\n  constructor(\n    public inputVoltage: number,\n    public inputCurrent: number,\n    public efficiency: number,\n    public ratedSpeed: number\n  ) {}\n}\n\nexport const getInputPower = (router: Router) => {\n  return router.inputVoltage * router.inputCurrent;\n};\n\nexport const getOutputPower = (router: Router) => {\n  return (getInputPower(router) * router.efficiency) / 745.7;\n};\n\nexport class Machine {\n  constructor(\n    public name: string,\n    public maximumMachineForce: number,\n    public router: Router\n  ) {}\n}\n\nexport const machineStore = new Store<Machine>(\n  \"machine\",\n  new Machine(\"Adam's Shapeoko\", 18.0, new Router(120.0, 6.5, 0.6, 30000.0))\n);\n"],"sourceRoot":""}